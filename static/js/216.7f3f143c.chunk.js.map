{"version":3,"file":"static/js/216.7f3f143c.chunk.js","mappings":"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","sources":["components/panel/index.jsx","components/search/index.jsx","components/section/index.jsx","components/ui/title/index.jsx","modules/agents/containers/AgentsCreateContainer.jsx","modules/agents/pages/AgentsCreatePage.jsx","utils/index.js","../node_modules/react-feather/dist/icons/minus.js","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.div`\r\n  padding: 12px 15px;\r\n  background-color: #F7F7F7;\r\n  width: 100%;\r\n  display: block;\r\n`;\r\n\r\nconst Panel = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Panel;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Styled = styled.form`\r\n  display: flex;\r\n\r\n  .search-form-input {\r\n    padding: 15px 25px;\r\n    border: 1px solid #CDCDCD;\r\n    border-radius: 5px 0px 0px 5px;\r\n    display: block;\r\n    width: 100%;\r\n    outline: none;\r\n    transition: 0.2s ease;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Regular', sans-serif;\r\n\r\n    &:focus {\r\n      border-color: #13D6D1;\r\n    }\r\n  }\r\n\r\n  .search-form-btn {\r\n    padding: 15px 20px;\r\n    min-width: 175px;\r\n    text-align: center;\r\n    border: none;\r\n    background: #13D6D1;\r\n    border-radius: 0px 5px 5px 0px;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Medium', sans-serif;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Search = ({\r\n                    ...rest\r\n                }) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const {t} = useTranslation()\r\n    const onSubmit = (data) => {\r\n        console.log('search', data)\r\n    }\r\n    return (\r\n        <Styled onSubmit={handleSubmit(onSubmit)} {...rest}>\r\n            <input placeholder={t('Поиск')}  {...register(\"search\")} type=\"text\" className={'search-form-input'}/>\r\n            <button className={'search-form-btn'} type={'submit'}>{t(\"Найти\")}</button>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.section`\r\n  padding: 25px 15px;\r\n  background-color: #fff;\r\n  \r\n`;\r\nconst Section = ({\r\n                     children,\r\n                     ...rest\r\n                 }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Section;","import React, {useEffect, useState,useRef} from 'react';\r\nimport styled,{css} from \"styled-components\";\r\n\r\nconst Styled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  h2{\r\n    padding-right: 25px;\r\n    font-size: 24px;\r\n    color: #000;\r\n    font-family: 'Gilroy-Bold', sans-serif;\r\n    margin-bottom: 0;\r\n  }\r\n  .line{\r\n    height: 1px;\r\n    background-color: #E5E5E5;\r\n    margin-top: 5px;\r\n    ${({w}) => w && `width: calc(100% - ${w}px - 10px);`}\r\n  }\r\n  \r\n  ${({sm}) => sm && css`\r\n    h2 {\r\n      font-size: 18px;\r\n    }\r\n  `}\r\n`;\r\nconst Title = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    const [width,setWidth] = useState(0);\r\n    useEffect(()=>{\r\n        setWidth(ref.current.clientWidth)\r\n    },[])\r\n    const ref = useRef(null)\r\n    return (\r\n        <Styled {...rest} w={width}>\r\n            <h2 ref={ref}>{children}</h2>\r\n            <div className=\"line\"></div>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Title;","import React, {useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Search from \"../../../components/search\";\r\nimport Panel from \"../../../components/panel\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport {get, isEqual, range} from \"lodash\";\r\nimport {useGetAllQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {Minus, Plus} from \"react-feather\";\r\n\r\nconst AgentsCreateContainer = ({...rest}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [personType, setPersonType] = useState(null)\r\n    const [empCount, setEmpCount] = useState(0);\r\n    const setPersonTypeForSelect = (val, name) => {\r\n        if (isEqual(name, 'typeofpersons')) {\r\n            setPersonType(val)\r\n        }\r\n    }\r\n    let {data: branches} = useGetAllQuery({key: KEYS.branches, url: URLS.branches})\r\n    branches = getSelectOptionsListFromData(get(branches, `data.data`, []), '_id', 'branchname')\r\n\r\n    let {data: regions} = useGetAllQuery({key: KEYS.regions, url: URLS.regions})\r\n    regions = getSelectOptionsListFromData(get(regions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: agentTypes} = useGetAllQuery({key: KEYS.typeofagent, url: URLS.typeofagent})\r\n    agentTypes = getSelectOptionsListFromData(get(agentTypes, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: persons} = useGetAllQuery({key: KEYS.typeofpersons, url: URLS.typeofpersons})\r\n    persons = getSelectOptionsListFromData(get(persons, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: accountstatus} = useGetAllQuery({key: KEYS.accountstatus, url: URLS.accountstatus})\r\n    accountstatus = getSelectOptionsListFromData(get(accountstatus, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: accountrole} = useGetAllQuery({key: KEYS.accountroles, url: URLS.accountroles})\r\n    accountrole = getSelectOptionsListFromData(get(accountrole, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: genders} = useGetAllQuery({key: KEYS.genders, url: URLS.genders})\r\n    genders = getSelectOptionsListFromData(get(genders, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: citizenship} = useGetAllQuery({key: KEYS.citizenship, url: URLS.citizenship})\r\n    citizenship = getSelectOptionsListFromData(get(citizenship, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: typeofdocuments} = useGetAllQuery({key: KEYS.typeofdocuments, url: URLS.typeofdocuments})\r\n    typeofdocuments = getSelectOptionsListFromData(get(typeofdocuments, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: districts} = useGetAllQuery({key: KEYS.districts, url: URLS.districts})\r\n    districts = getSelectOptionsListFromData(get(districts, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: positions} = useGetAllQuery({key: KEYS.position, url: URLS.position})\r\n    positions = getSelectOptionsListFromData(get(positions, `data.data`, []), '_id', 'name')\r\n\r\n\r\n    const {mutate: createRequest, isLoading} = usePostQuery({listKeyId: KEYS.agents})\r\n    const create = ({data}) => {\r\n        createRequest({url: URLS.agents, attributes: {...data,isbeneficiary:null,isfixedpolicyholde:null}}, {\r\n            onSuccess: () => {\r\n                navigate('/agents/insurance-agents')\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {isLoading && <OverlayLoader/>}\r\n            <Panel>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Search/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Panel>\r\n            <Section>\r\n                <Row className={'mb-25'}>\r\n                    <Col xs={12}>\r\n                        <Title>Agent create</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Form getValueFromField={(val, name) => setPersonTypeForSelect(val, name)}\r\n                      footer={<Button>Save</Button>} formRequest={(values) => create(values)}>\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <Field name={'branch'} type={'select'} label={'Branch'} options={branches}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'inn'} type={'input-mask'} label={'INN'}\r\n                                   property={{mask: '999999999', maskChar: '_'}}\r\n                                   params={{required: true, pattern: /^[0-9]*$/}}/>\r\n                        </Col>\r\n\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementnumber'} type={'input'}\r\n                                   label={'agreementnumber'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementdate'} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                   label={'agreementdate'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n\r\n                        <Col xs={4}>\r\n                            <Field name={'typeofagent'} type={'select'} label={'Agent type'} options={agentTypes}\r\n                                  />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'typeofpersons'} type={'select'} label={'Person type'} options={persons}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        {isEqual(personType, '6292025f8982798b6996bc34') && <>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.name'} type={'input'} label={'name'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.secondname'} type={'input'} label={'secondname'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.middlename'} type={'input'} label={'middlename'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.gender'} type={'select'} label={'Gender'}\r\n                                       options={genders}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.dateofbirth'} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                       label={'dateofbirth'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.citizenship'} type={'select'} label={'Citizenship'}\r\n                                       options={citizenship}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.typeofdocument'} type={'select'}\r\n                                       label={'typeofdocument'} options={typeofdocuments}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportSeries'} type={'input-mask'}\r\n                                       label={'Passport seria'}\r\n                                       property={{mask: 'aa', maskChar: '_'}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportNumber'} type={'input-mask'}\r\n                                       label={'Passport number'}\r\n                                       property={{mask: '9999999', maskChar: '_'}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n\r\n                                <Field name={'forindividualsdata.pin'} type={'input-mask'} label={'PINFL'}\r\n                                       property={{mask: '99999999999999', maskChar: '_'}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportissuancedate'} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                       label={'passportissuancedate'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportissuedby'} type={'input'}\r\n                                       label={'passportissuedby'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.regions'} type={'select'} label={'Region'}\r\n                                       options={regions}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.districts'} type={'select'} label={'District'}\r\n                                       options={districts}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.address'} type={'input'}\r\n                                       label={'address'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.postcode'} type={'input'}\r\n                                       label={'postcode'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.telephonenumber'} type={'input'}\r\n                                       label={'telephonenumber'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.emailforcontact'} type={'input'}\r\n                                       label={'emailforcontact'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.personalaccount'} type={'input'}\r\n                                       label={'personalaccount'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.transitaccount'} type={'input'}\r\n                                       label={'transitaccount'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.mfo'} type={'input'}\r\n                                       label={'mfo'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.nameofbank'} type={'input'}\r\n                                       label={'nameofbank'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.numberofcard'} type={'input'} label={'numberofcard'}\r\n                                />\r\n                            </Col>\r\n                        </>\r\n                        }\r\n                        {isEqual(personType, '629202448982798b6996bc32') &&\r\n                            <>\r\n\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.nameoforganization'} type={'input'}\r\n                                           label={'nameoforganization'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.oked'} type={'input'} label={'oked'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.mfo'} type={'input'} label={'mfo'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.nameofbank'} type={'input'} label={'nameofbank'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.innofbank'} type={'input'} label={'innofbank'}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.scheduledaccount'} type={'input'}\r\n                                           label={'scheduledaccount'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.regionId'} type={'select'} label={'Region'}\r\n                                           options={regions}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.districts'} type={'select'} label={'District'}\r\n                                           options={districts}\r\n                                           params={{required: true}}/>\r\n                                </Col>\r\n\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.address'} type={'input'}\r\n                                           label={'address'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.postcode'} type={'input'}\r\n                                           label={'postcode'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.checkingaccount'} type={'input'}\r\n                                           label={'checkingaccount'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={11} className={\"mb-15\"}>\r\n                                    <Title sm>Add employee</Title>\r\n                                </Col>\r\n                                <Col xs={1} className={'text-right'}>\r\n                                    <Button onClick={() => setEmpCount(prev => ++prev)} sm type={\"button\"}\r\n                                            inline><Plus/></Button>\r\n                                </Col>\r\n                                {range(0,empCount).map(count => <Col xs={12} className={'box__outlined'}><Row align={\"center\"}>\r\n                                    <Col xs={11}>\r\n                                        <Row>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].fullname`} type={'input'}\r\n                                                       label={'Employee fullname'}\r\n                                                       params={{required:true}}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].positions`} type={'select'} options={positions}\r\n                                                       label={'Employee position'}\r\n                                                       params={{required:true}}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].typeofdocumentsformanager`} type={'select'} options={typeofdocuments}\r\n                                                       label={'Employee doc type'}\r\n                                                       params={{required:true}}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].documentnumber`} type={'input'}\r\n                                                       label={'Employee documentnumber'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].dateofmanagerdocument`} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                                       label={'dateofmanagerdocument'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].expirationdate`} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                                       label={'expirationdate'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].telephonenumber`} type={'input'}\r\n                                                       label={'telephonenumber'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].emailforcontacts`} type={'input'}\r\n                                                       label={'emailforcontacts'}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={1} className={\"text-right \"}>\r\n                                        <Button danger onClick={() => setEmpCount(prev => --prev)} sm type={\"button\"}\r\n                                                inline><Minus/></Button>\r\n                                    </Col>\r\n                                </Row></Col>)}\r\n\r\n                            </>\r\n                        }\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'isUsedourpanel'}\r\n                                type={'switch'}\r\n                                name={'isUsedourpanel'}\r\n                                params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'isUserRestAPI'}\r\n                                type={'switch'}\r\n                                name={'isUserRestAPI'}\r\n                                params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'email'} type={'input'} label={'Email'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n\r\n                        <Col xs={4}>\r\n                            <Field name={'password'} type={'input'} label={'password'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'accountstatus'} type={'select'} label={'Account status'}\r\n                                   options={accountstatus}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'accountrole'} type={'select'} label={'Account role'} options={accountrole}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AgentsCreateContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AgentsCreateContainer from \"../containers/AgentsCreateContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n.box__outlined{\r\n  border:1px dotted #BABABA;\r\n  padding: 15px;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n}\r\n`;\r\nconst AgentsCreatePage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <AgentsCreateContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default AgentsCreatePage;","import {includes} from \"lodash\";\r\n\r\nconst addDetectClick =  ({setOpen,classNames = []}) => {\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (!classNames.some(className => e.target.classList.contains(className))) {\r\n            setOpen(false);\r\n        }\r\n    });\r\n}\r\nconst removeDetectClick = () => {\r\n    window.removeEventListener('click',addDetectClick,false);\r\n}\r\n\r\nconst hasAccess = (roles = [], can = '') => {\r\n    let access = false;\r\n    if (includes(roles, can)) {\r\n        access = true;\r\n    }\r\n    return access;\r\n}\r\n\r\n\r\nconst getSelectOptionsListFromData = (data = [], value = 'id', label = 'title') => {\r\n    return data.map(item => ({ value: item[value], label: item[label] })) || [];\r\n}\r\n\r\n\r\nexport {\r\n    addDetectClick,\r\n    removeDetectClick,\r\n    hasAccess,\r\n    getSelectOptionsListFromData\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Minus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nMinus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMinus.displayName = 'Minus';\nexport default Minus;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["Styled","styled","children","rest","fluid","useForm","register","handleSubmit","t","useTranslation","onSubmit","data","console","log","placeholder","type","className","w","sm","css","useState","width","setWidth","useEffect","ref","current","clientWidth","useRef","navigate","useNavigate","personType","setPersonType","empCount","setEmpCount","branches","useGetAllQuery","key","KEYS","url","URLS","getSelectOptionsListFromData","get","regions","agentTypes","persons","accountstatus","accountrole","genders","citizenship","typeofdocuments","districts","positions","usePostQuery","listKeyId","createRequest","mutate","isLoading","xs","getValueFromField","val","name","isEqual","setPersonTypeForSelect","footer","formRequest","values","attributes","isbeneficiary","isfixedpolicyholde","onSuccess","onError","create","label","options","params","required","property","mask","maskChar","pattern","dateFormat","onClick","prev","inline","range","map","count","align","danger","value","item","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Minus","forwardRef","_ref","_ref$color","color","_ref$size","size","React","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","PropTypes","displayName","Plus"],"sourceRoot":""}