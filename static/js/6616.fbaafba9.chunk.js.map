{"version":3,"file":"static/js/6616.fbaafba9.chunk.js","mappings":"uZAwLA,EApK8B,SAAC,GAAc,oBAAC,IACnCA,GAAKC,EAAAA,EAAAA,KAALD,EACAE,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAAwBE,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAiCC,EAAAA,EAAAA,IAAe,CAACL,GAAAA,EAAIM,IAAKC,EAAAA,EAAAA,SAAeC,IAAKC,EAAAA,EAAAA,WAAzEC,EAAL,EAAKA,KAAMC,EAAX,EAAWA,UACDC,GADV,EAAsBC,SACHC,EAAAA,EAAAA,IAAe,CAACR,IAAIC,EAAAA,EAAAA,aAAkBC,IAAIC,EAAAA,EAAAA,eAAxDC,MACLE,GAAQG,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAAIJ,EAAD,YAAmB,IAAI,MAAM,QACrE,IAAUK,GAAUH,EAAAA,EAAAA,IAAe,CAACR,IAAIC,EAAAA,EAAAA,cAAmBC,IAAIC,EAAAA,EAAAA,gBAA1DC,KACLO,GAASF,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAAIC,EAAD,YAAoB,IAAI,MAAM,QACvE,OAAwDC,EAAAA,EAAAA,IAAa,CAACC,UAAWZ,EAAAA,EAAAA,OAAlEa,EAAf,EAAOC,OAEDC,GAFN,EAA8BX,WAEPY,EAAAA,EAAAA,IAAS,SAAAC,GAAK,OAAIR,EAAAA,EAAAA,KAAIQ,EAAO,kBAAkB,mBAEhEC,GAAcC,EAAAA,EAAAA,UAAQ,iBAAM,CAC9B,CACI1B,GAAI,EACJ2B,MAAO7B,EAAE,YACT8B,KAAM,aAEV,CACI5B,GAAI,EACJ2B,MAAO3B,EACP4B,KAAM,QAEX,CAAClB,IAMJ,IAJAmB,EAAAA,EAAAA,YAAU,WACNP,EAAeG,KAChB,IAECd,EACA,OAAO,SAAC,IAAD,IAsBX,OACI,+BACI,UAAC,IAAD,YACI,UAAC,KAAD,CAAKmB,UAAW,GAAhB,WACI,SAAC,KAAD,CAAKC,GAAI,GAAT,UACI,SAAC,IAAD,+BAEJ,SAAC,KAAD,CAAKD,UAAW,aAAcC,GAAI,EAAlC,UACI,SAAC,IAAD,CAAQC,QAAS,kBAAM5B,GAAQ,IAA/B,+BAGR,UAAC,KAAD,YACI,SAAC,KAAD,CAAK2B,GAAI,EAAT,UACI,UAAC,IAAD,CAAOE,MAAO,CAAC,IAAK,KAApB,WACI,2BACI,wBAAKnC,EAAE,kBACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,uCAE3B,2BACI,wBAAKZ,EAAE,aACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,kCAE3B,2BACI,wBAAKZ,EAAE,eACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,oCAE3B,2BACI,wBAAKZ,EAAE,cACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,6BAE3B,2BACI,wBAAKZ,EAAE,eACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,mCAE3B,2BACI,wBAAKZ,EAAE,WACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,0BAE3B,2BACI,wBAAKZ,EAAE,iBACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,gCAE3B,2BACI,wBAAKZ,EAAE,iBACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,qCAKnC,SAAC,KAAD,CAAKqB,GAAI,EAAT,UACI,UAAC,IAAD,CAAOE,MAAO,CAAC,IAAK,KAApB,WACI,2BACI,wBAAKnC,EAAE,qBACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,oCAE3B,2BACI,wBAAKZ,EAAE,qBACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,oCAE3B,2BACI,wBAAKZ,EAAE,kBACP,yBAAI,4BAASoC,KAAMlB,EAAAA,EAAAA,KAAIN,EAAM,0BAA0ByB,OAAO,sBAGlE,2BACI,wBAAKrC,EAAE,YACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,yBAE3B,2BACI,wBAAKZ,EAAE,gBACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,qCAE3B,2BACI,wBAAKZ,EAAE,kBACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,sCAE3B,2BACI,wBAAKZ,EAAE,aACP,yBAAI,6BAASkB,EAAAA,EAAAA,KAAIN,EAAM,yCAMvC,SAAC,IAAD,CAAO0B,QAASjC,EAAMkC,QAAS,kBAAMjC,GAAQ,IAA7C,UACI,SAAC,IAAD,CACIkC,QAAQ,SAAC,IAAD,kBAAsBC,YAAa,SAACC,GAAD,OAzG5C,SAAC,GAAoB,IAAdC,EAAa,EAAlB/B,KACjBU,EAAc,CACVZ,IAAIC,EAAAA,EAAAA,KACJiC,YAAW,UACJD,GAEPE,OAAO,CACHC,QAAQ,CACJC,WAAU7B,EAAAA,EAAAA,KAAIN,EAAM,wBACpBoC,QAAQ9C,KAGlB,CACE+C,UAAU,WACN3C,GAAQ,MA2FuD4C,CAAWR,IADtE,UAEI,UAAC,KAAD,CAAKV,UAAW,QAAhB,WACI,SAAC,KAAD,CAAKC,GAAI,EAAT,UACI,SAAC,IAAD,CAAOkB,KAAM,QAASC,KAAM,QAASC,MAAO,QACrCC,OAAQ,CAACC,UAAU,QAE9B,SAAC,KAAD,CAAKtB,GAAI,EAAT,UACI,SAAC,IAAD,CAAOkB,KAAM,WAAYC,KAAM,QAASC,MAAO,WACxCC,OAAQ,CAACC,UAAU,GAAQC,SAAU,CAACJ,KAAM,iBAEvD,SAAC,KAAD,CAAKnB,GAAI,EAAT,UACI,SAAC,IAAD,CAAQkB,KAAM,cAAeC,KAAM,SAAUC,MAAO,OAAQI,QAAS3C,EAAQwC,OAAQ,CAACC,UAAU,QAEpG,SAAC,KAAD,CAAKtB,GAAI,EAAT,UACI,SAAC,IAAD,CAAQkB,KAAM,gBAAiBC,KAAM,SAAUC,MAAO,SAAUI,QAAStC,EAASmC,OAAQ,CAACC,UAAU,oBCvK/HG,EAASC,EAAAA,GAAAA,IAAH,sNAkBZ,EARuB,SAAC,GAAe,IAAXC,EAAU,oBAClC,OACI,SAACF,GAAD,kBAAYE,GAAZ,cACI,SAAC,EAAD","sources":["modules/branches/containers/EmployeeViewContainer.jsx","modules/branches/pages/EmployeeViewPage.jsx"],"sourcesContent":["import React, {useEffect, useMemo,useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport {get} from \"lodash\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\nimport Table from \"../../../components/table\";\r\nimport {useStore} from \"../../../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Rodal from \"rodal\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\n\r\nconst EmployeeViewContainer = ({...rest}) => {\r\n    const {t} = useTranslation();\r\n    const {id} = useParams()\r\n    const [open, setOpen] = useState(false)\r\n    let {data, isLoading, isError} = useGetOneQuery({id, key: KEYS.employee, url: URLS.employee})\r\n    let {data:roles} = useGetAllQuery({key:KEYS.accountroles,url:URLS.accountroles})\r\n    roles = getSelectOptionsListFromData(get(roles,`data.data`,[]),'_id','name')\r\n    let {data:status} = useGetAllQuery({key:KEYS.accountstatus,url:URLS.accountstatus})\r\n    status = getSelectOptionsListFromData(get(status,`data.data`,[]),'_id','name')\r\n    const {mutate: createRequest, isLoading: postLoading} = usePostQuery({listKeyId: KEYS.user})\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: t('Employee'),\r\n            path: '/branches',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: id,\r\n            path: '#',\r\n        }\r\n    ], [data])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n    const addAccount = ({data:request}) => {\r\n        createRequest({\r\n            url:URLS.user,\r\n            attributes:{\r\n                ...request\r\n            },\r\n            config:{\r\n                headers:{\r\n                    branch_Id:get(data, \"data.data.branch._id\"),\r\n                    agentId:id\r\n                }\r\n            }\r\n        },{\r\n            onSuccess:()=>{\r\n                setOpen(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Section>\r\n                <Row className={''}>\r\n                    <Col xs={10}>\r\n                        <Title>Employee view</Title>\r\n                    </Col>\r\n                    <Col className={'text-right'} xs={2}>\r\n                        <Button onClick={() => setOpen(true)}>Add Account</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"Branch name\")}</td>\r\n                                <td><strong>{get(data, \"data.data.branch.branchname\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Region\")}</td>\r\n                                <td><strong>{get(data, \"data.data.regions.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"District\")}</td>\r\n                                <td><strong>{get(data, \"data.data.districts.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"address\")}</td>\r\n                                <td><strong>{get(data, \"data.data.address\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Position\")}</td>\r\n                                <td><strong>{get(data, \"data.data.position.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"name\")}</td>\r\n                                <td><strong>{get(data, \"data.data.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"secondname\")}</td>\r\n                                <td><strong>{get(data, \"data.data.secondname\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"middlename\")}</td>\r\n                                <td><strong>{get(data, \"data.data.middlename\")}</strong></td>\r\n                            </tr>\r\n\r\n                        </Table>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"passportSeries\")}</td>\r\n                                <td><strong>{get(data, \"data.data.passportSeries\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"passportNumber\")}</td>\r\n                                <td><strong>{get(data, \"data.data.passportNumber\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"dateofbirth\")}</td>\r\n                                <td><strong>{dayjs(get(data, \"data.data.dateofbirth\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Pinfl\")}</td>\r\n                                <td><strong>{get(data, \"data.data.pin\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"telephone\")}</td>\r\n                                <td><strong>{get(data, \"data.data.telephonenumber\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"citizenship\")}</td>\r\n                                <td><strong>{get(data, \"data.data.citizenship.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"gender\")}</td>\r\n                                <td><strong>{get(data, \"data.data.gender.name\")}</strong></td>\r\n                            </tr>\r\n\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                <Rodal visible={open} onClose={() => setOpen(false)}>\r\n                    <Form\r\n                        footer={<Button>Add</Button>} formRequest={(values) => addAccount(values)}>\r\n                        <Row className={'mt-15'}>\r\n                            <Col xs={6}>\r\n                                <Field name={'email'} type={'input'} label={'Email'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Field name={'password'} type={'input'} label={'Password'}\r\n                                       params={{required: true}}  property={{type: 'password'}}/>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Field  name={'accountrole'} type={'select'} label={'Role'} options={roles}  params={{required: true}} />\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Field  name={'accountstatus'} type={'select'} label={'Status'} options={status}  params={{required: true}} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Rodal>\r\n\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeViewContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport EmployeeViewContainer from \"../containers/EmployeeViewContainer\";\r\n\r\n\r\n\r\nconst Styled = styled.div`\r\n  .rodal-dialog {\r\n    width: unset !important;\r\n    max-width: 50%;\r\n    min-width: 750px;\r\n    min-height: 350px !important;\r\n    max-height: 50vh !important;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\nconst BranchViewPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <EmployeeViewContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default BranchViewPage;"],"names":["t","useTranslation","id","useParams","useState","open","setOpen","useGetOneQuery","key","KEYS","url","URLS","data","isLoading","roles","isError","useGetAllQuery","getSelectOptionsListFromData","get","status","usePostQuery","listKeyId","createRequest","mutate","setBreadcrumbs","useStore","state","breadcrumbs","useMemo","title","path","useEffect","className","xs","onClick","thead","dayjs","format","visible","onClose","footer","formRequest","values","request","attributes","config","headers","branch_Id","agentId","onSuccess","addAccount","name","type","label","params","required","property","options","Styled","styled","rest"],"sourceRoot":""}