{"version":3,"file":"static/js/9083.7c3f936e.chunk.js","mappings":"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","sources":["modules/policy/containers/CreateContainer.jsx","modules/policy/pages/CreatePage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport Section from \"../../../components/section\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {ContentLoader, OverlayLoader} from \"../../../components/loader\";\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport {get} from \"lodash\"\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\n\r\n\r\nconst CreateContainer = ({\r\n                             product_id = null,\r\n                             ...rest\r\n                         }) => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const [filter,setFilter] = useState({})\r\n    let {data: agreementData, isLoading, isError} = useGetOneQuery({\r\n        id: product_id,\r\n        key: KEYS.agreements,\r\n        url: URLS.agreements\r\n    })\r\n    const {mutate: createPolicy, isLoading: isLoadingPolicy} = usePostQuery({listKeyId: KEYS.agreements})\r\n\r\n    let {data: policyTypeList} = useGetAllQuery({key: KEYS.typeofpolice, url: URLS.typeofpolice})\r\n    policyTypeList = getSelectOptionsListFromData(get(policyTypeList, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: policyStatusList} = useGetAllQuery({key: KEYS.statusofpolicy, url: URLS.statusofpolicy})\r\n    policyStatusList = getSelectOptionsListFromData(get(policyStatusList, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: paymentStatusList} = useGetAllQuery({key: KEYS.statusofpayment, url: URLS.statusofpayment})\r\n    paymentStatusList = getSelectOptionsListFromData(get(paymentStatusList, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: policyBlankList} = useGetAllQuery({key: KEYS.policyblank+get(filter,'typeofpoliceId'),\r\n        url: `${URLS.policyblank}/f/${get(filter,'typeofpoliceId')}`,\r\n        enabled:!!(get(filter,'typeofpoliceId'))\r\n    })\r\n    policyBlankList = getSelectOptionsListFromData(get(policyBlankList, `data.data`, []), '_id', 'blank_number')\r\n\r\n    const addPolicy = (data) => {\r\n        createPolicy({\r\n            url: URLS.policy, attributes: {\r\n                ...data,\r\n                agreementsId: product_id,\r\n                copyofdocuments: 'xxxxxxxxx',\r\n                riskId: get(agreementData, 'data.data.riskId'),\r\n                objectofinsurance: get(agreementData, 'data.data.objectofinsurance'),\r\n            }\r\n        }, {\r\n            onSuccess: () => {\r\n                navigate(`/agreements/view/${product_id}`)\r\n            },\r\n            onError: () => {\r\n            }\r\n        })\r\n    }\r\n\r\n    if (isError) {\r\n        return <Navigate to={'/500'}/>\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <OverlayLoader/>;\r\n    }\r\n    console.log('filter',filter)\r\n    return (\r\n        <Section>\r\n            {isLoadingPolicy && <ContentLoader/>}\r\n            <Row className={'mb-15'} align={'center'}>\r\n                <Col xs={12}>\r\n                    <Title>Add policy</Title>\r\n                </Col>\r\n            </Row>\r\n            <Form getValueFromField={(value,name)=>setFilter(prev=>({...prev,[name]:value}))} formRequest={({data}) => {\r\n                addPolicy(data);\r\n            }}\r\n                  footer={<><Button>{t(\"Add\")}</Button></>}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Row className={'mt-15'}>\r\n                            <Col xs={4}>\r\n                                <Field label={t('Policy type')} options={policyTypeList} type={'select'}\r\n                                       name={'typeofpoliceId'} params={{required: true}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field label={t('Policy blank')} options={policyBlankList} type={'select'}\r\n                                       name={'policy_blanknumber'} params={{required: true}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'input'}\r\n                                    name={`policynumber`}\r\n                                    params={{required: true}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'input'}\r\n                                    name={`formnumber`}\r\n                                    params={{required: true}}\r\n                                />\r\n                            </Col>\r\n\r\n\r\n                            <Col xs={4}>\r\n                                <Field label={t('Policy status')} options={policyStatusList} type={'select'}\r\n                                       name={'statusofpolicy'} params={{required: true}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col xs={4}>\r\n                                <Field label={t('Payment status')} options={paymentStatusList} type={'select'}\r\n                                       name={'statusofpayment'} params={{required: true}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'datepicker'}\r\n                                    name={`dateofissue`}\r\n                                    dateFormat={\"DD.MM.YYYY\"}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'datepicker'}\r\n                                    name={`dateofend`}\r\n                                    dateFormat={\"DD.MM.YYYY\"}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'dropzone'}\r\n                                    name={`copyofdocuments`}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default CreateContainer;","import React from 'react';\r\nimport CreateContainer from \"../containers/CreateContainer\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst CreatePage = ({\r\n                        ...rest\r\n                    }) => {\r\n    const {product_id} = useParams();\r\n    return (\r\n        <>\r\n            <CreateContainer product_id={product_id} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreatePage;"],"names":["product_id","t","useTranslation","navigate","useNavigate","useState","filter","setFilter","useGetOneQuery","id","key","KEYS","url","URLS","agreementData","data","isLoading","isError","usePostQuery","listKeyId","createPolicy","mutate","isLoadingPolicy","policyTypeList","useGetAllQuery","getSelectOptionsListFromData","get","policyStatusList","paymentStatusList","policyBlankList","enabled","to","console","log","className","align","xs","getValueFromField","value","name","prev","formRequest","attributes","agreementsId","copyofdocuments","riskId","objectofinsurance","onSuccess","onError","addPolicy","footer","label","options","type","params","required","dateFormat","useParams"],"sourceRoot":""}