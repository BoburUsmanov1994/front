{"version":3,"file":"static/js/1006.cc3f362c.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/dollar-sign.js","../node_modules/react-feather/dist/icons/send.js","modules/products/containers/AgreementViewContainer.jsx","modules/products/pages/AgreementViewPage.jsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar DollarSign = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"1\",\n    x2: \"12\",\n    y2: \"23\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"\n  }));\n});\nDollarSign.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nDollarSign.displayName = 'DollarSign';\nexport default DollarSign;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Send = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"22\",\n    y1: \"2\",\n    x2: \"11\",\n    y2: \"13\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"22 2 15 22 11 13 2 9 22 2\"\n  }));\n});\nSend.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSend.displayName = 'Send';\nexport default Send;","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport {get, isEqual, isNil, sumBy} from \"lodash\";\r\nimport {useDeleteQuery, useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {ContentLoader, OverlayLoader} from \"../../../components/loader\";\r\nimport Table from \"../../../components/table\";\r\nimport {useStore} from \"../../../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport {DollarSign, Send, Trash2} from \"react-feather\";\r\nimport Swal from \"sweetalert2\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Modal from \"../../../components/modal\";\r\nimport Checkbox from \"rc-checkbox\";\r\n\r\nconst AgentViewContainer = ({...rest}) => {\r\n    const {t} = useTranslation();\r\n    const {id} = useParams()\r\n    const navigate = useNavigate();\r\n    const [selectedPolice, setSelectedPolice] = useState(null);\r\n    const [transactionId, setTransactionId] = useState(null);\r\n    let {data, isLoading, isError} = useGetOneQuery({id, key: KEYS.agreements, url: URLS.agreements})\r\n    let {data: policyData, isLoading: policyIsLoading} = useGetAllQuery({\r\n        id, key: KEYS.policyFilter, url: URLS.policyFilter, params: {\r\n            params: {\r\n                agreementsId: id\r\n            }\r\n        }\r\n    })\r\n    let {data: endorsementData, isLoading: endorsementIsLoading} = useGetOneQuery({\r\n        id,\r\n        key: KEYS.endorsementFilter,\r\n        url: URLS.endorsementFilter\r\n    })\r\n    const {mutate: sentToFondRequest, isLoadingSendToFond} = usePostQuery({listKeyId: KEYS.agreements})\r\n    const {mutate: deleteRequest, isLoading: deleteLoading} = useDeleteQuery({listKeyId: KEYS.policyFilter})\r\n    const {\r\n        mutate: deleteEndorsementRequest,\r\n        isLoading: deleteEndorsementLoading\r\n    } = useDeleteQuery({listKeyId: KEYS.endorsementFilter})\r\n\r\n    const user = useStore(state => get(state, 'user'))\r\n    let {data: transactions, isLoading:_isLoading} = useGetAllQuery({key: KEYS.transactions, url: URLS.transactions,enabled:!!(get(user,'branch_Id.id')),params:{params:{\r\n                branch: get(user, 'branch_Id.id'),\r\n                limit:100\r\n            }}})\r\n    const {mutate: attachRequest, isLoading:isLoadingAttach} = usePostQuery({listKeyId: KEYS.policyFilter})\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: t('Agreements'),\r\n            path: '/agreements',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: id,\r\n            path: '#',\r\n        }\r\n    ], [data])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    const attach = ({data}) => {\r\n        const {attachmentSum} = data;\r\n        attachRequest({\r\n            url: URLS.transactionAttach,\r\n            attributes: {transactionId: transactionId, policyId:get(selectedPolice,'id'), attachmentSum}\r\n        }, {\r\n            onSuccess: () => {\r\n                setTransactionId(null)\r\n                setSelectedPolice(null)\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const remove = (id) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            backdrop: 'rgba(0,0,0,0.9)',\r\n            background: 'none',\r\n            title: t('Are you sure?'),\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#13D6D1',\r\n            confirmButtonText: t('Delete'),\r\n            cancelButtonText: t('Cancel'),\r\n            customClass: {\r\n                title: 'title-color',\r\n            },\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteRequest({url: `${URLS.policy}/${id}`})\r\n            }\r\n        });\r\n    }\r\n\r\n    const removeEndorsement = (id) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            backdrop: 'rgba(0,0,0,0.9)',\r\n            background: 'none',\r\n            title: t('Are you sure?'),\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#13D6D1',\r\n            confirmButtonText: t('Delete'),\r\n            cancelButtonText: t('Cancel'),\r\n            customClass: {\r\n                title: 'title-color',\r\n            },\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteEndorsementRequest({url: `${URLS.endorsements}/${id}`})\r\n            }\r\n        });\r\n    }\r\n\r\n    const sendToFond = (agreementId, policyId) => {\r\n        sentToFondRequest({url: `${URLS.sendToFond}?agreementId=${agreementId}&policyId=${policyId}`})\r\n    }\r\n\r\n\r\n    if (isLoading || deleteLoading || policyIsLoading || endorsementIsLoading || deleteEndorsementLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n    console.log('s',selectedPolice)\r\n\r\n    return (\r\n        <>\r\n            <Section>\r\n                <Row className={''} align={'center'}>\r\n                    <Col xs={12}>\r\n                        <Title>{t('Agreement view')}</Title>\r\n                    </Col></Row>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"groupofproductsId\")}</td>\r\n                                <td><strong>{get(data, \"data.data.groupofproductsId.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"subgroupofproductsId\")}</td>\r\n                                <td><strong>{get(data, \"data.data.subgroupofproductsId.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"products\")}</td>\r\n                                <td><strong>{get(data, \"data.data.products.productname\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"startofinsurance\")}</td>\r\n                                <td>\r\n                                    <strong>{dayjs(get(data, \"data.data.startofinsurance\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"endofinsurance\")}</td>\r\n                                <td><strong>{dayjs(get(data, \"data.data.endofinsurance\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>{t(\"clinets\")}</td>\r\n                                <td><strong>{get(data, \"data.data.clinets.forindividualsdata.name\")}</strong></td>\r\n                            </tr>\r\n\r\n\r\n                        </Table>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"whoaccepted\")}</td>\r\n                                <td><strong>{get(data, \"data.data.whoaccepted\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"totalinsurancepremium\")}</td>\r\n                                <td><strong><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(data, \"data.data.totalinsurancepremium\")}/></strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"totalsuminsured\")}</td>\r\n                                <td><strong><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                                                                  value={get(data, \"data.data.totalsuminsured\")}/></strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"paidinsurancepremium\")}</td>\r\n                                <td><strong><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                                                                       value={get(data, \"data.data.paidinsurancepremium\")}/></strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Status\")}</td>\r\n                                <td><strong>{t(get(data, \"data.data.status\"))}</strong></td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                <Row className={'mt-15'}>\r\n                    <Col xs={6}>\r\n                        <Row align={'center'}>\r\n                            <Col xs={8}><Title sm>Полис</Title></Col>\r\n                            <Col xs={4} className={'text-right'}>\r\n                                <Button green onClick={() => navigate(`/policy/create/${id}`)} className={'mr-16'}\r\n                                        type={'button'}>Добавить\r\n                                    полис</Button>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={'mt-15'}>\r\n                            {get(policyData, \"data.data\", []).length > 0 && <Col xs={12}>\r\n                                <hr/>\r\n                                <Table hideThead={false}\r\n                                       thead={['Policy number', 'Issue date', 'Attached sum', 'Status', 'Action']}>\r\n                                    {get(policyData, \"data.data\", []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>\r\n                                            {get(item, 'policy_number', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {dayjs(get(item, 'dateofissue')).format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                        <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(item, \"attachedSum\")}/></td>\r\n                                        <td>{get(item, \"status\")}</td>\r\n\r\n                                        <td className={''}\r\n                                        >\r\n                                            {get(item, \"status\") === 'new' &&\r\n                                                <DollarSign onClick={() => setSelectedPolice(item)} className={'cursor-pointer'}\r\n                                                            color={'#71BC70'}/>}\r\n                                            {get(item, \"status\") === 'new' &&\r\n                                                <Send className={'cursor-pointer ml-15'} color={'#13D6D1'}\r\n                                                      onClick={() => sendToFond(id, get(item, '_id'))}/>}\r\n                                            {get(item, \"status\") === 'new' &&\r\n                                                <Trash2 onClick={() => remove(get(item, '_id', null))}\r\n                                                        className={'ml-15 cursor-pointer'} color={'#dc2626'}/>}\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </Table>\r\n                            </Col>\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Row align={'center'}>\r\n                            <Col xs={8}> <Title sm>Индосаменты</Title></Col>\r\n                            <Col xs={4} className={'text-right'}> <Button\r\n                                onClick={() => navigate(`/endorsement/create/${id}`)} green type={'button'}>Добавить\r\n                                индосаменты</Button></Col>\r\n                        </Row>\r\n                        <Row className={'mt-15'}>\r\n                            {get(endorsementData, \"data.data\", []).length > 0 && <Col xs={12}>\r\n                                <hr/>\r\n                                <Table hideThead={false}\r\n                                       thead={['Type', 'Status', 'Conclusion', 'Action']}>\r\n                                    {get(endorsementData, \"data.data\", []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>\r\n                                            {get(item, 'typeofendorsements.name', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {get(item, 'statusofendorsements.name', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {get(item, 'reqforconclusion', '-')}\r\n                                        </td>\r\n                                        <td className={'cursor-pointer'}\r\n                                            onClick={() => removeEndorsement(get(item, '_id', null))}>\r\n                                            <Trash2 color={'#dc2626'}/>\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </Table>\r\n                            </Col>\r\n                            }\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Section>\r\n            <Modal title={'Распределение к полису'} visible={!isNil(selectedPolice)} hide={() => setSelectedPolice(null)}>\r\n                {\r\n                    isLoadingAttach && <ContentLoader />\r\n                }\r\n                {\r\n                    <Table bordered hideThead={false}\r\n                           thead={['', '№',  'Дата п/п', 'Наименоменование отправителя', 'Сумма поступления']}>{get(transactions, 'data.data', []).map((item, i) =>\r\n                        <tr key={get(item, '_id')}>\r\n                            <td><Checkbox checked={isEqual(transactionId, get(item, '_id'))} onChange={(e) => {\r\n                                if (e.target?.checked) {\r\n                                    setTransactionId(get(item, '_id'))\r\n                                } else {\r\n                                    setTransactionId(null)\r\n                                }\r\n                            }}/></td>\r\n                            <td>{i + 1}</td>\r\n                            <td>{dayjs(get(item, 'payment_order_date')).format(\"DD.MM.YYYY\")}</td>\r\n                            <td>{get(item, 'sender_name')}</td>\r\n                            <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                              value={get(item, 'payment_amount', 0)}/></td>\r\n                        </tr>)}</Table>}\r\n                {transactionId && <Form formRequest={attach} footer={<Button type={'submit'}>Прикрепить</Button>}>\r\n                    <Row className={'mt-15'}>\r\n                        <Col xs={6}>\r\n                            <Field defaultValue={sumBy(get(selectedPolice,'riskId',[]),'insurancepremium')} label={'Сумма оплаты по полису:'} property={{disabled: true}}\r\n                                   type={'number-format-input'} name={'sumInsurancePremium'}/>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Field defaultValue={get(selectedPolice,'attachedSum',0)} property={{disabled: true}} type={'number-format-input'}\r\n                                   name={'attachedSum'} label={'Сумма прикреплённых средств:'}/>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Field type={'number-format-input'} name={'attachmentSum'} label={'Сумма к прикреплению:'}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>}\r\n            </Modal>\r\n        </>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default AgentViewContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AgreementViewContainer from \"../containers/AgreementViewContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n  .box__outlined{\r\n    border:1px dotted #BABABA;\r\n    padding: 15px;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n  }\r\n  .rodal-dialog{\r\n    min-height: 60vh !important;\r\n  }\r\n`;\r\nconst AgentViewPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <AgreementViewContainer />\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default AgentViewPage;"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","DollarSign","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","d","propTypes","PropTypes","displayName","Send","points","t","useTranslation","id","useParams","navigate","useNavigate","useState","selectedPolice","setSelectedPolice","transactionId","setTransactionId","useGetOneQuery","KEYS","url","URLS","data","isLoading","isError","useGetAllQuery","params","agreementsId","policyData","policyIsLoading","endorsementData","endorsementIsLoading","usePostQuery","listKeyId","sentToFondRequest","mutate","isLoadingSendToFond","useDeleteQuery","deleteRequest","deleteLoading","deleteEndorsementRequest","deleteEndorsementLoading","user","useStore","state","get","enabled","branch","limit","transactions","attachRequest","isLoadingAttach","setBreadcrumbs","breadcrumbs","useMemo","title","path","useEffect","console","log","className","align","xs","thead","dayjs","format","displayType","thousandSeparator","value","sm","green","onClick","type","hideThead","map","item","agreementId","policyId","Swal","position","icon","backdrop","background","showConfirmButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","customClass","then","result","isConfirmed","remove","removeEndorsement","visible","isNil","hide","bordered","checked","isEqual","onChange","e","formRequest","attachmentSum","attributes","onSuccess","onError","footer","defaultValue","sumBy","label","property","disabled","name","Styled","styled","AgreementViewContainer"],"sourceRoot":""}