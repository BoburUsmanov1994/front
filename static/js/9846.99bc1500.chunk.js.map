{"version":3,"file":"static/js/9846.99bc1500.chunk.js","mappings":"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","sources":["modules/branches/containers/EmployeeAddContainer.jsx","modules/branches/pages/EmployeeAddPage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Search from \"../../../components/search\";\r\nimport Panel from \"../../../components/panel\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport {get, isEqual, range} from \"lodash\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\n\r\nconst EmployeeAddContainer = ({id = null, branch = {}, ...rest}) => {\r\n    const [regionId, setRegionId] = useState(null)\r\n    const navigate = useNavigate();\r\n    let {data: branchLevels} = useGetAllQuery({key: KEYS.branches, url: URLS.branches})\r\n    branchLevels = getSelectOptionsListFromData(get(branchLevels, `data.data`, []), '_id', 'branchname')\r\n\r\n    let {data: regions} = useGetAllQuery({key: KEYS.regions, url: URLS.regions})\r\n    regions = getSelectOptionsListFromData(get(regions, `data.data`, []), '_id', 'name')\r\n\r\n\r\n    let {data: districts} = useGetOneQuery({\r\n        id: regionId,\r\n        key: KEYS.districtsByRegion,\r\n        url: URLS.districtsByRegion,\r\n        enabled: !!(regionId)\r\n    })\r\n    districts = getSelectOptionsListFromData(get(districts, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: positions} = useGetAllQuery({key: KEYS.position, url: URLS.position})\r\n    positions = getSelectOptionsListFromData(get(positions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: genders} = useGetAllQuery({key: KEYS.genders, url: URLS.genders})\r\n    genders = getSelectOptionsListFromData(get(genders, `data.data`, []), '_id', 'name')\r\n    let {data: citizenship} = useGetAllQuery({key: KEYS.citizenship, url: URLS.citizenship})\r\n    citizenship = getSelectOptionsListFromData(get(citizenship, `data.data`, []), '_id', 'name')\r\n\r\n    const {mutate: createRequest, isLoading} = usePostQuery({listKeyId: KEYS.employee})\r\n\r\n    const create = ({data}) => {\r\n        createRequest({url: URLS.employee, attributes: {...data, photo: \"\"}}, {\r\n            onSuccess: () => {\r\n                navigate('/branches/employees')\r\n            },\r\n            onError: () => {\r\n            }\r\n        })\r\n    }\r\n\r\n    const setObjectType = (val, name) => {\r\n        if (isEqual(name, 'regions') && val) {\r\n            setRegionId(val);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {isLoading && <OverlayLoader/>}\r\n            <Panel>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Search/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Panel>\r\n            <Section>\r\n                <Row className={'mb-25'}>\r\n                    <Col xs={12}>\r\n                        <Title>Add employee</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Form getValueFromField={(val, name) => setObjectType(val, name)}\r\n                      footer={<Button type={\"submit\"} lg>Add</Button>} formRequest={(values) => create(values)}>\r\n                    <Row className={'mb-15'}>\r\n                        <Col xs={4}>\r\n                            <Field name={'name'} type={'input'}\r\n                                   label={'Name'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'secondname'} type={'input'}\r\n                                   label={'Secondname'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'middlename'} type={'input'}\r\n                                   label={'Middlename'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'branch'} type={'select'} label={'Branch'}\r\n                                   options={branchLevels}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'position'} type={'select'} label={'Position'}\r\n                                   options={positions}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'job_title'} type={'input'}\r\n                                   label={'Job title'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'passportSeries'} type={'input-mask'}\r\n                                   label={'Passport seria'}\r\n                                   property={{mask: 'aa', maskChar: '_'}}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'passportNumber'} type={'input-mask'}\r\n                                   label={'Passport number'}\r\n                                   property={{mask: '9999999', maskChar: '_'}}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n\r\n\r\n                            <Field name={'pin'} type={'input-mask'} label={'PINFL'}\r\n                                   property={{mask: '99999999999999', maskChar: '_'}}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'regions'} type={'select'} label={'Region'} options={regions}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'districts'} type={'select'} label={'District'} options={districts}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n\r\n\r\n                        <Col xs={4}>\r\n                            <Field name={'address'} type={'input'}\r\n                                   label={'address'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'telephonenumber'} type={'input'}\r\n                                   label={'Phone'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'dateofbirth'} type={'datepicker'}\r\n                                   label={'Birth date'}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'gender'} type={'select'} label={'Gender'} options={genders}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'citizenship'} type={'select'} label={'Citizenship'} options={citizenship}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmployeeAddContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport EmployeeAddContainer from \"../containers/EmployeeAddContainer\";\r\n\r\n\r\n\r\nconst Styled = styled.div`\r\n`;\r\nconst EmployeeAddPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <EmployeeAddContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default EmployeeAddPage;"],"names":["id","branch","useState","regionId","setRegionId","navigate","useNavigate","branchLevels","useGetAllQuery","key","KEYS","url","URLS","data","getSelectOptionsListFromData","get","regions","districts","useGetOneQuery","enabled","positions","genders","citizenship","usePostQuery","listKeyId","createRequest","mutate","isLoading","xs","className","getValueFromField","val","name","isEqual","setObjectType","footer","type","lg","formRequest","values","attributes","photo","onSuccess","onError","create","label","params","required","options","property","mask","maskChar","Styled","styled","rest"],"sourceRoot":""}