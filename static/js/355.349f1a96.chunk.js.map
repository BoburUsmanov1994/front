{"version":3,"file":"static/js/355.349f1a96.chunk.js","mappings":"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","sources":["components/panel/index.jsx","components/search/index.jsx","components/section/index.jsx","components/step-nav/index.jsx","components/table/index.jsx","components/ui/title/index.jsx","modules/products/components/create/StepFive.jsx","modules/products/components/create/StepFour.jsx","modules/products/components/create/StepOne.jsx","modules/products/components/create/StepSix.jsx","modules/products/components/create/StepThree.jsx","modules/products/components/create/StepTwo.jsx","utils/index.js","../node_modules/react-feather/dist/icons/download.js","../node_modules/react-feather/dist/icons/trash-2.js","../node_modules/react-step-wizard/dist/react-step-wizard.min.js"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.div`\r\n  padding: 12px 15px;\r\n  background-color: #F7F7F7;\r\n  width: 100%;\r\n  display: block;\r\n`;\r\n\r\nconst Panel = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Panel;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Styled = styled.form`\r\n  display: flex;\r\n\r\n  .search-form-input {\r\n    padding: 15px 25px;\r\n    border: 1px solid #CDCDCD;\r\n    border-radius: 5px 0px 0px 5px;\r\n    display: block;\r\n    width: 100%;\r\n    outline: none;\r\n    transition: 0.2s ease;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Regular', sans-serif;\r\n\r\n    &:focus {\r\n      border-color: #13D6D1;\r\n    }\r\n  }\r\n\r\n  .search-form-btn {\r\n    padding: 15px 20px;\r\n    min-width: 175px;\r\n    text-align: center;\r\n    border: none;\r\n    background: #13D6D1;\r\n    border-radius: 0px 5px 5px 0px;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Medium', sans-serif;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Search = ({\r\n                    ...rest\r\n                }) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const {t} = useTranslation()\r\n    const onSubmit = (data) => {\r\n        console.log('search', data)\r\n    }\r\n    return (\r\n        <Styled onSubmit={handleSubmit(onSubmit)} {...rest}>\r\n            <input placeholder={t('Поиск')}  {...register(\"search\")} type=\"text\" className={'search-form-input'}/>\r\n            <button className={'search-form-btn'} type={'submit'}>{t(\"Найти\")}</button>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.section`\r\n  padding: 25px 15px;\r\n  background-color: #fff;\r\n  \r\n`;\r\nconst Section = ({\r\n                     children,\r\n                     ...rest\r\n                 }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ChevronRight} from \"react-feather\";\r\nimport classNames from \"classnames\";\r\nimport {includes, isEqual, range} from \"lodash\";\r\n\r\nconst Styled = styled.ul`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  padding: 10px 0;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n\r\n  .step {\r\n    &-item {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 25px;\r\n\r\n      &:first-child {\r\n        margin-left: 12px;\r\n      }\r\n\r\n      &.active {\r\n        .step-number {\r\n          background-color: #1D283A;\r\n        }\r\n\r\n        .step-text {\r\n          font-family: 'Gilroy-Medium', sans-serif;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-number {\r\n      display: flex;\r\n      width: 55px;\r\n      height: 55px;\r\n      -webkit-border-radius: 50%;\r\n      -moz-border-radius: 50%;\r\n      border-radius: 50%;\r\n      background-color: #E6E6E6;\r\n      font-size: 24px;\r\n      justify-content: center;\r\n      align-items: center;\r\n      font-family: 'Gilroy-Heavy', sans-serif;\r\n      color: #fff;\r\n      padding: 5px;\r\n      background-clip: content-box;\r\n      border: 1px dashed rgba(29, 40, 58, 0.6);\r\n      margin-right: 25px;\r\n      position: relative;\r\n      transition: 0.3s ease;\r\n      align-items: center;\r\n\r\n      &:after {\r\n        position: absolute;\r\n        width: 65px;\r\n        height: 65px;\r\n        content: '';\r\n        border: 1px dashed rgba(112, 112, 112, 0.4);\r\n        -webkit-border-radius: 50%;\r\n        -moz-border-radius: 50%;\r\n        border-radius: 50%;\r\n      }\r\n\r\n      &:before {\r\n        position: absolute;\r\n        width: 75px;\r\n        height: 75px;\r\n        content: '';\r\n        border: 1px dashed rgba(112, 112, 112, 0.2);\r\n        -webkit-border-radius: 50%;\r\n        -moz-border-radius: 50%;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n\r\n    &-text {\r\n      display: inline-block;\r\n      margin-right: 10px;\r\n      color: rgba(0, 0, 0, 0.6);\r\n      font-size: 16px;\r\n    }\r\n\r\n    &-icon {\r\n      display: inline-block;\r\n      margin-top: 8px;\r\n    }\r\n  }\r\n`;\r\nconst StepNav = ({\r\n                     step = 1,\r\n                     steps = ['Добавление продукта', 'Добавление параметров', 'Калькуляция', 'Франшиза', 'Проверка данных', 'Подтверждение'],\r\n                     ...rest\r\n                 }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            {\r\n                steps && steps.map((item, i) => <li\r\n                    className={classNames('step-item', {active: includes(range(0, step + 1), i + 1)})}>\r\n                    <span className={'step-number'}>{i + 1}</span>\r\n                    <span className={'step-text'}>{item}</span>\r\n                    <span className={'step-icon'}>\r\n                    { i+1 < steps.length && <ChevronRight size={18} color={includes(range(0, step + 1), i + 1) ? '#000' : '#E5E5E5'}/>}\r\n                </span>\r\n                </li>)\r\n            }\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default StepNav;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Styled = styled.table`\r\n  width: 100%;\r\n  //overflow-x: scroll;\r\n\r\n  .form-group {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  tr {\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .table-head {\r\n    &.hidden {\r\n      opacity: 0;\r\n    }\r\n\r\n    th {\r\n      padding: 12px;\r\n      color: #010101;\r\n      font-family: 'Gilroy-Medium', sans-serif;\r\n      font-size: 16px;\r\n\r\n      &:first-child {\r\n        text-align: left;\r\n        padding-left: 20px;\r\n      }\r\n\r\n      text-align: center;\r\n\r\n      &:last-child {\r\n        text-align: right;\r\n        padding-right: 20px;\r\n        min-width: 125px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .table-body {\r\n    tr:nth-child(2n+1) {\r\n      background-color: #F4F4F4;\r\n    }\r\n\r\n    td {\r\n      padding: 12px;\r\n      font-family: 'Gilroy-Regular', sans-serif;\r\n      color: #000;\r\n      .w-250{\r\n        min-width: 250px !important;\r\n      }\r\n\r\n      &:first-child {\r\n        text-align: left;\r\n        padding-left: 20px;\r\n      }\r\n\r\n      text-align: center;\r\n\r\n      &:last-child {\r\n        text-align: right;\r\n        padding-right: 20px;\r\n      }\r\n    }\r\n  }\r\n \r\n`;\r\n\r\nconst Table = ({\r\n                   thead = [],\r\n                   children,\r\n                   hideThead = true,\r\n                   ...rest\r\n               }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <thead className={classNames('table-head', {hidden: hideThead})}>\r\n            <tr>\r\n                {thead && thead.map((th, i) => <th key={i + 1}>{th}</th>)}\r\n            </tr>\r\n            </thead>\r\n            <tbody className={'table-body'}>\r\n            {children}\r\n            </tbody>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Table;","import React, {useEffect, useState,useRef} from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Styled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  h2{\r\n    padding-right: 25px;\r\n    font-size: 24px;\r\n    color: #000;\r\n    font-family: 'Gilroy-Bold', sans-serif;\r\n    margin-bottom: 0;\r\n  }\r\n  .line{\r\n    height: 1px;\r\n    background-color: #E5E5E5;\r\n    margin-top: 5px;\r\n    ${({w}) => w && `width: calc(100% - ${w}px - 10px);`}\r\n  }\r\n`;\r\nconst Title = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    const [width,setWidth] = useState(0);\r\n    useEffect(()=>{\r\n        setWidth(ref.current.clientWidth)\r\n    },[])\r\n    const ref = useRef(null)\r\n    return (\r\n        <Styled {...rest} w={width}>\r\n            <h2 ref={ref}>{children}</h2>\r\n            <div className=\"line\"></div>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, includes, isEqual} from \"lodash\"\r\nimport Title from \"../../../../components/ui/title\";\r\nimport Table from \"../../../../components/table\";\r\nimport {useGetAllQuery, usePostQuery, usePutQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {OverlayLoader} from \"../../../../components/loader\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport {Download} from \"react-feather\";\r\n\r\nconst StepFive = ({id = null, ...props}) => {\r\n\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const {mutate: createProduct, isLoading} = usePostQuery({listKeyId: KEYS.products})\r\n    const {mutate: updateProduct, isLoading: updateLoading} = usePutQuery({listKeyId: KEYS.products})\r\n\r\n    let {data: groups} = useGetAllQuery({key: KEYS.groupsofproducts, url: URLS.groupsofproducts})\r\n    groups = getSelectOptionsListFromData(get(groups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: subGroups} = useGetAllQuery({key: KEYS.subgroupsofproducts, url: URLS.subgroupsofproducts})\r\n    subGroups = getSelectOptionsListFromData(get(subGroups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: insurances} = useGetAllQuery({key: KEYS.typeofinsurer, url: URLS.typeofinsurer})\r\n    insurances = getSelectOptionsListFromData(get(insurances, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: status} = useGetAllQuery({key: KEYS.statusofproduct, url: URLS.statusofproduct})\r\n    status = getSelectOptionsListFromData(get(status, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: polices} = useGetAllQuery({key: KEYS.typeofpolice, url: URLS.typeofpolice})\r\n    polices = getSelectOptionsListFromData(get(polices, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: persons} = useGetAllQuery({key: KEYS.typeofpersons, url: URLS.typeofpersons})\r\n    persons = getSelectOptionsListFromData(get(persons, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: payments} = useGetAllQuery({key: KEYS.typeofpayment, url: URLS.typeofpayment})\r\n    payments = getSelectOptionsListFromData(get(payments, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: policyformats} = useGetAllQuery({key: KEYS.policyformats, url: URLS.policyformats})\r\n    policyformats = getSelectOptionsListFromData(get(policyformats, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: applicationformdocs} = useGetAllQuery({key: KEYS.applicationformdocs, url: URLS.applicationformdocs})\r\n    applicationformdocs = getSelectOptionsListFromData(get(applicationformdocs, `data.data`, []), '_id', 'url')\r\n\r\n    let {data: contractform} = useGetAllQuery({key: KEYS.contractform, url: URLS.contractform})\r\n    contractform = getSelectOptionsListFromData(get(contractform, `data.data`, []), '_id', 'url')\r\n\r\n    let {data: additionaldocuments} = useGetAllQuery({key: KEYS.additionaldocuments, url: URLS.additionaldocuments})\r\n    additionaldocuments = getSelectOptionsListFromData(get(additionaldocuments, `data.data`, []), '_id', 'url')\r\n\r\n\r\n    const findItem = (items = [], id, multiple = false) => {\r\n        if (!multiple) {\r\n            return items.find(item => isEqual(get(item, 'value'), id)) || {}\r\n        } else {\r\n            return items.filter(item => includes(id, get(item, 'value'))).map(({label}) => label).join(\" , \") || \"-\"\r\n        }\r\n    }\r\n\r\n    const nextStep = () => {\r\n        if (id) {\r\n            updateProduct({url: `${URLS.products}/${id}`, attributes: product}, {\r\n                onSuccess: () => {\r\n                    resetRiskList();\r\n                    resetProduct();\r\n                    props.nextStep();\r\n                },\r\n                onError: () => {\r\n\r\n                }\r\n            })\r\n        } else {\r\n            createProduct({url: URLS.products, attributes: product}, {\r\n                onSuccess: () => {\r\n                    resetRiskList();\r\n                    resetProduct();\r\n                    props.nextStep();\r\n                },\r\n                onError: () => {\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetRiskList();\r\n        resetProduct();\r\n        props.firstStep();\r\n    }\r\n\r\n    return (<>\r\n            {(isLoading || updateLoading) && <OverlayLoader/>}\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <StepNav step={5}/>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <Form formRequest={nextStep}>\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Title>Проверьте данные </Title>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={'mb-25'}>\r\n                            <Col xs={6}>\r\n                                <Table thead={['1', '2']}>\r\n                                    <tr>\r\n                                        <td>Категория</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(groups, get(product, 'groupofproductsId', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Под категория</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(subGroups, get(product, 'subgroupofproductsId', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Код назначения</td>\r\n                                        <td><strong>{get(product, 'codeproduct', '-')}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Работа по версии продукта (Версия продукта)</td>\r\n                                        <td><strong>{get(product, 'versionproduct', '-')}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Тип страховщика</td>\r\n                                        <td>\r\n                                            <strong>{findItem(persons, get(product, 'typeofpersones', []), true)}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Наименование продукта</td>\r\n                                        <td><strong>{get(product, 'productname', '-')}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Статус договора</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(status, get(product, 'statusofproducts', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Требует разрешения</td>\r\n                                        <td><strong>{get(product, 'isrequirepermission', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Тип полиса</td>\r\n                                        <td>\r\n                                            <strong>{findItem(polices, get(product, 'typeofpolice', null), true)}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешить несколько агентов</td>\r\n                                        <td><strong>{get(product, 'Isagreement', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированный превентивных мероприятий</td>\r\n                                        <td>\r\n                                            <strong>{get(product, 'Isfixedpreventivemeasures', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешить иностранную валюту</td>\r\n                                        <td><strong>{get(product, 'Isforeigncurrency', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешение изменение франшизы</td>\r\n                                        <td><strong>{get(product, 'Isfranchisechange', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Table thead={['1', '2']}>\r\n                                    <tr>\r\n                                        <td>Форма анкеты</td>\r\n\r\n                                        <td><a\r\n                                            href={get(findItem(applicationformdocs, get(product, 'applicationformId', null)), 'url', '#')}\r\n                                            target={'_blank'} download><Download color={'#13D6D1'}/></a></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Договор</td>\r\n                                        <td><a\r\n                                            href={get(findItem(contractform, get(product, 'contractform', null)), 'url', '#')}\r\n                                            target={'_blank'} download><Download color={'#13D6D1'}/></a></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Приложения</td>\r\n                                        <td><a\r\n                                            href={get(findItem(additionaldocuments, get(product, 'additionaldocuments', null)), 'url', '#')}\r\n                                            target={'_blank'} download><Download color={'#13D6D1'}/></a></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Формат полиса</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(policyformats, get(product, 'policyformatId', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированного страхователя</td>\r\n                                        <td><strong>{get(product, 'Isfixedpolicyholder', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет выгодоприобретеля</td>\r\n                                        <td><strong>{get(product, 'Isbeneficiary', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированного выгодоприобретеля</td>\r\n                                        <td><strong>{get(product, 'Isfixedbeneficiary', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированную страховую сумму</td>\r\n                                        <td><strong>{get(product, 'Isfixedfee', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешить полис без оплаты</td>\r\n                                        <td>\r\n                                            <strong>{get(product, 'Ispolicywithoutpayment', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Тип оплаты</td>\r\n                                        <td>\r\n                                            <strong>{findItem(payments, get(product, 'typeofpayment', null), true)}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированную комиссию</td>\r\n                                        <td><strong>{get(product, 'Isfixedfee', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет диапазон ставок</td>\r\n                                        <td><strong>{get(product, 'Isbettingrange', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет франшизу</td>\r\n                                        <td><strong>{get(product, 'Isfranchisechange', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} className={'mt-32'}>\r\n                                <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                        back>Отменить</Button>\r\n                                <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                        outlined>Назад</Button>\r\n                                <Button type={'submit'} success>Подтвердить</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StepFive;","import React, {useState, useMemo} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, includes, isEqual} from \"lodash\"\r\nimport Title from \"../../../../components/ui/title\";\r\nimport {useGetAllQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport Table from \"../../../../components/table\";\r\nimport Flex from \"../../../../components/flex\";\r\n\r\nconst StepFour = ({id = null, ...props}) => {\r\n    const [fields, setFields] = useState({riskOptions: []})\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const nextStep = ({data}) => {\r\n        const {riskOptions, ...rest} = data;\r\n        setProduct(rest);\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    let {data: agents} = useGetAllQuery({key: KEYS.agents, url: URLS.agents})\r\n    agents = getSelectOptionsListFromData(get(agents, `data.data`, []), '_id', 'fullName')\r\n\r\n    let {data: classes} = useGetAllQuery({key: KEYS.classes, url: URLS.classes})\r\n    const classOptions = getSelectOptionsListFromData(get(classes, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: risks} = useGetAllQuery({key: KEYS.risk, url: URLS.risk})\r\n    let risksOptions = getSelectOptionsListFromData(get(risks, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: franchises} = useGetAllQuery({key: KEYS.typeoffranchise, url: URLS.typeoffranchise})\r\n    franchises = getSelectOptionsListFromData(get(franchises, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: baseFranchises} = useGetAllQuery({key: KEYS.baseoffranchise, url: URLS.baseoffranchise})\r\n    baseFranchises = getSelectOptionsListFromData(get(baseFranchises, `data.data`, []), '_id', 'name')\r\n\r\n    const setFieldValue = (value, name) => {\r\n        if (includes('riskOptions', name) || includes(name, 'franchise')) {\r\n            setFields(prev => ({...prev, [name]: value}));\r\n        }\r\n    }\r\n\r\n\r\n    const findItem = (list = [], id = null) => {\r\n        return list.find(l => isEqual(get(l, \"_id\"), id))\r\n    }\r\n\r\n    console.log('productproduct', product)\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <StepNav step={4}/>\r\n            </Col>\r\n            <Col xs={12}>\r\n                <Form formRequest={nextStep} getValueFromField={setFieldValue}>\r\n                    <Row className={'mb-15'}>\r\n                        <Col xs={12}>\r\n                            <Title>Тарифы</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Агенты'}\r\n                                   type={'select'}\r\n                                   name={'agentlist'}\r\n                                   options={agents}\r\n                                   defaultValue={get(product, 'agentlist')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешить заключение договоров'}\r\n                                   type={'switch'}\r\n                                   name={'Isagreement'}\r\n                                   defaultValue={get(product, 'Isagreement', false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Лимит ответственности'}\r\n                                   type={'number-format-input'}\r\n                                   name={'limitofagreement'}\r\n                                   defaultValue={get(product, 'limitofagreement', 0)}\r\n                                   property={{placeholder: 'Введите значение'}}\r\n                            />\r\n                        </Col>\r\n                        {get(product, 'riskId', []).length > 0 && <Col xs={12}>\r\n                            <hr/>\r\n                            <Table hideThead={false}\r\n                                   thead={['Класс', 'минимальную и  ставку по классу ', 'максимальную ставку по классу',]}>\r\n                                {get(product, 'riskId', []).map((item, i) => <tr key={i + 1}>\r\n                                    <td>\r\n                                        <Field\r\n                                            name={`tariffperclasses[${i}].classes`}\r\n                                            type={'select'}\r\n                                            property={{\r\n                                                hideLabel: true,\r\n                                                bgColor: get(findItem(get(classes, 'data.data'), get(item, \"_id\")), 'color')\r\n                                            }}\r\n                                            options={classOptions}\r\n                                            defaultValue={get(findItem(get(classes, 'data.data'), get(item, \"classeId\")), '_id')}\r\n                                            isDisabled={true}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Flex justify={'center'}>\r\n                                            <Field\r\n                                                name={`tariffperclasses[${i}].min`}\r\n                                                type={'number-format-input'}\r\n                                                property={{hideLabel: true, placeholder: 'Мин', suffix: ' %'}}\r\n                                                defaultValue={get(product, `tariffperclasses[${i}].min`, 0)}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Flex justify={'flex-end'}>\r\n                                            <Field\r\n                                                name={`tariffperclasses[${i}].max`}\r\n                                                type={'number-format-input'}\r\n                                                property={{hideLabel: true, placeholder: 'Макс', suffix: ' %'}}\r\n                                                defaultValue={get(product, `tariffperclasses[${i}].max`, 0)}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                </tr>)}\r\n                            </Table>\r\n                        </Col>}\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={12}><Title>Франшиза</Title></Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n\r\n                        {get(product, 'riskId', []).length > 0 && <Col xs={12}>\r\n                            <hr/>\r\n                            <div className=\"horizontal-scroll\">\r\n                                <Table hideThead={false}\r\n                                       thead={['Страховой риск', 'Имеет франшизу', 'Строго фиксирована', 'Введите фиксированное значение', 'Укажите тип франшизы', 'Укажите базу франшизы', 'Франшиза']}>\r\n                                    {get(product, 'riskId', []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>\r\n                                            <Field\r\n                                                name={`franchise[${i}].risk`}\r\n                                                type={'select'}\r\n                                                property={{hideLabel: true}}\r\n                                                options={risksOptions}\r\n                                                defaultValue={get(findItem(get(risks, 'data.data'), get(item, 'risk')), '_id')}\r\n                                                isDisabled={true}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Flex justify={'center'}>\r\n                                                <Field\r\n                                                    type={'switch'}\r\n                                                    name={`franchise[${i}].Isfranchise`}\r\n                                                    defaultValue={get(product, `franchise[${i}].Isfranchise`, false)}\r\n                                                    property={{hideLabel: true}}\r\n                                                />\r\n                                            </Flex>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Flex justify={'center'}>\r\n                                                <Field\r\n                                                    type={'switch'}\r\n                                                    name={`franchise[${i}].Isfixedfranchise`}\r\n                                                    defaultValue={get(product, `franchise[${i}].Isfixedfranchise`, false)}\r\n                                                    property={{hideLabel: true}}\r\n                                                />\r\n                                            </Flex>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Flex justify={'center'}>\r\n                                                <Field\r\n                                                    name={`franchise[${i}].fixedvalue`}\r\n                                                    type={'number-format-input'}\r\n                                                    property={{\r\n                                                        hideLabel: true,\r\n                                                        placeholder: 'ввод значения',\r\n                                                        disabled: !!!(get(fields, `franchise[${i}].Isfixedfranchise`))\r\n                                                    }}\r\n                                                    defaultValue={get(product, `franchise[${i}].fixedvalue`, 0)}\r\n                                                />\r\n                                            </Flex>\r\n                                        </td>\r\n                                        <td className={'w-250'}>\r\n                                            <Flex justify={'center'}>\r\n                                                <Field\r\n                                                    className={'w-250'}\r\n                                                    name={`franchise[${i}].typeoffranchise`}\r\n                                                    type={'select'}\r\n                                                    property={{hideLabel: true}}\r\n                                                    options={franchises}\r\n                                                    isDisabled={!!!(get(fields, `franchise[${i}].Isfranchise`))}\r\n                                                    defaultValue={get(product, `franchise[${i}].typeoffranchise`)}\r\n                                                />\r\n                                            </Flex>\r\n                                        </td>\r\n                                        <td className={'w-250'}>\r\n                                            <Flex justify={'center'}>\r\n                                                <Field\r\n                                                    className={'w-250'}\r\n                                                    name={`franchise[${i}].baseoffranchise`}\r\n                                                    type={'select'}\r\n                                                    property={{hideLabel: true}}\r\n                                                    options={baseFranchises}\r\n                                                    isDisabled={!!!(get(fields, `franchise[${i}].Isfranchise`))}\r\n                                                    defaultValue={get(product, `franchise[${i}].baseoffranchise`)}\r\n                                                />\r\n                                            </Flex>\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <Flex justify={'flex-end'}>\r\n                                                <Field\r\n\r\n                                                    name={`franchise[${i}].franchise`}\r\n                                                    type={'input'}\r\n                                                    property={{\r\n                                                        hideLabel: true,\r\n                                                        placeholder: 'Введите значение',\r\n                                                        disabled: !!!(get(fields, `franchise[${i}].Isfranchise`))\r\n                                                    }}\r\n                                                    defaultValue={get(product, `franchise[${i}].franchise`, '')}\r\n                                                />\r\n                                            </Flex>\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </Table>\r\n                            </div>\r\n                        </Col>}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mt-32'}>\r\n                            <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                    back>Отменить</Button>\r\n                            <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                    outlined>Назад</Button>\r\n                            <Button type={'submit'} success>Продолжить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default StepFour;","import React, {useState, memo, useEffect} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, includes, some, values, isEmpty, isEqual} from \"lodash\"\r\nimport {useGetAllQuery, useGetOneQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport Title from \"../../../../components/ui/title\";\r\nimport {toast} from \"react-toastify\";\r\nimport Table from \"../../../../components/table\";\r\nimport {Trash2} from \"react-feather\";\r\n\r\nconst StepOne = ({id=null,...props}) => {\r\n\r\n    const [riskItem, setRiskItem] = useState({});\r\n    const [productGroupId, setProductGroupId] = useState(null);\r\n    const [riskTypeId, setRiskTypeId] = useState(null);\r\n\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const addRiskList = useSettingsStore(state => get(state, 'addRiskList', () => {\r\n    }))\r\n    const removeRiskList = useSettingsStore(state => get(state, 'removeRiskList', () => {\r\n    }))\r\n    const riskList = useSettingsStore(state => get(state, 'riskList', []))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    useEffect(()=>{\r\n        if(id && isEmpty(riskItem) && !isEmpty(get(product,'riskId',[]))){\r\n            addRiskList(...get(product,'riskId',[]).map(({classeId,risk,riskgroup})=>({risk:get(risk,'_id'),riskgroup:get(riskgroup,'_id'),classeId:get(classeId,'_id')})))\r\n        }\r\n    },[product])\r\n\r\n    const nextStep = ({data}) => {\r\n        const {classeId, risk, riskgroup, ...rest} = data\r\n        setProduct(rest);\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    let {data: groups} = useGetAllQuery({key: KEYS.groupsofproducts, url: URLS.groupsofproducts})\r\n    groups = getSelectOptionsListFromData(get(groups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: subGroups} = useGetOneQuery({id:productGroupId,key: KEYS.subgroupsofproductsFilter, url: URLS.subgroupsofproductsFilter,enabled:!!productGroupId})\r\n    subGroups = getSelectOptionsListFromData(get(subGroups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: insurances} = useGetAllQuery({key: KEYS.typeofinsurer, url: URLS.typeofinsurer})\r\n    insurances = getSelectOptionsListFromData(get(insurances, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: sectors} = useGetAllQuery({key: KEYS.typeofsector, url: URLS.typeofsector})\r\n    sectors = getSelectOptionsListFromData(get(sectors, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: persons} = useGetAllQuery({key: KEYS.typeofpersons, url: URLS.typeofpersons})\r\n    persons = getSelectOptionsListFromData(get(persons, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: status} = useGetAllQuery({key: KEYS.statusofproduct, url: URLS.statusofproduct})\r\n    status = getSelectOptionsListFromData(get(status, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: riskGroups} = useGetAllQuery({key: KEYS.typeofrisk, url: URLS.typeofrisk})\r\n    riskGroups = getSelectOptionsListFromData(get(riskGroups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: risksList} = useGetAllQuery({key: KEYS.risk, url: URLS.risk})\r\n    risksList = getSelectOptionsListFromData(get(risksList, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: risksData} = useGetOneQuery({id:riskTypeId,key: KEYS.riskFilter, url: URLS.riskFilter,enabled:!!riskTypeId})\r\n    let risks = getSelectOptionsListFromData(get(risksData, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: insuranceClassesList} = useGetAllQuery({key: KEYS.classes, url: URLS.classes})\r\n    let insuranceClasses = getSelectOptionsListFromData(get(insuranceClassesList, `data.data`, []), '_id', 'name')\r\n\r\n    const setRisk = (value, name) => {\r\n        if (includes(['riskgroup', 'classeId', 'risk'], name)) {\r\n            setRiskItem(prev => ({...prev, [name]: value}))\r\n        }\r\n        if(isEqual(name,'groupofproductsId')){\r\n                setProductGroupId(value)\r\n        }\r\n        if(isEqual(name,'riskgroup')){\r\n            setRiskTypeId(value)\r\n        }\r\n    }\r\n\r\n    const addRiskItem = () => {\r\n        if (some(values(riskItem), val => isEmpty(val))) {\r\n            toast.warn('You have to select all fields')\r\n        } else {\r\n            addRiskList({...riskItem, id: riskList.length + 1})\r\n        }\r\n        setRiskItem({riskgroup: '', classeId: '', risk: ''})\r\n    }\r\n\r\n\r\n    const findItem = (list = [], id = null) =>{\r\n        return list.find(l => isEqual(get(l,\"_id\"),id))\r\n    }\r\n\r\n    console.log('riskItem',riskItem,risksData)\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <StepNav step={1}/>\r\n            </Col>\r\n            <Col xs={12}>\r\n                <Form formRequest={nextStep} getValueFromField={setRisk}>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <Field label={'Выберите категорию'} options={groups} type={'select'}\r\n                                   name={'groupofproductsId'} params={{required: true}}\r\n                                   property={{hasRequiredLabel: true}}\r\n                                   defaultValue={get(product, 'groupofproductsId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field label={'Выберите подкатегорию '} options={subGroups} type={'select'}\r\n                                   name={'subgroupofproductsId'} params={{required: true}}\r\n                                   property={{hasRequiredLabel: true}}\r\n                                   defaultValue={get(product, 'subgroupofproductsId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field label={' Наименование продукта'} type={'input'} name={'productname'}\r\n                                   params={{required: true}}\r\n                                   property={{hasRequiredLabel: true, placeholder: 'Введите значение'}}\r\n                                   defaultValue={get(product, 'productname')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field label={'Код назначения'}\r\n                                   type={'input'}\r\n                                   name={'codeproduct'}\r\n                                   property={{placeholder: 'Введите значение'}}\r\n                                   defaultValue={get(product, 'codeproduct', '')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                label={'Работа по версии продукта (Версия продукта)'}\r\n                                type={'input'}\r\n                                name={'versionproduct'}\r\n                                property={{placeholder: 'Введите значение'}}\r\n                                defaultValue={get(product, 'versionproduct', '')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                options={insurances}\r\n                                label={'Форма страхования'}\r\n                                type={'select'}\r\n                                name={'typeofinsurerId'}\r\n                                defaultValue={get(product, 'typeofinsurerId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                options={sectors}\r\n                                label={'Указать сектор'}\r\n                                type={'select'}\r\n                                name={'typeofsectorId'}\r\n                                defaultValue={get(product, 'typeofsectorId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                label={'Требуется разрешение'}\r\n                                type={'switch'}\r\n                                name={'isrequirepermission'}\r\n                                defaultValue={get(product, 'isrequirepermission', false)}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={9}>\r\n                            <Field\r\n                                options={persons}\r\n                                label={'Выбрать тип страховщика'}\r\n                                type={'checkbox'}\r\n                                name={'typeofpersones'}\r\n                                defaultValue={get(product, 'typeofpersones', [])}\r\n                              />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field options={status}\r\n                                   label={'Статус продукта'}\r\n                                   type={'switch'}\r\n                                   name={'statusofproducts'}  defaultValue={get(product, 'statusofproducts', false)} params={{required: true}}\r\n                                   />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mb-15'}>\r\n                            <Title>Добавить риски</Title>\r\n                        </Col>\r\n                        <Col xs={12} className={'mb-15'}>\r\n                            <Row>\r\n                                <Col xs={10}>\r\n                                    <Row align={'center'}>\r\n                                        <Col xs={4}>\r\n                                            <Field\r\n                                                options={riskGroups}\r\n                                                type={'select'}\r\n                                                name={'riskgroup'}\r\n                                                defaultValue={get(riskItem, 'riskgroup')}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: 'Выберите группу  риска'\r\n                                                }}/>\r\n                                        </Col>\r\n                                        <Col xs={4}>\r\n                                            <Field\r\n                                                options={risks}\r\n                                                type={'select'}\r\n                                                name={'risk'}\r\n                                                defaultValue={get(riskItem, 'risk')}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: 'Выберите риск'\r\n                                                }}/>\r\n                                        </Col>\r\n                                        <Col xs={4}>\r\n                                            <Field\r\n                                                options={insuranceClasses.filter(classItem => includes(get(findItem(\r\n                                                    get(risksData,'data.data',[]),get(riskItem,'risk')\r\n                                                ),'classesId',[]),get(classItem,'value')))}\r\n                                                type={'select'}\r\n                                                name={'classeId'}\r\n                                                defaultValue={get(riskItem, 'classeId')}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: 'Класс страхования'\r\n                                                }}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xs={2} className={'text-right'}>\r\n                                    <Button onClick={addRiskItem} type={'button'}>Добавить</Button>\r\n                                </Col>\r\n                                {riskList.length > 0 && <Col xs={12}>\r\n                                    <hr/>\r\n                                    <Table hideThead={false} thead={['Тип риска','Риск','Класс страхования','Delete']}>\r\n                                        {riskList.map((item, i) => <tr key={i + 1}>\r\n                                            <td>\r\n                                                <Field\r\n                                                    type={'select'}\r\n                                                    options={riskGroups} name={`riskId[${i}.riskgroup`}\r\n                                                    isDisabled={true}\r\n                                                    defaultValue={get(item, 'riskgroup')}\r\n                                                    property={{hideLabel: true}}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Field\r\n                                                    type={'select'}\r\n                                                    options={risksList}\r\n                                                    name={`riskId[${i}.risk`}\r\n                                                    isDisabled={true}\r\n                                                    defaultValue={get(item, 'risk')}\r\n                                                    property={{hideLabel: true}}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Field\r\n                                                    type={'select'}\r\n                                                    options={insuranceClasses}\r\n                                                    name={`riskId[${i}.classeId`}\r\n                                                    isDisabled={true}\r\n                                                    defaultValue={get(item, 'classeId')}\r\n                                                    property={{hideLabel: true,bgColor:get(findItem(get(insuranceClassesList,'data.data'),get(item,'classeId')),'color')}}\r\n                                                />\r\n                                            </td>\r\n                                            <td className={'cursor-pointer'}\r\n                                                onClick={() => removeRiskList(get(item, 'id', null))}><Trash2\r\n                                                color={'#dc2626'}/></td>\r\n                                        </tr>)}\r\n                                    </Table>\r\n                                </Col>}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mt-32'}>\r\n                            <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                    back>Отменить</Button>\r\n                            <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                    outlined>Назад</Button>\r\n                            <Button type={'submit'} success>Продолжить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default memo(StepOne);","import React from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport styled from \"styled-components\";\r\nimport checkImg from \"../../../../assets/images/check.png\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Styled = styled.div`\r\n  .result {\r\n    padding: 30px 50px;\r\n    border: 1px solid #ADADAD;\r\n    -webkit-border-radius: 15px;\r\n    -moz-border-radius: 15px;\r\n    border-radius: 15px;\r\n    margin-top: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    p{\r\n      font-size: 32px;\r\n    }\r\n   \r\n  }\r\n  a{\r\n    margin-top: 25px;\r\n    display: inline-block;\r\n    color: #1D283A;\r\n    transition: 0.3s ease;\r\n    &:hover{\r\n      color: #13D6D1;\r\n    }\r\n  }\r\n`\r\n\r\nconst StepSix = ({...rest}) => {\r\n\r\n    return (<Styled {...rest}>\r\n        <Row justify={'center'}>\r\n            <Col xs={12}>\r\n                <StepNav step={6}/>\r\n            </Col>\r\n            <Col xs={6}>\r\n                <div className=\"result\">\r\n                    <img className={'img-fluid'} src={checkImg} alt=\"check\"/>\r\n                    <p>Продукт успешно добавлен!</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Link to={'/dashboard'}>Перейти на главную страницу</Link>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </Styled>);\r\n};\r\n\r\nexport default StepSix;","import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, head, includes} from \"lodash\"\r\nimport {useGetAllQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\n\r\nconst StepThree = ({...props}) => {\r\n    const [show, setShow] = useState({\r\n        Isfixedpolicyholder: false,\r\n        Isfixedbeneficiary: false,\r\n        Isfixedpremium: false,\r\n        Isfixedrate: false,\r\n        Isfixedsuminsured: false,\r\n        Isfixedfee: false,\r\n        Isfixedpreventivemeasures: false\r\n    })\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const nextStep = ({data}) => {\r\n        setProduct(data);\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    let {data: agents} = useGetAllQuery({key: KEYS.agents, url: URLS.agents})\r\n    agents = getSelectOptionsListFromData(get(agents, `data.data`, []), '_id', 'fullName')\r\n\r\n    let {data: policyformats} = useGetAllQuery({key: KEYS.policyformats, url: URLS.policyformats})\r\n    policyformats = getSelectOptionsListFromData(get(policyformats, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: refunds} = useGetAllQuery({key: KEYS.typeofrefund, url: URLS.typeofrefund})\r\n    refunds = getSelectOptionsListFromData(get(refunds, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: claimSettlements} = useGetAllQuery({key: KEYS.typeofclaimsettlement, url: URLS.typeofclaimsettlement})\r\n    claimSettlements = getSelectOptionsListFromData(get(claimSettlements, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: payments} = useGetAllQuery({key: KEYS.typeofpayment, url: URLS.typeofpayment})\r\n    payments = getSelectOptionsListFromData(get(payments, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: polices} = useGetAllQuery({key: KEYS.typeofpolice, url: URLS.typeofpolice})\r\n    polices = getSelectOptionsListFromData(get(polices, `data.data`, []), '_id', 'name')\r\n\r\n\r\n    const showField = (value, name) => {\r\n        if (includes(['Isfixedpolicyholder', 'Isfixedbeneficiary', 'Isfixedpremium', 'Isfixedrate', 'Isfixedsuminsured', 'Isfixedfee', 'Isfixedpreventivemeasures'], name)) {\r\n            setShow(prev => ({...prev, [name]: value}))\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <StepNav step={3}/>\r\n            </Col>\r\n            <Col xs={12}>\r\n                <Form formRequest={nextStep} getValueFromField={showField}>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированного страхователя'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedpolicyholder'}\r\n                                   defaultValue={get(product,'Isfixedpolicyholder',false)}\r\n                                   property={{hasRequiredLabel: true}}\r\n                            />\r\n                            {get(show, 'Isfixedpolicyholder', false) &&\r\n                                <Field label={'Имеет фиксированного страхователя'}\r\n                                       type={'select'}\r\n                                       name={'fixedpolicyholder'}\r\n                                       property={{hideLabel: true}}\r\n                                       options={agents}\r\n                                       defaultValue={get(product,'fixedpolicyholder')}\r\n                                />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет  выгодоприобретеля'}\r\n                                   type={'switch'}\r\n                                   name={'Isbeneficiary'}\r\n                                   defaultValue={get(product,'Isbeneficiary',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет  фиксированного выгодоприобретеля'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedbeneficiary'}\r\n                                   defaultValue={get(product,'Isfixedbeneficiary',false)}\r\n\r\n                            />\r\n                            {get(show, 'Isfixedbeneficiary', false) &&\r\n                                <Field label={'Имеет фиксированного страхователя'}\r\n                                       type={'select'}\r\n                                       name={'fixedbeneficiary'}\r\n                                       property={{hideLabel: true}}\r\n                                       options={agents}\r\n                                       defaultValue={get(product,'fixedbeneficiary')}\r\n                                />}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную премию'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedpremium'}\r\n                                   defaultValue={get(product,'Isfixedpremium',false)}\r\n                            />\r\n                            {get(show, 'Isfixedpremium', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedpremium'}\r\n                                property={{hideLabel: true}}\r\n                                defaultValue={get(product,'fixedpremium',0)}\r\n                            />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет диапазон ставок'}\r\n                                   type={'switch'}\r\n                                   name={'Isbettingrange'}\r\n                                   defaultValue={get(product,'Isbettingrange',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную ставку'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedrate'}\r\n                                   defaultValue={get(product,'Isfixedrate',false)}\r\n                            />\r\n                            {get(show, 'Isfixedrate', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedrate'}\r\n                                property={{hideLabel: true, suffix: \" %\"}}\r\n                                defaultValue={get(product,'fixedrate',0)}\r\n                            />}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную страховую сумму'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedsuminsured'}\r\n                                   defaultValue={get(product,'Isfixedsuminsured',false)}\r\n                            />\r\n                            {get(show, 'Isfixedsuminsured', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedsuminsured'}\r\n                                property={{hideLabel: true}}\r\n                                defaultValue={get(product,'fixedsuminsured',0)}\r\n                            />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную комиссию'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedfee'}\r\n                                   defaultValue={get(product,'Isfixedfee',false)}\r\n                            />\r\n                            {get(show, 'Isfixedfee', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedfee'}\r\n                                property={{hideLabel: true, suffix: \" %\"}}\r\n                                defaultValue={get(product,'fixedfee',0)}\r\n                            />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированный превентивных мероприятий '}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedpreventivemeasures'}\r\n                                   defaultValue={get(product,'Isfixedpreventivemeasures',false)}\r\n                            />\r\n                            {get(show, 'Isfixedpreventivemeasures', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedpreventivemeasures'}\r\n                                property={{hideLabel: true, suffix: \" %\"}}\r\n                                defaultValue={get(product,'fixedpreventivemeasures',0)}\r\n                            />}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешить полис без оплаты'}\r\n                                   type={'switch'}\r\n                                   name={'Ispolicywithoutpayment'}\r\n                                   defaultValue={get(product,'Ispolicywithoutpayment',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешить несколько агентов'}\r\n                                   type={'switch'}\r\n                                   name={'Ismultipleagents'}\r\n                                   defaultValue={get(product,'Ismultipleagents',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешить изменение франшизы'}\r\n                                   type={'switch'}\r\n                                   name={'Isfranchisechange'}\r\n                                   defaultValue={get(product,'Isfranchisechange',false)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешать иностранную валюту'}\r\n                                   type={'switch'}\r\n                                   name={'Isforeigncurrency'}\r\n                                   defaultValue={get(product,'Isforeigncurrency',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Форматы полисов'}\r\n                                   type={'select'}\r\n                                   name={'policyformatId'}\r\n                                   options={policyformats}\r\n                                   defaultValue={get(product,'policyformatId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Вид урегулирования претензии'}\r\n                                   type={'select'}\r\n                                   name={'typeofclaimsettlement'}\r\n                                   options={claimSettlements}\r\n                                   defaultValue={get(product,'typeofclaimsettlement')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Тип возмещения'}\r\n                                   type={'radio-group'}\r\n                                   name={'typeofrefund'}\r\n                                   options={refunds}\r\n                                   defaultValue={get(product,'typeofrefund',get(head(refunds),'value'))}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                options={payments}\r\n                                label={'Тип оплаты'}\r\n                                type={'checkbox'}\r\n                                name={'typeofpayment'}\r\n                                defaultValue={get(product,'typeofpayment')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                options={polices}\r\n                                label={'Тип полиса'}\r\n                                type={'checkbox'}\r\n                                name={'typeofpolice'}\r\n                                defaultValue={get(product,'typeofpolice')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'Укажите минимальный срок страхования в днях'}\r\n                                type={'input-range'}\r\n                                name={'minimumterminsurance'}\r\n                                defaultValue={get(product,'minimumterminsurance',0)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'Укажите максимальный срок страхования в днях'}\r\n                                type={'input-range'}\r\n                                name={'maxterminsurance'}\r\n                                defaultValue={get(product,'maxterminsurance',0)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mt-32'}>\r\n                            <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                    back>Отменить</Button>\r\n                            <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                    outlined>Назад</Button>\r\n                            <Button type={'submit'} success>Продолжить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default StepThree;","import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, includes} from \"lodash\"\r\nimport Flex from \"../../../../components/flex\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {useDeleteQuery, useGetAllQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport styled from \"styled-components\";\r\nimport {Download, Trash2} from \"react-feather\";\r\n\r\nconst Styled = styled.div`\r\n  .doc-files {\r\n    background: #FFFFFF;\r\n    border: 1px solid #9A9A9A;\r\n    border-radius: 10px;\r\n    padding: 30px;\r\n    max-width: 400px;\r\n    li{\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin-bottom: 15px;\r\n      &:last-child{\r\n        margin-bottom: 0;\r\n      }\r\n      span{\r\n        font-family: 'Gilroy-Bold', sans-serif;\r\n      }\r\n      a{\r\n      margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst StepTwo = ({...props}) => {\r\n\r\n    const [show, setShow] = useState({isapplicationform: false, iscontractform: false, Isadditionaldocuments: false})\r\n\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const {data:applicationformdocs} = useGetAllQuery({key: KEYS.applicationformdocs, url: URLS.applicationformdocs})\r\n    const {data:contractform} = useGetAllQuery({key: KEYS.contractform, url: URLS.contractform})\r\n    const {data:additionaldocuments} = useGetAllQuery({key: KEYS.additionaldocuments, url: URLS.additionaldocuments})\r\n    const {mutate: deleteApplicationFormDocs} = useDeleteQuery({listKeyId: KEYS.applicationformdocs})\r\n    const {mutate: deleteContactForm} = useDeleteQuery({listKeyId: KEYS.contractform})\r\n    const {mutate: deleteAdditionalDocs} = useDeleteQuery({listKeyId: KEYS.additionaldocuments})\r\n\r\n\r\n    const nextStep = ({data}) => {\r\n        setProduct(data);\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    const showFile = (value, name) => {\r\n        if (includes(['isapplicationform', 'iscontractform', 'Isadditionaldocuments'], name)) {\r\n            setShow(prev => ({...prev, [name]: value}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Styled>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <StepNav step={2}/>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <Form formRequest={nextStep} getValueFromField={showFile}>\r\n                        <Row className={'mb-25'}>\r\n                            <Col xs={4}>\r\n                                <Flex align={'flex-end'}>\r\n                                    <Field label={'Имеет форму анкеты заявления'} type={'switch'}\r\n                                           name={'isapplicationform'}\r\n                                            defaultValue={get(product,'isapplicationform',false)}\r\n\r\n                                    />\r\n                                    {get(show, 'isapplicationform', false) &&\r\n                                        <Field className={'ml-50'} label={'Имеет форму анкеты заявления'}\r\n                                               type={'dropzone'}\r\n                                               name={'applicationformId'}\r\n                                               property={{hideLabel: true, url: URLS.applicationformdocs,key:KEYS.applicationformdocs}}/>}\r\n                                </Flex>\r\n                                {get(show, 'isapplicationform', false) && <ul className={'doc-files'}>\r\n                                    {get(applicationformdocs,'data.data',false) && get(applicationformdocs,'data.data',[]).map(file =><li key={get(file,'_id')}>\r\n                                        <span>{get(file,'name','-')}</span> <div><a href={get(file,'url','#')} target={'_blank'} download><Download color={'#13D6D1'} /></a>\r\n                                        <Trash2 onClick={()=>deleteApplicationFormDocs({url: `${URLS.applicationformdocs}/${get(file,'_id',null)}`})} className={'cursor-pointer '} color={'#dc2626'} /></div>\r\n                                    </li>)}\r\n                                </ul>}\r\n\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Flex align={'flex-end'}>\r\n                                    <Field label={'Имеет конракт'} type={'switch'} name={'iscontractform'}\r\n                                           defaultValue={get(product,'iscontractform',false)} />\r\n                                    {get(show, 'iscontractform', false) &&\r\n                                        <Field className={'ml-50'} label={'Имеет форму анкеты заявления'}\r\n                                               type={'dropzone'}\r\n                                               name={'contractform'}\r\n                                               property={{hideLabel: true, url: URLS.contractform,key:KEYS.contractform}}/>}\r\n                                </Flex>\r\n                                {get(show, 'iscontractform', false) && <ul className={'doc-files'}>\r\n                                    {get(contractform,'data.data',false) && get(contractform,'data.data',[]).map(file =><li key={get(file,'_id')}>\r\n                                        <span>{get(file,'name','-')}</span> <div><a href={get(file,'url','#')} target={'_blank'} download><Download color={'#13D6D1'} /></a>\r\n                                        <Trash2 onClick={()=>deleteContactForm({url: `${URLS.contractform}/${get(file,'_id',null)}`})} className={'cursor-pointer '} color={'#dc2626'} /></div>\r\n                                    </li>)}\r\n                                </ul>}\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Flex align={'flex-end'}>\r\n                                    <Field label={'Имеет приложение'} type={'switch'} name={'Isadditionaldocuments'}\r\n                                           defaultValue={get(product,'Isadditionaldocuments',false)} />\r\n                                    {get(show, 'Isadditionaldocuments', false) &&\r\n                                        <Field className={'ml-50'} label={'Имеет форму анкеты заявления'}\r\n                                               type={'dropzone'}\r\n                                               name={'additionaldocuments'}\r\n                                               property={{hideLabel: true, url: URLS.additionaldocuments,key:KEYS.additionaldocuments}}/>}\r\n                                </Flex>\r\n                                {get(show, 'Isadditionaldocuments', false) && <ul className={'doc-files'}>\r\n                                    {get(additionaldocuments,'data.data',false) && get(additionaldocuments,'data.data',[]).map(file =><li key={get(file,'_id')}>\r\n                                        <span>{get(file,'name','-')}</span> <div><a href={get(file,'url','#')} target={'_blank'} download><Download color={'#13D6D1'} /></a>\r\n                                        <Trash2 onClick={()=>deleteAdditionalDocs({url: `${URLS.additionaldocuments}/${get(file,'_id',null)}`})} className={'cursor-pointer '} color={'#dc2626'} /></div>\r\n                                    </li>)}\r\n                                </ul>}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} className={'mt-32'}>\r\n                                <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                        back>Отменить</Button>\r\n                                <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                        outlined>Назад</Button>\r\n                                <Button type={'submit'} success>Продолжить</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default StepTwo;","import {includes} from \"lodash\";\r\n\r\nconst addDetectClick =  ({setOpen,classNames = []}) => {\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (!classNames.some(className => e.target.classList.contains(className))) {\r\n            setOpen(false);\r\n        }\r\n    });\r\n}\r\nconst removeDetectClick = () => {\r\n    window.removeEventListener('click',addDetectClick,false);\r\n}\r\n\r\nconst hasAccess = (roles = [], can = '') => {\r\n    let access = false;\r\n    if (includes(roles, can)) {\r\n        access = true;\r\n    }\r\n    return access;\r\n}\r\n\r\n\r\nconst getSelectOptionsListFromData = (data = [], value = 'id', label = 'title') => {\r\n    return data.map(item => ({ value: item[value], label: item[label] })) || [];\r\n}\r\n\r\n\r\nexport {\r\n    addDetectClick,\r\n    removeDetectClick,\r\n    hasAccess,\r\n    getSelectOptionsListFromData\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Download = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"7 10 12 15 17 10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"15\",\n    x2: \"12\",\n    y2: \"3\"\n  }));\n});\nDownload.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nDownload.displayName = 'Download';\nexport default Download;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports,require(\"react\")):\"function\"==typeof define&&define.amd?define([\"exports\",\"react\"],n):n((t=t||self).ReactStepWizard={},t.React)}(this,function(t,o){\"use strict\";var i=\"default\"in o?o.default:o;function s(t){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function c(t,n){for(var e=0;e<n.length;e++){var a=n[e];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function p(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,n){return(f=Object.setPrototypeOf||function(t,n){return t.__proto__=n,t})(t,n)}function u(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function l(e){var a=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=r(e);return t=a?(t=r(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),n=this,!(t=t)||\"object\"!=typeof t&&\"function\"!=typeof t?u(n):t}}function n(t,n){var e,a=(n=void 0===n?{}:n).insertAt;t&&\"undefined\"!=typeof document&&(e=document.head||document.getElementsByTagName(\"head\")[0],(n=document.createElement(\"style\")).type=\"text/css\",\"top\"===a&&e.firstChild?e.insertBefore(n,e.firstChild):e.appendChild(n),n.styleSheet?n.styleSheet.cssText=t:n.appendChild(document.createTextNode(t)))}var d={animated:\"rsw_1z\",fadeInRight:\"rsw_1M\",fadeInLeft:\"rsw_19\",fadeOutRight:\"rsw_3C\",fadeOutLeft:\"rsw_1u\"};n(\"/**\\n * Snippets from animate.css\\n * Credit goes to https://github.com/daneden\\n * github.com/daneden/animate.css\\n*/\\n.rsw_1z {\\n  -webkit-animation-duration: .8192s;\\n  animation-duration: .8192s;\\n  -webkit-animation-fill-mode: backwards;\\n  animation-fill-mode: backwards;\\n}\\n\\n/** fadeInRight */\\n@-webkit-keyframes rsw_1M {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n@keyframes rsw_1M {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n.rsw_1M {\\n  -webkit-animation-name: rsw_1M;\\n  animation-name: rsw_1M;\\n}\\n\\n/** fadeInLeft */\\n@-webkit-keyframes rsw_19 {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n@keyframes rsw_19 {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n.rsw_19 {\\n  -webkit-animation-name: rsw_19;\\n  animation-name: rsw_19;\\n}\\n\\n/** fadeOutRight */\\n@-webkit-keyframes rsw_3C {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n}\\n\\n@keyframes rsw_3C {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n}\\n\\n.rsw_3C {\\n  -webkit-animation-name: rsw_3C;\\n  animation-name: rsw_3C;\\n}\\n\\n/** fadeOutLeft */\\n@-webkit-keyframes rsw_1u {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n}\\n\\n@keyframes rsw_1u {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n}\\n\\n.rsw_1u {\\n  -webkit-animation-name: rsw_1u;\\n  animation-name: rsw_1u;\\n}\\n\");var m=\"rsw_2Y\",a=\"rsw_2f\",h=\"rsw_3G\";n(\"/** Step Wizard */\\n.rsw_2Y {\\n    position: relative;\\n}\\n\\n.rsw_2f {\\n    opacity: 0;\\n    pointer-events: none;\\n    position: absolute;\\n    top: 0;\\n    width: 100%;\\n    z-index: 0;\\n}\\n\\n.rsw_3G {\\n    opacity: 1;\\n    pointer-events: inherit;\\n    position: relative;\\n    z-index: 1;\\n}\\n\");var e=function(){!function(t,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),n&&f(t,n)}(r,o.PureComponent);var t,n,e,a=l(r);function r(t){var o;return function(t,n){if(!(t instanceof n))throw new TypeError(\"Cannot call a class as a function\")}(this,r),p(u(o=a.call(this,t)),\"initialState\",function(){var e={activeStep:0,classes:{},hashKeys:{},namedSteps:{}},t=\"object\"===(\"undefined\"==typeof window?\"undefined\":s(window))?o.getHash():\"\",n=o.getSteps();n.forEach(function(t,n){e.hashKeys[n]=t.props&&t.props.hashKey||\"step\".concat(n+1),e.hashKeys[e.hashKeys[n]]=n,e.namedSteps[n]=t.props&&t.props.stepName||\"step\".concat(n+1),e.namedSteps[e.namedSteps[n]]=n});var a=o.props.initialStep-1;return a&&n[a]&&(e.activeStep=a),o.props.isHashEnabled&&t&&void 0!==e.hashKeys[t]&&(e.activeStep=e.hashKeys[t]),o.props.transitions&&(e.classes[e.activeStep]=o.props.transitions.intro||\"\"),e}),p(u(o),\"getHash\",function(){return decodeURI(window.location.hash).replace(/^#/,\"\")}),p(u(o),\"getTransitions\",function(){return o.props.transitions||{enterRight:\"\".concat(d.animated,\" \").concat(d.fadeInRight),enterLeft:\"\".concat(d.animated,\" \").concat(d.fadeInLeft),exitRight:\"\".concat(d.animated,\" \").concat(d.fadeOutRight),exitLeft:\"\".concat(d.animated,\" \").concat(d.fadeOutLeft)}}),p(u(o),\"onHashChange\",function(){o.setActiveStep(o.state.hashKeys[o.getHash()]||0)}),p(u(o),\"isInvalidStep\",function(t){return t<0||t>=o.totalSteps}),p(u(o),\"setActiveStep\",function(t){var n,e,a=o.state.activeStep;a!==t&&(o.isInvalidStep(t)?\"production\"!==process.env.NODE_ENV&&console.error(\"\".concat(t+1,\" is an invalid step\")):(n=o.state.classes,e=o.getTransitions(),a<t?(n[a]=e.exitLeft,n[t]=e.enterRight):(n[a]=e.exitRight,n[t]=e.enterLeft),o.setState({activeStep:t,classes:n},function(){o.onStepChange({previousStep:a+1,activeStep:t+1})})))}),p(u(o),\"onStepChange\",function(t){o.props.onStepChange(t),o.props.isHashEnabled&&o.updateHash(o.state.activeStep)}),p(u(o),\"getSteps\",function(){return i.Children.toArray(o.props.children)}),p(u(o),\"firstStep\",function(){return o.goToStep(1)}),p(u(o),\"lastStep\",function(){return o.goToStep(o.totalSteps)}),p(u(o),\"nextStep\",function(){return o.setActiveStep(o.state.activeStep+1)}),p(u(o),\"previousStep\",function(){return o.setActiveStep(o.state.activeStep-1)}),p(u(o),\"goToStep\",function(t){o.props.isHashEnabled&&\"string\"==typeof t&&void 0!==o.state.hashKeys[t]?o.setActiveStep(o.state.hashKeys[t]):o.setActiveStep(t-1)}),p(u(o),\"goToNamedStep\",function(t){\"string\"==typeof t&&void 0!==o.state.namedSteps[t]?o.setActiveStep(o.state.namedSteps[t]):console.error('Cannot find step with name \"'.concat(t,'\"'))}),p(u(o),\"updateHash\",function(t){window.location.hash=o.state.hashKeys[t]}),p(u(o),\"isReactComponent\",function(t){t=t.type;return\"function\"==typeof t||\"object\"===s(t)}),o.state=o.initialState(),o}return t=r,(n=[{key:\"componentDidMount\",value:function(){this.props.isHashEnabled&&window.addEventListener(\"hashchange\",this.onHashChange),this.props.instance(this)}},{key:\"componentWillUnmount\",value:function(){this.props.isHashEnabled&&window.removeEventListener(\"hashchange\",this.onHashChange)}},{key:\"currentStep\",get:function(){return this.state.activeStep+1}},{key:\"totalSteps\",get:function(){return this.getSteps().length}},{key:\"render\",value:function(){var e=this,a={currentStep:this.currentStep,totalSteps:this.totalSteps,nextStep:this.nextStep,previousStep:this.previousStep,goToStep:this.goToStep,goToNamedStep:this.goToNamedStep,firstStep:this.firstStep,lastStep:this.lastStep},o=this.state.classes,t=i.Children.map(this.getSteps(),function(t,n){return t?(a.isActive=n===e.state.activeStep,a.transitions=o[n],!e.props.isLazyMount||e.props.isLazyMount&&a.isActive?i.createElement(y,a,e.isReactComponent(t)?i.cloneElement(t,a):t):null):null});return i.createElement(\"div\",{className:this.props.className},this.props.nav&&i.cloneElement(this.props.nav,a),i.createElement(\"div\",{className:m},t))}}])&&c(t.prototype,n),e&&c(t,e),r}();e.defaultProps={children:[],className:null,initialStep:1,instance:function(){},isHashEnabled:!1,isLazyMount:!1,nav:null,onStepChange:function(){},transitions:void 0};var y=function(t){var n=t.children,e=t.isActive,t=t.transitions;return i.createElement(\"div\",{className:\"\".concat(a,\" \").concat(t,\" \").concat(e?h:\"\").trim()},n)};process.env.NODE_ENV,y.defaultProps={children:[],isActive:!1,transitions:\"\"},t.Step=y,t.default=e,Object.defineProperty(t,\"__esModule\",{value:!0})});\n"],"names":["Styled","styled","children","rest","fluid","useForm","register","handleSubmit","t","useTranslation","onSubmit","data","console","log","placeholder","type","className","step","steps","map","item","i","classNames","active","includes","range","length","size","color","thead","hideThead","hidden","th","w","useState","width","setWidth","useEffect","ref","current","clientWidth","useRef","id","props","resetProduct","useSettingsStore","state","get","resetRiskList","product","usePostQuery","listKeyId","KEYS","createProduct","mutate","isLoading","usePutQuery","updateProduct","updateLoading","groups","useGetAllQuery","key","url","URLS","getSelectOptionsListFromData","subGroups","insurances","status","polices","persons","payments","policyformats","applicationformdocs","contractform","additionaldocuments","findItem","items","multiple","filter","label","join","find","isEqual","xs","formRequest","attributes","onSuccess","nextStep","onError","href","target","download","onClick","firstStep","danger","outlined","back","dark","previousStep","success","riskOptions","fields","setFields","setProduct","agents","classes","classOptions","risks","risksOptions","franchises","baseFranchises","list","l","getValueFromField","value","name","prev","options","defaultValue","property","hideLabel","bgColor","isDisabled","justify","suffix","disabled","StepOne","riskItem","setRiskItem","productGroupId","setProductGroupId","riskTypeId","setRiskTypeId","addRiskList","removeRiskList","riskList","isEmpty","classeId","risk","riskgroup","useGetOneQuery","enabled","sectors","riskGroups","risksList","risksData","insuranceClassesList","insuranceClasses","params","required","hasRequiredLabel","align","classItem","some","values","val","toast","memo","src","alt","to","Isfixedpolicyholder","Isfixedbeneficiary","Isfixedpremium","Isfixedrate","Isfixedsuminsured","Isfixedfee","Isfixedpreventivemeasures","show","setShow","refunds","claimSettlements","head","isapplicationform","iscontractform","Isadditionaldocuments","deleteApplicationFormDocs","useDeleteQuery","deleteContactForm","deleteAdditionalDocs","file","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Download","forwardRef","_ref","_ref$color","_ref$size","React","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","propTypes","PropTypes","displayName","Trash2","o","default","s","Symbol","iterator","constructor","c","n","e","a","enumerable","configurable","writable","defineProperty","p","r","setPrototypeOf","getPrototypeOf","__proto__","f","u","ReferenceError","Reflect","construct","sham","Proxy","Boolean","valueOf","insertAt","document","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","animated","fadeInRight","fadeInLeft","fadeOutRight","fadeOutLeft","m","h","TypeError","create","PureComponent","activeStep","hashKeys","namedSteps","window","getHash","getSteps","forEach","hashKey","concat","stepName","initialStep","isHashEnabled","transitions","intro","decodeURI","location","hash","replace","enterRight","enterLeft","exitRight","exitLeft","setActiveStep","totalSteps","isInvalidStep","getTransitions","setState","onStepChange","updateHash","Children","toArray","goToStep","error","initialState","addEventListener","onHashChange","instance","removeEventListener","currentStep","goToNamedStep","lastStep","isActive","isLazyMount","y","isReactComponent","cloneElement","nav","defaultProps","trim","Step","exports","require"],"sourceRoot":""}