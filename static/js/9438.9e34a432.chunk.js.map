{"version":3,"file":"static/js/9438.9e34a432.chunk.js","mappings":"uZA8UA,EA1T2B,SAAC,GAAc,oBAAC,IACvC,GAAwBA,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAKC,EAAAA,EAAAA,KAALD,EACAE,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAAiCE,EAAAA,EAAAA,IAAe,CAACF,GAAAA,EAAIG,IAAKC,EAAAA,EAAAA,OAAaC,IAAKC,EAAAA,EAAAA,SAAvEC,EAAL,EAAKA,KAAMC,EAAX,EAAWA,UACDC,GADV,EAAsBC,SACHC,EAAAA,EAAAA,IAAe,CAACR,IAAIC,EAAAA,EAAAA,aAAkBC,IAAIC,EAAAA,EAAAA,eAAxDC,MACLE,GAAQG,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAAIJ,EAAD,YAAmB,IAAI,MAAM,QACrE,IAAUK,GAAUH,EAAAA,EAAAA,IAAe,CAACR,IAAIC,EAAAA,EAAAA,cAAmBC,IAAIC,EAAAA,EAAAA,gBAA1DC,KACLO,GAASF,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAAIC,EAAD,YAAoB,IAAI,MAAM,QACvE,OAAwDC,EAAAA,EAAAA,IAAa,CAACC,UAAW,CAACZ,EAAAA,EAAAA,OAAYJ,KAA/EiB,EAAf,EAAOC,OAEDC,GAFN,EAA8BX,WAEPY,EAAAA,EAAAA,IAAS,SAAAC,GAAK,OAAIR,EAAAA,EAAAA,KAAIQ,EAAO,kBAAkB,mBAEhEC,GAAcC,EAAAA,EAAAA,UAAQ,iBAAM,CAC9B,CACIvB,GAAI,EACJwB,MAAO1B,EAAE,UACT2B,KAAM,WAEV,CACIzB,GAAI,EACJwB,MAAOxB,EACPyB,KAAM,QAEX,CAAClB,IAMJ,IAJAmB,EAAAA,EAAAA,YAAU,WACNP,EAAeG,KAChB,IAECd,EACA,OAAO,SAAC,IAAD,IAgBX,OACI,+BACI,UAAC,IAAD,YACI,UAAC,KAAD,CAAKmB,UAAW,GAAhB,WACI,SAAC,KAAD,CAAKC,GAAI,GAAT,UACI,SAAC,IAAD,4BAEJ,SAAC,KAAD,CAAKD,UAAW,aAAcC,GAAI,EAAlC,UACI,SAAC,IAAD,CAAQC,QAAS,kBAAMhC,GAAQ,IAA/B,+BAGR,UAAC,KAAD,YACI,SAAC,KAAD,CAAK+B,GAAI,EAAT,UACI,UAAC,IAAD,CAAOE,MAAO,CAAC,IAAK,KAApB,WACI,2BACI,wBAAKhC,EAAE,kBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,sCAE3B,2BACI,wBAAKT,EAAE,oBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,wCAE3B,2BACI,wBAAKT,EAAE,oBACP,yBAAI,4BAASiC,KAAMlB,EAAAA,EAAAA,KAAIN,EAAM,4BAA4ByB,OAAO,sBAGpE,2BACI,wBAAKlC,EAAE,sBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,qCAE3B,2BACI,wBAAKT,EAAE,aACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,uCAE3B,2BACI,wBAAKT,EAAE,sBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,qCAE3B,2BACI,wBAAKT,EAAE,YACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,2BAE3B,2BACI,wBAAKT,EAAE,UACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,yBAE3B,2BACI,wBAAKT,EAAE,kBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,sCAE3B,2BACI,wBAAKT,EAAE,oBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,6CAKnC,SAAC,KAAD,CAAKqB,GAAI,EAAT,UACI,UAAC,IAAD,CAAOE,MAAO,CAAC,IAAK,KAApB,WAEQjB,EAAAA,EAAAA,KAAIN,EAAD,+CAAuD,iCACtD,2BACI,wBAAKT,EAAE,sBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,mDAE3B,2BACI,wBAAKT,EAAE,8BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,2DAG3B,2BACI,wBAAKT,EAAE,wBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,0DAG3B,2BACI,wBAAKT,EAAE,wBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,qDAE3B,2BACI,wBAAKT,EAAE,kBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,+CAE3B,2BACI,wBAAKT,EAAE,yBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,sDAE3B,2BACI,wBAAKT,EAAE,iCACP,yBACI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,8DAG3B,2BACI,wBAAKT,EAAE,mBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,gDAE3B,2BACI,wBAAKT,EAAE,uBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,oDAE3B,2BACI,wBAAKT,EAAE,qBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,4DAO/BM,EAAAA,EAAAA,KAAIN,EAAD,kCAA0C,iCACzC,2BACI,wBAAKT,EAAE,sBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,gDAE3B,2BACI,wBAAKT,EAAE,2BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,oDAE3B,2BACI,wBAAKT,EAAE,2BACP,yBACI,4BAASiC,KAAMlB,EAAAA,EAAAA,KAAIN,EAAM,6CAA6CyB,OAAO,sBAGrF,2BACI,wBAAKlC,EAAE,yBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,kDAE3B,2BACI,wBAAKT,EAAE,+BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,wDAG3B,2BACI,wBAAKT,EAAE,+BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,wDAG3B,2BACI,wBAAKT,EAAE,sBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,oDAE3B,2BACI,wBAAKT,EAAE,mBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,4CAE3B,2BACI,wBAAKT,EAAE,0BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,mDAE3B,2BACI,wBAAKT,EAAE,oBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,6CAE3B,2BACI,wBAAKT,EAAE,0BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,mDAE3B,2BACI,wBAAKT,EAAE,4BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,qDAE3B,2BACI,wBAAKT,EAAE,8BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,uDAE3B,2BACI,wBAAKT,EAAE,8BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,uDAG3B,2BACI,wBAAKT,EAAE,gCACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,yDAG3B,2BACI,wBAAKT,EAAE,+BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,wDAG3B,2BACI,wBAAKT,EAAE,mBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,4CAE3B,2BACI,wBAAKT,EAAE,wBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,iDAE3B,2BACI,wBAAKT,EAAE,uBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,gDAE3B,2BACI,wBAAKT,EAAE,0BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,mDAE3B,2BACI,wBAAKT,EAAE,+BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,wDAG3B,2BACI,wBAAKT,EAAE,8BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,uDAE3B,2BACI,wBAAKT,EAAE,8BACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,+DAM3C,SAAC,KAAD,CAAKqB,GAAI,GAAID,UAAW,QAAxB,UACI,SAAC,IAAD,CAAOM,IAAE,EAAT,6BAEJ,SAAC,KAAD,CAAKL,GAAI,EAAT,UACI,UAAC,IAAD,CAAOE,MAAO,CAAC,IAAK,KAApB,WACI,2BACI,wBAAKhC,EAAE,YACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,mCAE3B,2BACI,wBAAKT,EAAE,mBACP,2BAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,wCAAvB,WAEJ,2BACI,wBAAKT,EAAE,qBACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,gDAE3B,2BACI,wBAAKT,EAAE,aACP,yBAAI,6BAASe,EAAAA,EAAAA,KAAIN,EAAM,0DAMvC,SAAC,IAAD,CAAO2B,QAAStC,EAAMuC,QAAS,kBAAMtC,GAAQ,IAA7C,UACI,SAAC,IAAD,CACMuC,QAAQ,SAAC,IAAD,kBAAsBC,YAAa,SAACC,GAAD,OAhQ9C,SAAC,GAAoB,IAAdC,EAAa,EAAlBhC,KACjBU,EAAc,CACVZ,IAAIC,EAAAA,EAAAA,KACJkC,YAAW,kBACJD,GADG,IACQE,WAAU5B,EAAAA,EAAAA,KAAIN,EAAM,wBAClCmC,QAAQ1C,KAEd,CACE2C,UAAU,WACN9C,GAAQ,MAuPyD+C,CAAWN,IADxE,UAEI,UAAC,KAAD,CAAKX,UAAW,QAAhB,WACI,SAAC,KAAD,CAAKC,GAAI,EAAT,UACI,SAAC,IAAD,CAAOiB,KAAM,QAASC,KAAM,QAASC,MAAO,QACrCC,OAAQ,CAACC,UAAU,QAE9B,SAAC,KAAD,CAAKrB,GAAI,EAAT,UACI,SAAC,IAAD,CAAOiB,KAAM,WAAYC,KAAM,QAASC,MAAO,WACxCC,OAAQ,CAACC,UAAU,GAAQC,SAAU,CAACJ,KAAM,iBAEvD,SAAC,KAAD,CAAKlB,GAAI,EAAT,UACI,SAAC,IAAD,CAAQiB,KAAM,cAAeC,KAAM,SAAUC,MAAO,OAAQI,QAAS1C,EAAQuC,OAAQ,CAACC,UAAU,QAEpG,SAAC,KAAD,CAAKrB,GAAI,EAAT,UACI,SAAC,IAAD,CAAQiB,KAAM,gBAAiBC,KAAM,SAAUC,MAAO,SAAUI,QAASrC,EAASkC,OAAQ,CAACC,UAAU,oBC/T/HG,EAASC,EAAAA,GAAAA,IAAH,mVAwBZ,EARsB,SAAC,GAAe,IAAXC,EAAU,oBACjC,OACI,SAACF,GAAD,kBAAYE,GAAZ,cACI,SAAC,EAAD","sources":["modules/agents/containers/AgentViewContainer.jsx","modules/agents/pages/AgentViewPage.jsx"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport {get} from \"lodash\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\nimport Table from \"../../../components/table\";\r\nimport {useStore} from \"../../../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport Rodal from \"rodal\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\n\r\nconst AgentViewContainer = ({...rest}) => {\r\n    const [open, setOpen] = useState(false)\r\n    const {t} = useTranslation();\r\n    const {id} = useParams()\r\n    let {data, isLoading, isError} = useGetOneQuery({id, key: KEYS.agents, url: URLS.agents})\r\n    let {data:roles} = useGetAllQuery({key:KEYS.accountroles,url:URLS.accountroles})\r\n    roles = getSelectOptionsListFromData(get(roles,`data.data`,[]),'_id','name')\r\n    let {data:status} = useGetAllQuery({key:KEYS.accountstatus,url:URLS.accountstatus})\r\n    status = getSelectOptionsListFromData(get(status,`data.data`,[]),'_id','name')\r\n    const {mutate: createRequest, isLoading: postLoading} = usePostQuery({listKeyId: [KEYS.agents,id]})\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: t('Agents'),\r\n            path: '/agents',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: id,\r\n            path: '#',\r\n        }\r\n    ], [data])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n    const addAccount = ({data:request}) => {\r\n        createRequest({\r\n            url:URLS.user,\r\n            attributes:{\r\n                ...request,   branch_Id:get(data, \"data.data.branch._id\"),\r\n                agentId:id\r\n            },\r\n        },{\r\n            onSuccess:()=>{\r\n                setOpen(false)\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Section>\r\n                <Row className={''}>\r\n                    <Col xs={10}>\r\n                        <Title>Agent view</Title>\r\n                    </Col>\r\n                    <Col className={'text-right'} xs={2}>\r\n                        <Button onClick={() => setOpen(true)}>Add Account</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"accountrole\")}</td>\r\n                                <td><strong>{get(data, \"data.data.accountrole.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"accountstatus\")}</td>\r\n                                <td><strong>{get(data, \"data.data.accountstatus.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"agreementdate\")}</td>\r\n                                <td><strong>{dayjs(get(data, \"data.data.agreementdate\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"agreementnumber\")}</td>\r\n                                <td><strong>{get(data, \"data.data.agreementnumber\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"branch\")}</td>\r\n                                <td><strong>{get(data, \"data.data.branch.branchname\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"checkingaccount\")}</td>\r\n                                <td><strong>{get(data, \"data.data.checkingaccount\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"email\")}</td>\r\n                                <td><strong>{get(data, \"data.data.email\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"inn\")}</td>\r\n                                <td><strong>{get(data, \"data.data.inn\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"typeofagent\")}</td>\r\n                                <td><strong>{get(data, \"data.data.typeofagent.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"typeofpersons\")}</td>\r\n                                <td><strong>{get(data, \"data.data.typeofpersons.name\")}</strong></td>\r\n                            </tr>\r\n\r\n                        </Table>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            {\r\n                                get(data, `data.data.corporateentitiesdata.districts`) && <>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic address\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.address\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic checkingaccount\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.checkingaccount\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic districts\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.districts.name\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic innofbank\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.innofbank\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic mfo\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.mfo\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic nameofbank\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.nameofbank\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic nameoforganization\")}</td>\r\n                                        <td>\r\n                                            <strong>{get(data, \"data.data.corporateentitiesdata.nameoforganization\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic oked\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.oked\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic postcode\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.postcode\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Juridic region\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.corporateentitiesdata.regionId.name\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </>\r\n                            }\r\n                            {\r\n                                get(data, `data.data.forindividualsdata`) && <>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical region\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.address\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical citizenship\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.citizenship\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical dateofbirth\")}</td>\r\n                                        <td>\r\n                                            <strong>{dayjs(get(data, \"data.data.forindividualsdata.dateofbirth\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical districts\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.districts\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical emailforcontact\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.emailforcontact\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical emailforcontact\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.emailforcontact\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical gender\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.gender.name\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical mfo\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.mfo\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical middlename\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.middlename\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical name\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.name\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical nameofbank\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.nameofbank\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical numberofcard\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.numberofcard\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical passportSeries\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.passportSeries\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical passportNumber\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.passportNumber\")}</strong></td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>{t(\"Physical passportissuedby\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.passportissuedby\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical personalaccount\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.personalaccount\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical pin\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.pin\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical postcode\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.postcode\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical regions\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.regions\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical secondname\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.secondname\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical telephonenumber\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.telephonenumber\")}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical transitaccount\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.transitaccount\")}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{t(\"Physical typeofdocument\")}</td>\r\n                                        <td><strong>{get(data, \"data.data.forindividualsdata.typeofdocument\")}</strong></td>\r\n                                    </tr>\r\n                                </>\r\n                            }\r\n                        </Table>\r\n                    </Col>\r\n                    <Col xs={12} className={'mt-15'}>\r\n                        <Title sm>Account info</Title>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"Email\")}</td>\r\n                                <td><strong>{get(data, \"data.data.user_id.email\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Account role\")}</td>\r\n                                <td><strong>{get(data, \"data.data.user_id.accountrole.name\")}</strong> </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Account status\")}</td>\r\n                                <td><strong>{get(data, \"data.data.user_id.accountstatus.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Branch\")}</td>\r\n                                <td><strong>{get(data, \"data.data.user_id.branch_Id.branchname\")}</strong></td>\r\n                            </tr>\r\n\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                <Rodal visible={open} onClose={() => setOpen(false)}>\r\n                    <Form\r\n                          footer={<Button>Add</Button>} formRequest={(values) => addAccount(values)}>\r\n                        <Row className={'mt-15'}>\r\n                            <Col xs={6}>\r\n                                <Field name={'email'} type={'input'} label={'Email'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Field name={'password'} type={'input'} label={'Password'}\r\n                                       params={{required: true}}  property={{type: 'password'}}/>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Field  name={'accountrole'} type={'select'} label={'Role'} options={roles}  params={{required: true}} />\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Field  name={'accountstatus'} type={'select'} label={'Status'} options={status}  params={{required: true}} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Rodal>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AgentViewContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AgentViewContainer from \"../containers/AgentViewContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n  .box__outlined{\r\n    border:1px dotted #BABABA;\r\n    padding: 15px;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n  }\r\n  .rodal-dialog {\r\n    width: unset !important;\r\n    max-width: 50%;\r\n    min-width: 750px;\r\n    min-height: 350px !important;\r\n    max-height: 50vh !important;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\nconst AgentViewPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <AgentViewContainer />\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default AgentViewPage;"],"names":["useState","open","setOpen","t","useTranslation","id","useParams","useGetOneQuery","key","KEYS","url","URLS","data","isLoading","roles","isError","useGetAllQuery","getSelectOptionsListFromData","get","status","usePostQuery","listKeyId","createRequest","mutate","setBreadcrumbs","useStore","state","breadcrumbs","useMemo","title","path","useEffect","className","xs","onClick","thead","dayjs","format","sm","visible","onClose","footer","formRequest","values","request","attributes","branch_Id","agentId","onSuccess","addAccount","name","type","label","params","required","property","options","Styled","styled","rest"],"sourceRoot":""}