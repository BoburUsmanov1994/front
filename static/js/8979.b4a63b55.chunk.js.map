{"version":3,"file":"static/js/8979.b4a63b55.chunk.js","mappings":"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","sources":["modules/products/containers/TengeContractsContainer.jsx","modules/products/pages/TengeContractsPage.jsx","../node_modules/react-feather/dist/icons/download.js"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport {useStore} from \"../../../store\";\r\nimport {get, isEqual} from \"lodash\";\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport Panel from \"../../../components/panel\";\r\nimport Search from \"../../../components/search\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport Section from \"../../../components/section\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {ContentLoader, OverlayLoader} from \"../../../components/loader\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useGetAllQuery, usePaginateQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport Table from \"../../../components/table\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport dayjs from \"dayjs\";\r\nimport Pagination from \"../../../components/pagination\";\r\nimport {Download} from \"react-feather\";\r\nimport config from \"../../../config\";\r\n\r\n\r\nconst TengeContractsContainer = ({id, ...rest}) => {\r\n\r\n    const {t} = useTranslation();\r\n    const [page, setPage] = useState(1)\r\n\r\n    let {data: contracts, isLoading, isFetching} = usePaginateQuery({\r\n        key: KEYS.tengebankContracts,\r\n        url: URLS.tengebankContracts,\r\n        page\r\n    })\r\n    const {mutate: createRequest, isLoading: postLoading} = usePostQuery({listKeyId: KEYS.tengebankContracts})\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: 'Продукты',\r\n            path: '/products',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Tenge bank contracts\",\r\n            path: '#',\r\n        }\r\n    ], [])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n\r\n    const handleChange = (val, id) => {\r\n        if (val && id) {\r\n            createRequest({url: URLS.tengebankContracts, attributes: {id, isAccepted: val}}, {\r\n                onSuccess: () => {\r\n\r\n                },\r\n                onError: () => {\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Panel>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Search/>\r\n                    </Col>\r\n                </Row>\r\n            </Panel>\r\n            <Section>\r\n                <Row className={'mb-25'}>\r\n                    <Col xs={12}>\r\n                        <Title>{t('Tenge bank contracts')}</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        {\r\n                            (isFetching || postLoading) && <ContentLoader/>\r\n                        }\r\n                        <div className=\"horizontal-scroll\">\r\n                            <Table\r\n                                thead={[\"№\", t(\"Loan type\"), t(\"Loan total\"), t(\"Loan amount\"), t(\"Loan term\"),t(\"objectBrand\"),t(\"objectName\"),t(\"insuranceLiability\"),t(\"insurancePremium\"),t(\"insurancePremiumAuto\"),t(\"insurancePremiumLoan\"), t(\"Subject\"), t(\"Organization/Customer\"), t(\"Contract number\"), t(\"Contract date\"), t(\"Loan contract number\"), t(\"Payment date\"), t(\"Policy\"), t(\"Created date\"), t(\"Accepted\")]}\r\n                                hideThead={false}>\r\n                                {\r\n                                    contracts && get(contracts, 'data.data', []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>{(page - 1) * 20 + (i + 1)}</td>\r\n                                        <td>{get(item, 'loan.loanType', '-')}</td>\r\n                                        <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(item, 'loan.loanTotal', 0)}/></td>\r\n                                        <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(item, 'loan.loanAmount', 0)}/></td>\r\n                                        <td>{get(item, 'loan.loanTerm', '-')}</td>\r\n                                        <td>{get(item, 'loan.objectBrand', '-')}</td>\r\n                                        <td>{get(item, 'loan.objectName', '-')}</td>\r\n                                        <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(item, 'insuranceLiability', 0)}/></td>\r\n                                        <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(item, 'insurancePremium', 0)}/></td>\r\n                                        <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(item, 'insurancePremiumAuto', 0)}/></td>\r\n                                        <td><NumberFormat displayType={'text'} thousandSeparator={\" \"}\r\n                                                          value={get(item, 'insurancePremiumLoan', 0)}/></td>\r\n                                        <td>{get(item, 'subject', '-')}</td>\r\n                                        <td>{isEqual(get(item, 'subject', '-'), 'P') ? get(item, 'customer.fullName', '-') : get(item, 'organization.name', '-')}</td>\r\n                                        <td>{get(item, 'contractNumber', '-')}</td>\r\n                                        <td>{dayjs(get(item, 'contractDate', '-')).format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>{get(item, 'loanContractNumber', '-')}</td>\r\n                                        <td>{dayjs(get(item, 'paymentDate', '-')).format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>{get(item, 'policy.filePath') ? <a href={`${config.FILE_URL}${get(item,'policy.filePath','#')}`} target={'_blank'} download><Download color={'#13D6D1'} /></a>:\"-\"}</td>\r\n                                        <td>{dayjs(get(item, 'createdAt', '-')).format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>\r\n                                            <Form>\r\n                                                <Field\r\n                                                    property={{handleChange: (val) => handleChange(val, get(item, \"_id\", null))}}\r\n                                                    name={'accepted'} type={'switch'}\r\n                                                    defaultValue={get(item, 'isAccepted', false)} options={[]}\r\n                                                    disabled={get(item, 'isAccepted', false)}/>\r\n                                            </Form>\r\n                                        </td>\r\n                                    </tr>)\r\n                                }\r\n\r\n                            </Table>\r\n\r\n                        </div>\r\n                        <Pagination page={page} setPage={setPage} totalItems={get(contracts, `data.totalItems`, 0)}/>\r\n                    </Col>\r\n                </Row>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TengeContractsContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport TengeContractsContainer from \"../containers/TengeContractsContainer\";\r\n\r\nconst Styled = styled.div`\r\n  label{\r\n    display: none;\r\n  }\r\n  label + div>span{\r\n    display: none;\r\n  }\r\n`;\r\nconst TengeContractsPage = ({\r\n                                ...rest\r\n                            }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <TengeContractsContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default TengeContractsPage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Download = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"7 10 12 15 17 10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"15\",\n    x2: \"12\",\n    y2: \"3\"\n  }));\n});\nDownload.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nDownload.displayName = 'Download';\nexport default Download;"],"names":["id","t","useTranslation","useState","page","setPage","usePaginateQuery","key","KEYS","url","URLS","contracts","data","isLoading","isFetching","usePostQuery","listKeyId","createRequest","mutate","postLoading","setBreadcrumbs","useStore","state","get","breadcrumbs","useMemo","title","path","useEffect","xs","className","thead","hideThead","map","item","i","displayType","thousandSeparator","value","isEqual","dayjs","format","href","config","target","download","color","property","handleChange","val","attributes","isAccepted","onSuccess","onError","name","type","defaultValue","options","disabled","totalItems","Styled","styled","rest","_extends","Object","assign","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Download","forwardRef","_ref","ref","_ref$color","_ref$size","size","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","propTypes","PropTypes","displayName"],"sourceRoot":""}