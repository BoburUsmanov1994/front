{"version":3,"file":"static/js/3973.8c628818.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/send.js","modules/products/containers/AgreementViewContainer.jsx","modules/products/pages/AgreementViewPage.jsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Send = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"22\",\n    y1: \"2\",\n    x2: \"11\",\n    y2: \"13\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"22 2 15 22 11 13 2 9 22 2\"\n  }));\n});\nSend.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSend.displayName = 'Send';\nexport default Send;","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport {get} from \"lodash\";\r\nimport {useDeleteQuery, useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {ContentLoader, OverlayLoader} from \"../../../components/loader\";\r\nimport Table from \"../../../components/table\";\r\nimport {useStore} from \"../../../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport {Send, Trash2} from \"react-feather\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst AgentViewContainer = ({...rest}) => {\r\n    const {t} = useTranslation();\r\n    const {id} = useParams()\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = useState(false);\r\n    let {data, isLoading, isError} = useGetOneQuery({id, key: KEYS.agreements, url: URLS.agreements})\r\n    let {data:policyData, isLoading:policyIsLoading} = useGetAllQuery({id, key: KEYS.policyFilter, url: URLS.policyFilter,params:{\r\n            params:{\r\n                agreementsId:id\r\n            }\r\n        }})\r\n    let {data:endorsementData, isLoading:endorsementIsLoading} = useGetOneQuery({id, key: KEYS.endorsementFilter, url: URLS.endorsementFilter})\r\n    const {mutate: createPolicy, isLoadingPolicy} = usePostQuery({listKeyId: KEYS.agreements})\r\n    const {mutate: sentToFondRequest, isLoadingSendToFond} = usePostQuery({listKeyId: KEYS.agreements})\r\n    const {mutate: deleteRequest, isLoading: deleteLoading} = useDeleteQuery({listKeyId: KEYS.policyFilter})\r\n    const {mutate: deleteEndorsementRequest, isLoading: deleteEndorsementLoading} = useDeleteQuery({listKeyId: KEYS.endorsementFilter})\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: t('Agreements'),\r\n            path: '/agreements',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: id,\r\n            path: '#',\r\n        }\r\n    ], [data])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    const addPolicy = (data) => {\r\n        createPolicy({url: URLS.policy, attributes: {...data, agreementsId: id, copyofdocuments: 'xxxxxxxxx'}}, {\r\n            onSuccess: () => {\r\n                setOpen(false);\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const remove = (id) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            backdrop: 'rgba(0,0,0,0.9)',\r\n            background: 'none',\r\n            title: t('Are you sure?'),\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#13D6D1',\r\n            confirmButtonText: t('Delete'),\r\n            cancelButtonText:t('Cancel'),\r\n            customClass: {\r\n                title: 'title-color',\r\n            },\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteRequest({url: `${URLS.policy}/${id}`})\r\n            }\r\n        });\r\n    }\r\n\r\n    const removeEndorsement = (id) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            backdrop: 'rgba(0,0,0,0.9)',\r\n            background: 'none',\r\n            title: t('Are you sure?'),\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#13D6D1',\r\n            confirmButtonText: t('Delete'),\r\n            cancelButtonText:t('Cancel'),\r\n            customClass: {\r\n                title: 'title-color',\r\n            },\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteEndorsementRequest({url: `${URLS.endorsements}/${id}`})\r\n            }\r\n        });\r\n    }\r\n\r\n    const sendToFond = (agreementId,policyId) => {\r\n        sentToFondRequest({url:`${URLS.sendToFond}?agreementId=${agreementId}&policyId=${policyId}`})\r\n    }\r\n\r\n\r\n\r\n    if (isLoading || deleteLoading || policyIsLoading || endorsementIsLoading || deleteEndorsementLoading ) {\r\n       return <OverlayLoader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Section>\r\n                 <Row className={''} align={'center'}>\r\n                    <Col xs={12}>\r\n                        <Title>{t('Agreement view')}</Title>\r\n                    </Col></Row>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"groupofproductsId\")}</td>\r\n                                <td><strong>{get(data, \"data.data.groupofproductsId.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"subgroupofproductsId\")}</td>\r\n                                <td><strong>{get(data, \"data.data.subgroupofproductsId.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"products\")}</td>\r\n                                <td><strong>{get(data, \"data.data.products.productname\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"startofinsurance\")}</td>\r\n                                <td>\r\n                                    <strong>{dayjs(get(data, \"data.data.startofinsurance\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"endofinsurance\")}</td>\r\n                                <td><strong>{dayjs(get(data, \"data.data.endofinsurance\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>{t(\"clinets\")}</td>\r\n                                <td><strong>{get(data, \"data.data.clinets.forindividualsdata.name\")}</strong></td>\r\n                            </tr>\r\n\r\n\r\n                        </Table>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"whoaccepted\")}</td>\r\n                                <td><strong>{get(data, \"data.data.whoaccepted\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"totalinsurancepremium\")}</td>\r\n                                <td><strong>{get(data, \"data.data.totalinsurancepremium\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"totalsuminsured\")}</td>\r\n                                <td><strong>{get(data, \"data.data.totalsuminsured\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"paidinsurancepremium\")}</td>\r\n                                <td><strong>{get(data, \"data.data.paidinsurancepremium\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"Status\")}</td>\r\n                                <td><strong>{t(get(data, \"data.data.status\"))}</strong></td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                <Row className={'mt-15'}>\r\n                    <Col xs={6}>\r\n                        <Row align={'center'}>\r\n                            <Col xs={8}><Title sm>Полис</Title></Col>\r\n                            <Col xs={4} className={'text-right'}>\r\n                                <Button green onClick={() => navigate(`/policy/create/${id}`)} className={'mr-16'} type={'button'}>Добавить\r\n                                    полис</Button>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={'mt-15'}>\r\n                            {get(policyData, \"data.data\", []).length > 0 && <Col xs={12}>\r\n                                <hr/>\r\n                                <Table hideThead={false}\r\n                                       thead={['Policy number',  'Issue date', 'Status','Action']}>\r\n                                    {get(policyData, \"data.data\", []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>\r\n                                            {get(item, 'policy_number', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {dayjs(get(item, 'dateofissue')).format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                        <td>{get(item, \"status\")}</td>\r\n                                        <td className={'cursor-pointer'}\r\n                                           >\r\n                                            <Send  className={'cursor-pointer '} color={'#13D6D1'} onClick={()=>sendToFond(id,get(item,'_id'))}/>\r\n                                            <Trash2  onClick={() => remove(get(item, '_id', null))} className={'ml-15'} color={'#dc2626'}/>\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </Table>\r\n                            </Col>\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Row align={'center'}>\r\n                            <Col xs={8}> <Title sm>Индосаменты</Title></Col>\r\n                            <Col xs={4} className={'text-right'}> <Button onClick={() => navigate(`/endorsement/create/${id}`)} green type={'button'}>Добавить\r\n                                индосаменты</Button></Col>\r\n                        </Row>\r\n                        <Row className={'mt-15'}>\r\n                            {get(endorsementData, \"data.data\", []).length > 0 && <Col xs={12}>\r\n                                <hr/>\r\n                                <Table hideThead={false}\r\n                                       thead={['Type', 'Status', 'Conclusion', 'Action']}>\r\n                                    {get(endorsementData, \"data.data\", []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>\r\n                                            {get(item, 'typeofendorsements.name', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {get(item, 'statusofendorsements.name', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {get(item, 'reqforconclusion', '-')}\r\n                                        </td>\r\n                                        <td className={'cursor-pointer'}\r\n                                            onClick={() => removeEndorsement(get(item, '_id', null))}>\r\n                                            <Trash2 color={'#dc2626'}/>\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </Table>\r\n                            </Col>\r\n                            }\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Section>\r\n        </>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default AgentViewContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AgreementViewContainer from \"../containers/AgreementViewContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n  .box__outlined{\r\n    border:1px dotted #BABABA;\r\n    padding: 15px;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\nconst AgentViewPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <AgreementViewContainer />\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default AgentViewPage;"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Send","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","displayName","t","useTranslation","id","useParams","navigate","useNavigate","useState","useGetOneQuery","KEYS","url","URLS","data","isLoading","isError","useGetAllQuery","params","agreementsId","policyData","policyIsLoading","endorsementData","endorsementIsLoading","usePostQuery","listKeyId","mutate","isLoadingPolicy","sentToFondRequest","isLoadingSendToFond","useDeleteQuery","deleteRequest","deleteLoading","deleteEndorsementRequest","deleteEndorsementLoading","setBreadcrumbs","useStore","state","get","breadcrumbs","useMemo","title","path","useEffect","className","align","xs","thead","dayjs","format","sm","green","onClick","type","hideThead","map","item","agreementId","policyId","Swal","position","icon","backdrop","background","showConfirmButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","customClass","then","result","isConfirmed","remove","removeEndorsement","Styled","styled","AgreementViewContainer"],"sourceRoot":""}