{"version":3,"file":"static/js/5436.788a0221.chunk.js","mappings":"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","sources":["modules/branches/containers/BranchCreateContainer.jsx","modules/branches/pages/BranchCreatePage.jsx"],"sourcesContent":["import React,{useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Search from \"../../../components/search\";\r\nimport Panel from \"../../../components/panel\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport {get, isEqual, range} from \"lodash\";\r\nimport {useGetAllQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\n\r\nconst BranchCreateContainer = ({id = null, branch = {}, ...rest}) => {\r\n    const navigate = useNavigate();\r\n    let {data: branchLevels} = useGetAllQuery({key: KEYS.levelofbranch, url: URLS.levelofbranch})\r\n    branchLevels = getSelectOptionsListFromData(get(branchLevels, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: regions} = useGetAllQuery({key: KEYS.regions, url: URLS.regions})\r\n    regions = getSelectOptionsListFromData(get(regions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: positions} = useGetAllQuery({key: KEYS.position, url: URLS.position})\r\n    positions = getSelectOptionsListFromData(get(positions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: branchStatusList} = useGetAllQuery({key: KEYS.breanchstatus, url: URLS.breanchstatus})\r\n    branchStatusList = getSelectOptionsListFromData(get(branchStatusList, `data.data`, []), '_id', 'name')\r\n\r\n    const {mutate: createRequest, isLoading} = usePostQuery({listKeyId: KEYS.branches})\r\n\r\n    const [empCount,setEmpCount] = useState(1);\r\n\r\n    const create = ({data}) => {\r\n        createRequest({url:URLS.branches, attributes: data}, {\r\n            onSuccess: () => {\r\n                navigate('/branches')\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {isLoading && <OverlayLoader />}\r\n            <Panel>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Search/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Panel>\r\n            <Section>\r\n                <Row className={'mb-25'}>\r\n                    <Col xs={12}>\r\n                        <Title>Branch create</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Form footer={ <Button type={\"submit\"} lg>Save</Button>} formRequest={(values)=>create(values)}>\r\n                    <Row className={'mb-15'}>\r\n                        <Col xs={4}>\r\n                            <Field name={'levelofbreanches'} type={'select'} label={'Branch level'}\r\n                                   options={branchLevels}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'codeofbreanches'} type={'input'}\r\n                                   label={'codeofbreanches'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'inn'} type={'input-mask'} label={'INN'}\r\n                                   property={{mask: '999999999', maskChar: '_'}}\r\n                                   params={{required: true, pattern: /^[0-9]*$/}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'regionId'} type={'select'} label={'Region'} options={regions}\r\n                                    params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'branchname'} type={'input'}\r\n                                   label={'branchname'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'shorttitleofbranch'} type={'input'}\r\n                                   label={'shorttitleofbranch'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'address'} type={'input'}\r\n                                   label={'address'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'telephone'} type={'input'}\r\n                                   label={'telephone'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'email'} type={'input'}\r\n                                   label={'email'}\r\n                                   property={{type: \"email\"}}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementnumber'} type={'input'}\r\n                                   label={'agreementnumber'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementdate'} type={'datepicker'}\r\n                                   label={'agreementdate'}\r\n                                  />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'expirationdate'} type={'datepicker'}\r\n                                   label={'expirationdate'}\r\n                                   />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`checkingaccount`} type={'input'}\r\n                                   label={'checkingaccount'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`mfo`} type={'input'}\r\n                                   label={'mfo'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`nameofbank`} type={'input'}\r\n                                   label={'nameofbank'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'breanchstatus'} type={'select'} label={'Branch status'}\r\n                                   options={branchStatusList}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row className={\"mb-15\"}>\r\n                        <Col xs={12}>\r\n                            <Title sm>Add employee</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {range(0,empCount).map((count,i) => <Row align={'center'}>\r\n                        <Col xs={11}>\r\n                            <Row>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].fullname`} type={'input'}\r\n                                           label={'Fullname'}\r\n                                           params={{required: true}}/>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].positions`} type={'select'} label={'Positions'} options={positions}\r\n                                           params={{required: true}} />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].telephonenumber`} type={'input'}\r\n                                           label={'telephonenumber'}\r\n                                           params={{required: true}}/>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].emailforcontacts`} type={'input'}\r\n                                           label={'emailforcontacts'}\r\n                                           property={{type:\"email\"}}\r\n\r\n                                           params={{required: true}}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={1} className={\"text-right\"}>\r\n                            {isEqual(empCount,count+1) ? <Button onClick={()=>setEmpCount(prev => ++prev)} sm type={\"button\"} inline><Plus /></Button>:<Button danger onClick={()=>setEmpCount(prev => --prev)} sm type={\"button\"} inline><Minus /></Button>}\r\n                        </Col>\r\n                    </Row>)}\r\n\r\n                </Form>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BranchCreateContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport BranchCreateContainer from \"../containers/BranchCreateContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n`;\r\nconst BranchCreatePage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <BranchCreateContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default BranchCreatePage;"],"names":["id","branch","navigate","useNavigate","branchLevels","useGetAllQuery","key","KEYS","url","URLS","data","getSelectOptionsListFromData","get","regions","positions","branchStatusList","usePostQuery","listKeyId","createRequest","mutate","isLoading","useState","empCount","setEmpCount","xs","className","footer","type","lg","formRequest","values","attributes","onSuccess","onError","create","name","label","options","params","required","property","mask","maskChar","pattern","sm","range","map","count","i","align","isEqual","onClick","prev","inline","danger","Styled","styled","rest"],"sourceRoot":""}