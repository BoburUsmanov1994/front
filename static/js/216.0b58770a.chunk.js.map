{"version":3,"file":"static/js/216.0b58770a.chunk.js","mappings":"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","sources":["modules/agents/containers/AgentsCreateContainer.jsx","modules/agents/pages/AgentsCreatePage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Search from \"../../../components/search\";\r\nimport Panel from \"../../../components/panel\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport {get, isEqual, range} from \"lodash\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {Minus, Plus} from \"react-feather\";\r\n\r\nconst AgentsCreateContainer = ({...rest}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [personType, setPersonType] = useState(null)\r\n    const [empCount, setEmpCount] = useState(0);\r\n    const [regionId, setRegionId] = useState(null);\r\n    const setPersonTypeForSelect = (val, name) => {\r\n        if (isEqual(name, 'typeofpersons')) {\r\n            setPersonType(val)\r\n        }\r\n        if (isEqual(name, 'corporateentitiesdata.regionId')) {\r\n            setRegionId(val)\r\n        }\r\n        if (isEqual(name, 'forindividualsdata.regions')) {\r\n            setRegionId(val)\r\n        }\r\n    }\r\n    let {data: branches} = useGetAllQuery({key: KEYS.branches, url: URLS.branches})\r\n    branches = getSelectOptionsListFromData(get(branches, `data.data`, []), '_id', 'branchname')\r\n\r\n    let {data: regions} = useGetAllQuery({key: KEYS.regions, url: URLS.regions})\r\n    regions = getSelectOptionsListFromData(get(regions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: agentTypes} = useGetAllQuery({key: KEYS.typeofagent, url: URLS.typeofagent})\r\n    agentTypes = getSelectOptionsListFromData(get(agentTypes, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: persons} = useGetAllQuery({key: KEYS.typeofpersons, url: URLS.typeofpersons})\r\n    persons = getSelectOptionsListFromData(get(persons, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: accountstatus} = useGetAllQuery({key: KEYS.accountstatus, url: URLS.accountstatus})\r\n    accountstatus = getSelectOptionsListFromData(get(accountstatus, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: accountrole} = useGetAllQuery({key: KEYS.accountroles, url: URLS.accountroles})\r\n    accountrole = getSelectOptionsListFromData(get(accountrole, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: genders} = useGetAllQuery({key: KEYS.genders, url: URLS.genders})\r\n    genders = getSelectOptionsListFromData(get(genders, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: citizenship} = useGetAllQuery({key: KEYS.citizenship, url: URLS.citizenship})\r\n    citizenship = getSelectOptionsListFromData(get(citizenship, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: typeofdocuments} = useGetAllQuery({key: KEYS.typeofdocuments, url: URLS.typeofdocuments})\r\n    typeofdocuments = getSelectOptionsListFromData(get(typeofdocuments, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: districts} = useGetOneQuery({\r\n        id: regionId,\r\n        key: KEYS.districtsByRegion,\r\n        url: URLS.districtsByRegion,\r\n        enabled: !!(regionId)\r\n    })\r\n    districts = getSelectOptionsListFromData(get(districts, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: positions} = useGetAllQuery({key: KEYS.position, url: URLS.position})\r\n    positions = getSelectOptionsListFromData(get(positions, `data.data`, []), '_id', 'name')\r\n\r\n\r\n    const {mutate: createRequest, isLoading} = usePostQuery({listKeyId: KEYS.agents})\r\n    const create = ({data}) => {\r\n        createRequest({url: URLS.agents, attributes: {...data,isbeneficiary:null,isfixedpolicyholde:null}}, {\r\n            onSuccess: () => {\r\n                navigate('/agents/insurance-agents')\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {isLoading && <OverlayLoader/>}\r\n            <Panel>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Search/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Panel>\r\n            <Section>\r\n                <Row className={'mb-25'}>\r\n                    <Col xs={12}>\r\n                        <Title>Agent create</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Form getValueFromField={(val, name) => setPersonTypeForSelect(val, name)}\r\n                      footer={<Button>Save</Button>} formRequest={(values) => create(values)}>\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <Field name={'branch'} type={'select'} label={'Branch'} options={branches}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'inn'} type={'input-mask'} label={'INN'}\r\n                                   property={{mask: '999999999', maskChar: '_'}}\r\n                                   params={{required: true, pattern: /^[0-9]*$/}}/>\r\n                        </Col>\r\n\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementnumber'} type={'input'}\r\n                                   label={'agreementnumber'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementdate'} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                   label={'agreementdate'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n\r\n                        <Col xs={4}>\r\n                            <Field name={'typeofagent'} type={'select'} label={'Agent type'} options={agentTypes}\r\n                                  />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'typeofpersons'} type={'select'} label={'Person type'} options={persons}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        {isEqual(personType, '6292025f8982798b6996bc34') && <>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.name'} type={'input'} label={'name'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.secondname'} type={'input'} label={'secondname'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.middlename'} type={'input'} label={'middlename'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.gender'} type={'select'} label={'Gender'}\r\n                                       options={genders}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.dateofbirth'} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                       label={'dateofbirth'}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.citizenship'} type={'select'} label={'Citizenship'}\r\n                                       options={citizenship}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.typeofdocument'} type={'select'}\r\n                                       label={'typeofdocument'} options={typeofdocuments}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportSeries'} type={'input-mask'}\r\n                                       label={'Passport seria'}\r\n                                       property={{mask: 'aa', maskChar: '_'}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportNumber'} type={'input-mask'}\r\n                                       label={'Passport number'}\r\n                                       property={{mask: '9999999', maskChar: '_'}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n\r\n                                <Field name={'forindividualsdata.pin'} type={'input-mask'} label={'PINFL'}\r\n                                       property={{mask: '99999999999999', maskChar: '_'}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportissuancedate'} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                       label={'passportissuancedate'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.passportissuedby'} type={'input'}\r\n                                       label={'passportissuedby'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.regions'} type={'select'} label={'Region'}\r\n                                       options={regions}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.districts'} type={'select'} label={'District'}\r\n                                       options={districts}\r\n                                       params={{required: true}}/>\r\n                            </Col>\r\n\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.address'} type={'input'}\r\n                                       label={'address'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.postcode'} type={'input'}\r\n                                       label={'postcode'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.telephonenumber'} type={'input'}\r\n                                       label={'telephonenumber'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.emailforcontact'} type={'input'}\r\n                                       label={'emailforcontact'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.personalaccount'} type={'input'}\r\n                                       label={'personalaccount'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.transitaccount'} type={'input'}\r\n                                       label={'transitaccount'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.mfo'} type={'input'}\r\n                                       label={'mfo'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.nameofbank'} type={'input'}\r\n                                       label={'nameofbank'}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field name={'forindividualsdata.numberofcard'} type={'input'} label={'numberofcard'}\r\n                                />\r\n                            </Col>\r\n                        </>\r\n                        }\r\n                        {isEqual(personType, '629202448982798b6996bc32') &&\r\n                            <>\r\n\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.nameoforganization'} type={'input'}\r\n                                           label={'nameoforganization'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.oked'} type={'input'} label={'oked'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.mfo'} type={'input'} label={'mfo'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.nameofbank'} type={'input'} label={'nameofbank'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.innofbank'} type={'input'} label={'innofbank'}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.scheduledaccount'} type={'input'}\r\n                                           label={'scheduledaccount'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.regionId'} type={'select'} label={'Region'}\r\n                                           options={regions}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.districts'} type={'select'} label={'District'}\r\n                                           options={districts}\r\n                                           params={{required: true}}/>\r\n                                </Col>\r\n\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.address'} type={'input'}\r\n                                           label={'address'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.postcode'} type={'input'}\r\n                                           label={'postcode'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n                                    <Field name={'corporateentitiesdata.checkingaccount'} type={'input'}\r\n                                           label={'checkingaccount'}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={11} className={\"mb-15\"}>\r\n                                    <Title sm>Add employee</Title>\r\n                                </Col>\r\n                                <Col xs={1} className={'text-right'}>\r\n                                    <Button onClick={() => setEmpCount(prev => ++prev)} sm type={\"button\"}\r\n                                            inline><Plus/></Button>\r\n                                </Col>\r\n                                {range(0,empCount).map(count => <Col xs={12} className={'box__outlined'}><Row align={\"center\"}>\r\n                                    <Col xs={11}>\r\n                                        <Row>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].fullname`} type={'input'}\r\n                                                       label={'Employee fullname'}\r\n                                                       params={{required:true}}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].positions`} type={'select'} options={positions}\r\n                                                       label={'Employee position'}\r\n                                                       params={{required:true}}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].typeofdocumentsformanager`} type={'select'} options={typeofdocuments}\r\n                                                       label={'Employee doc type'}\r\n                                                       params={{required:true}}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].documentnumber`} type={'input'}\r\n                                                       label={'Employee documentnumber'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].dateofmanagerdocument`} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                                       label={'dateofmanagerdocument'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].expirationdate`} dateFormat={\"MM/DD/YYYY\"} type={'datepicker'}\r\n                                                       label={'expirationdate'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].telephonenumber`} type={'input'}\r\n                                                       label={'telephonenumber'}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={4}>\r\n                                                <Field name={`corporateentitiesdata.employees[${count}].emailforcontacts`} type={'input'}\r\n                                                       label={'emailforcontacts'}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={1} className={\"text-right \"}>\r\n                                        <Button danger onClick={() => setEmpCount(prev => --prev)} sm type={\"button\"}\r\n                                                inline><Minus/></Button>\r\n                                    </Col>\r\n                                </Row></Col>)}\r\n\r\n                            </>\r\n                        }\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'isUsedourpanel'}\r\n                                type={'switch'}\r\n                                name={'isUsedourpanel'}\r\n                                params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'isUserRestAPI'}\r\n                                type={'switch'}\r\n                                name={'isUserRestAPI'}\r\n                                params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'email'} type={'input'} label={'Email'}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n\r\n                        <Col xs={4}>\r\n                            <Field name={'password'} type={'input'} label={'password'}\r\n                                   params={{required: true}} property={{type:'password'}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'accountstatus'} type={'select'} label={'Account status'}\r\n                                   options={accountstatus}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'accountrole'} type={'select'} label={'Account role'} options={accountrole}\r\n                                   params={{required: true}}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AgentsCreateContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AgentsCreateContainer from \"../containers/AgentsCreateContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n.box__outlined{\r\n  border:1px dotted #BABABA;\r\n  padding: 15px;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n}\r\n`;\r\nconst AgentsCreatePage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <AgentsCreateContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default AgentsCreatePage;"],"names":["navigate","useNavigate","useState","personType","setPersonType","empCount","setEmpCount","regionId","setRegionId","branches","useGetAllQuery","key","KEYS","url","URLS","data","getSelectOptionsListFromData","get","regions","agentTypes","persons","accountstatus","accountrole","genders","citizenship","typeofdocuments","districts","useGetOneQuery","id","enabled","positions","usePostQuery","listKeyId","createRequest","mutate","isLoading","xs","className","getValueFromField","val","name","isEqual","setPersonTypeForSelect","footer","formRequest","values","attributes","isbeneficiary","isfixedpolicyholde","onSuccess","onError","create","type","label","options","params","required","property","mask","maskChar","pattern","dateFormat","sm","onClick","prev","inline","range","map","count","align","danger","Styled","styled","rest"],"sourceRoot":""}