{"version":3,"file":"static/js/5001.c651c6cf.chunk.js","mappings":"oYAoQA,EAlP8B,SAAC,GAAc,oBAAC,IACnCA,GAAKC,EAAAA,EAAAA,KAALD,EACDE,GAAWC,EAAAA,EAAAA,MACVC,GAAMC,EAAAA,EAAAA,MAAND,GAEP,GAAyCE,EAAAA,EAAAA,IAAe,CAACF,GAAAA,EAAIG,IAAKC,EAAAA,EAAAA,SAAeC,IAAKC,EAAAA,EAAAA,WAA3EC,EAAX,EAAKC,KAAcC,EAAnB,EAAmBA,UAEbC,GAFN,EAA8BC,SAEPC,EAAAA,EAAAA,IAAS,SAAAC,GAAK,OAAIC,EAAAA,EAAAA,KAAID,EAAO,kBAAkB,mBAG3DE,GAAgBC,EAAAA,EAAAA,IAAe,CAACb,IAAKC,EAAAA,EAAAA,cAAoBC,IAAKC,EAAAA,EAAAA,gBAApEE,KACLO,GAAeE,EAAAA,EAAAA,KAA6BH,EAAAA,EAAAA,KAAIC,EAAD,YAA4B,IAAK,MAAO,QAEvF,IAAWG,GAAWF,EAAAA,EAAAA,IAAe,CAACb,IAAKC,EAAAA,EAAAA,QAAcC,IAAKC,EAAAA,EAAAA,UAAzDE,KACLU,GAAUD,EAAAA,EAAAA,KAA6BH,EAAAA,EAAAA,KAAII,EAAD,YAAuB,IAAK,MAAO,QAE7E,IAAWC,GAAaH,EAAAA,EAAAA,IAAe,CAACb,IAAKC,EAAAA,EAAAA,SAAeC,IAAKC,EAAAA,EAAAA,WAA5DE,KACLW,GAAYF,EAAAA,EAAAA,KAA6BH,EAAAA,EAAAA,KAAIK,EAAD,YAAyB,IAAK,MAAO,QAEjF,IAAWC,GAAoBJ,EAAAA,EAAAA,IAAe,CAACb,IAAKC,EAAAA,EAAAA,cAAoBC,IAAKC,EAAAA,EAAAA,gBAAxEE,KACLY,GAAmBH,EAAAA,EAAAA,KAA6BH,EAAAA,EAAAA,KAAIM,EAAD,YAAgC,IAAK,MAAO,QAE/F,OAA4DC,EAAAA,EAAAA,IAAY,CAACC,UAAWlB,EAAAA,EAAAA,WAArEmB,EAAf,EAAOC,OAAkCC,EAAzC,EAA8BhB,UAE9B,GAAgCiB,EAAAA,EAAAA,UAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAcMC,GAAcC,EAAAA,EAAAA,UAAQ,iBAAM,CAC9B,CACI9B,GAAI,EACJ+B,MAAOnC,EAAE,YACToC,KAAM,aAEV,CACIhC,GAAI,EACJ+B,MAAO/B,EACPgC,KAAM,QAEX,IAYH,OAVAC,EAAAA,EAAAA,YAAU,WACNvB,EAAemB,KAChB,KAEHI,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACZ,WAAInB,EAAAA,EAAAA,KAAIP,EAAQ,sBAAsB,WAAtC,OAAI,EAAuC2B,QACvCN,GAAYd,EAAAA,EAAAA,KAAIP,EAAQ,uBAAuB2B,UAEpD,EAACpB,EAAAA,EAAAA,KAAIP,EAAQ,eAEZE,GACO,SAAC,IAAD,KAGP,gCACKgB,IAAmB,SAAC,IAAD,KACpB,UAAC,IAAD,YACI,SAAC,KAAD,CAAKU,UAAW,QAAhB,UACI,SAAC,KAAD,CAAKC,GAAI,GAAT,UACI,SAAC,IAAD,iCAGR,UAAC,IAAD,CAAMC,QAAQ,SAAC,IAAD,CAAQC,KAAM,SAAUC,IAAE,EAA1B,oBAA4CC,YAAa,SAACC,GAAD,OA/CpE,SAAC,GAAY,IAAXjC,EAAU,EAAVA,KACbe,EAAc,CAAClB,IAAI,GAAD,OAAKC,EAAAA,EAAAA,SAAL,YAAsBN,GAAM0C,WAAYlC,GAAO,CAC7DmC,UAAW,WACP7C,EAAS,cAEb8C,QAAS,eA0C8EC,CAAOJ,IAA1F,WACI,UAAC,KAAD,CAAKN,UAAW,QAAhB,WACI,SAAC,KAAD,CAAKC,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,mBAAoBR,KAAM,SAAUS,MAAO,eACjDC,QAASjC,EACTkC,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,mCAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,kBAAmBR,KAAM,QAC/BS,MAAO,kBACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,kCAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,MAAOR,KAAM,aAAcS,MAAO,MACxCK,SAAU,CAACC,KAAM,YAAaC,SAAU,KACxCL,OAAQ,CAACC,UAAU,EAAMK,QAAS,YAClCJ,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,sBAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,SAAUR,KAAM,SAAUS,MAAO,SAAUC,QAAS9B,EAC1D+B,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,6BAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,aAAcR,KAAM,QAC1BS,MAAO,aACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,6BAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,qBAAsBR,KAAM,QAClCS,MAAO,qBACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,qCAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,UAAWR,KAAM,QACvBS,MAAO,UACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,0BAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,YAAaR,KAAM,QACzBS,MAAO,YACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,4BAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,QAASR,KAAM,QACrBS,MAAO,QACPK,SAAU,CAACd,KAAM,SACjBW,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,wBAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,kBAAmBR,KAAM,QAC/BS,MAAO,kBACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,kCAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,gBAAiBR,KAAM,aAC7BS,MAAO,gBACPI,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,gCAIrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,iBAAkBR,KAAM,aAC9BS,MAAO,iBACPI,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,iCAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAI,kBAAqBR,KAAM,QAC/BS,MAAO,kBACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,kCAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAI,MAASR,KAAM,QACnBS,MAAO,MACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,sBAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAI,aAAgBR,KAAM,QAC1BS,MAAO,aACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,6BAGrC,SAAC,KAAD,CAAK6B,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAM,gBAAiBR,KAAM,SAAUS,MAAO,gBAC9CC,QAAS5B,EACT6B,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAQ,uCAMzC,SAAC,KAAD,CAAK4B,UAAW,QAAhB,UACI,SAAC,KAAD,CAAKC,GAAI,GAAT,UACI,SAAC,IAAD,CAAOoB,IAAE,EAAT,+BAGPC,EAAAA,EAAAA,OAAM,EAAG9B,GAAU+B,KAAI,SAACC,EAAOC,GAAR,OAAc,UAAC,KAAD,CAAKC,MAAO,SAAZ,WAClC,SAAC,KAAD,CAAKzB,GAAI,GAAT,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAKA,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAI,oBAAea,EAAf,cAAkCrB,KAAM,QAC5CS,MAAO,WACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAD,8BAAgCoD,EAAhC,oBAG5B,SAAC,KAAD,CAAKvB,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAI,oBAAea,EAAf,eAAmCrB,KAAM,SAAUS,MAAO,YAC9DC,QAAS7B,EACT8B,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAD,8BAAgCoD,EAAhC,yBAG5B,SAAC,KAAD,CAAKvB,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAI,oBAAea,EAAf,qBAAyCrB,KAAM,QACnDS,MAAO,kBACPE,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAD,8BAAgCoD,EAAhC,2BAG5B,SAAC,KAAD,CAAKvB,GAAI,EAAT,UACI,SAAC,IAAD,CAAOU,KAAI,oBAAea,EAAf,sBAA0CrB,KAAM,QACpDS,MAAO,mBACPK,SAAU,CAACd,KAAM,SACjBW,OAAQ,CAACC,UAAU,GACnBC,cAAcrC,EAAAA,EAAAA,KAAIP,EAAD,8BAAgCoD,EAAhC,iCAKpC,SAAC,KAAD,CAAKvB,GAAI,EAAGD,UAAW,aAAvB,UACK2B,EAAAA,EAAAA,SAAQnC,EAAUgC,EAAQ,IACvB,SAAC,IAAD,CAAQI,QAAS,kBAAMnC,GAAY,SAAAoC,GAAI,QAAMA,MAAOR,IAAE,EAAClB,KAAM,SACrD2B,QAAM,EADd,UACe,SAAC,IAAD,OACf,SAAC,IAAD,CAAQC,QAAM,EAACH,QAAS,kBAAMnC,GAAY,SAAAoC,GAAI,QAAMA,MAAOR,IAAE,EAAClB,KAAM,SAC5D2B,QAAM,EADd,UACe,SAAC,IAAD,wBCtPzCE,EAASC,EAAAA,GAAAA,IAAH,wBAUZ,EARyB,SAAC,GAAe,IAAXC,EAAU,oBACpC,OACI,SAACF,GAAD,kBAAYE,GAAZ,cACI,SAAC,EAAD","sources":["modules/branches/containers/BranchUpdateContainer.jsx","modules/branches/pages/BranchUpdatePage.jsx"],"sourcesContent":["import React, {useEffect, useState, useMemo} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport {get, isEqual, range} from \"lodash\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery, usePutQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\nimport {useStore} from \"../../../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\n\r\nconst BranchUpdateContainer = ({...rest}) => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const {id} = useParams()\r\n\r\n    let {data: branch, isLoading, isError} = useGetOneQuery({id, key: KEYS.branches, url: URLS.branches})\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n\r\n    let {data: branchLevels} = useGetAllQuery({key: KEYS.levelofbranch, url: URLS.levelofbranch})\r\n    branchLevels = getSelectOptionsListFromData(get(branchLevels, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: regions} = useGetAllQuery({key: KEYS.regions, url: URLS.regions})\r\n    regions = getSelectOptionsListFromData(get(regions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: positions} = useGetAllQuery({key: KEYS.position, url: URLS.position})\r\n    positions = getSelectOptionsListFromData(get(positions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: branchStatusList} = useGetAllQuery({key: KEYS.breanchstatus, url: URLS.breanchstatus})\r\n    branchStatusList = getSelectOptionsListFromData(get(branchStatusList, `data.data`, []), '_id', 'name')\r\n\r\n    const {mutate: updateRequest, isLoading: updateIsLoading} = usePutQuery({listKeyId: KEYS.branches})\r\n\r\n    const [empCount, setEmpCount] = useState(1);\r\n\r\n    const update = ({data}) => {\r\n        updateRequest({url: `${URLS.branches}/${id}`, attributes: data}, {\r\n            onSuccess: () => {\r\n                navigate('/branches')\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: t('Branches'),\r\n            path: '/branches',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: id,\r\n            path: '#',\r\n        }\r\n    ], [])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (get(branch, 'data.data.employees',[])?.length) {\r\n            setEmpCount(get(branch, 'data.data.employees').length)\r\n        }\r\n    }, [get(branch, 'data.data')])\r\n\r\n    if (isLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n    return (\r\n        <>\r\n            {updateIsLoading && <OverlayLoader/>}\r\n            <Section>\r\n                <Row className={'mb-25'}>\r\n                    <Col xs={12}>\r\n                        <Title>Branch update</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Form footer={<Button type={\"submit\"} lg>Update</Button>} formRequest={(values) => update(values)}>\r\n                    <Row className={'mb-15'}>\r\n                        <Col xs={4}>\r\n                            <Field name={'levelofbreanches'} type={'select'} label={'Branch level'}\r\n                                   options={branchLevels}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.levelofbreanches')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'codeofbreanches'} type={'input'}\r\n                                   label={'codeofbreanches'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.codeofbreanches')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'inn'} type={'input-mask'} label={'INN'}\r\n                                   property={{mask: '999999999', maskChar: '_'}}\r\n                                   params={{required: true, pattern: /^[0-9]*$/}}\r\n                                   defaultValue={get(branch, 'data.data.inn')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'region'} type={'select'} label={'Region'} options={regions}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.region._id')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'branchname'} type={'input'}\r\n                                   label={'branchname'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.branchname')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'shorttitleofbranch'} type={'input'}\r\n                                   label={'shorttitleofbranch'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.shorttitleofbranch')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'address'} type={'input'}\r\n                                   label={'address'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.address')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'telephone'} type={'input'}\r\n                                   label={'telephone'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.telephone')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'email'} type={'input'}\r\n                                   label={'email'}\r\n                                   property={{type: \"email\"}}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.email')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementnumber'} type={'input'}\r\n                                   label={'agreementnumber'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.agreementnumber')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementdate'} type={'datepicker'}\r\n                                   label={'agreementdate'}\r\n                                   defaultValue={get(branch, 'data.data.agreementdate')}\r\n\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'expirationdate'} type={'datepicker'}\r\n                                   label={'expirationdate'}\r\n                                   defaultValue={get(branch, 'data.data.expirationdate')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`checkingaccount`} type={'input'}\r\n                                   label={'checkingaccount'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.checkingaccount')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`mfo`} type={'input'}\r\n                                   label={'mfo'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.mfo')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`nameofbank`} type={'input'}\r\n                                   label={'nameofbank'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.nameofbank')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'breanchstatus'} type={'select'} label={'Branch status'}\r\n                                   options={branchStatusList}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.breanchstatus._id')}\r\n                            />\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row className={\"mb-15\"}>\r\n                        <Col xs={12}>\r\n                            <Title sm>Add employee</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {range(0, empCount).map((count, i) => <Row align={'center'}>\r\n                        <Col xs={11}>\r\n                            <Row>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].fullname`} type={'input'}\r\n                                           label={'Fullname'}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].fullname`)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].positions`} type={'select'} label={'Positions'}\r\n                                           options={positions}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].positions._id`)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].telephonenumber`} type={'input'}\r\n                                           label={'telephonenumber'}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].telephonenumber`)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].emailforcontacts`} type={'input'}\r\n                                           label={'emailforcontacts'}\r\n                                           property={{type: \"email\"}}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].emailforcontacts`)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={1} className={\"text-right\"}>\r\n                            {isEqual(empCount, count + 1) ?\r\n                                <Button onClick={() => setEmpCount(prev => ++prev)} sm type={\"button\"}\r\n                                        inline><Plus/></Button> :\r\n                                <Button danger onClick={() => setEmpCount(prev => --prev)} sm type={\"button\"}\r\n                                        inline><Minus/></Button>}\r\n                        </Col>\r\n                    </Row>)}\r\n                </Form>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BranchUpdateContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport BranchUpdateContainer from \"../containers/BranchUpdateContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n`;\r\nconst BranchUpdatePage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <BranchUpdateContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default BranchUpdatePage;"],"names":["t","useTranslation","navigate","useNavigate","id","useParams","useGetOneQuery","key","KEYS","url","URLS","branch","data","isLoading","setBreadcrumbs","isError","useStore","state","get","branchLevels","useGetAllQuery","getSelectOptionsListFromData","regions","positions","branchStatusList","usePutQuery","listKeyId","updateRequest","mutate","updateIsLoading","useState","empCount","setEmpCount","breadcrumbs","useMemo","title","path","useEffect","length","className","xs","footer","type","lg","formRequest","values","attributes","onSuccess","onError","update","name","label","options","params","required","defaultValue","property","mask","maskChar","pattern","sm","range","map","count","i","align","isEqual","onClick","prev","inline","danger","Styled","styled","rest"],"sourceRoot":""}