{"version":3,"file":"static/js/5626.00824fca.chunk.js","mappings":"qSAuFA,EA5E0B,SAAC,GAAc,oBAAC,IAEhCA,GAAiBC,EAAAA,EAAAA,IAAS,SAAAC,GAAK,OAAIC,EAAAA,EAAAA,KAAID,EAAO,kBAAkB,kBAGhEE,GAAcC,EAAAA,EAAAA,UAAQ,iBAAM,CAC9B,CACIC,GAAI,EACJC,MAAO,qEACPC,KAAM,aAEV,CACIF,GAAI,EACJC,MAAO,WACPC,KAAM,yBAEX,IAMH,OAJAC,EAAAA,EAAAA,YAAU,WACNT,EAAeI,KAChB,KAGC,+BACI,SAAC,IAAD,CACIM,gBAAiB,CACb,CACIJ,GAAI,EACJK,IAAK,aACLJ,MAAO,gBAEX,CACID,GAAI,EACJK,IAAK,gBACLJ,MAAO,UAEX,CACID,GAAI,EACJK,IAAK,UACLJ,MAAO,WAEX,CACID,GAAI,EACJK,IAAK,kBACLJ,MAAO,eAEX,CACID,GAAI,EACJK,IAAK,QACLJ,MAAO,SAEX,CACID,GAAI,EACJK,IAAK,MACLJ,MAAO,OAEX,CACID,GAAI,EACJK,IAAK,aACLJ,MAAO,eAGfK,MAAOC,EAAAA,EAAAA,SACPC,IAAKC,EAAAA,EAAAA,SACLR,MAAO,WACPS,gBAAiB,OACjBC,QAAS,iBACTC,UAAW,mBACXC,UAAW,mBACXC,cAAY,OC5EtBC,EAASC,EAAAA,GAAAA,IAAH,wBAUZ,EARqB,SAAC,GAAe,IAAXC,EAAU,oBAChC,OACI,SAACF,GAAD,kBAAYE,GAAZ,cACI,SAAC,EAAD,S,iECaNC,EAA+B,WAA+C,IAA9CC,EAA6C,uDAAtC,GAAIC,EAAkC,uDAA1B,KAAMC,EAAoB,uDAAZ,QACnE,OAAOF,EAAKG,KAAI,SAAAC,GAAI,MAAK,CAAEH,MAAOG,EAAKH,GAAQC,MAAOE,EAAKF,QAAc","sources":["modules/branches/containers/BranchesContainer.jsx","modules/branches/pages/BranchesPage.jsx","utils/index.js"],"sourcesContent":["import React, {useEffect, useMemo} from 'react';\r\nimport {useStore} from \"../../../store\";\r\nimport {get, isEqual} from \"lodash\";\r\nimport GridView from \"../../../containers/grid-view/grid-view\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport {useGetAllQuery} from \"../../../hooks/api\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\nimport {Col, Row} from \"react-grid-system\";\r\n\r\nconst BranchesContainer = ({...rest}) => {\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: 'Справочники',\r\n            path: '/handbook',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Branches',\r\n            path: '/handbook/branches',\r\n        }\r\n    ], [])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <GridView\r\n                tableHeaderData={[\r\n                    {\r\n                        id: 1,\r\n                        key: 'branchname',\r\n                        title: 'Branch name '\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        key: 'regionId.name',\r\n                        title: 'Region'\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        key: 'address',\r\n                        title: 'Address'\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        key: 'codeofbreanches',\r\n                        title: 'Branch code'\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        key: 'email',\r\n                        title: 'Email'\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        key: 'mfo',\r\n                        title: 'MFO'\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        key: 'nameofbank',\r\n                        title: 'nameofbank'\r\n                    },\r\n                ]}\r\n                keyId={KEYS.branches}\r\n                url={URLS.branches}\r\n                title={'Branches'}\r\n                responseDataKey={'data'}\r\n                viewUrl={'/branches/view'}\r\n                createUrl={'/branches/create'}\r\n                updateUrl={'/branches/update'}\r\n                isHideColumn\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BranchesContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport BranchesContainer from \"../containers/BranchesContainer\";\r\n\r\nconst Styled = styled.div`\r\n`;\r\nconst BranchesPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <BranchesContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default BranchesPage;","import {includes} from \"lodash\";\r\n\r\nconst addDetectClick =  ({setOpen,classNames = []}) => {\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (!classNames.some(className => e.target.classList.contains(className))) {\r\n            setOpen(false);\r\n        }\r\n    });\r\n}\r\nconst removeDetectClick = () => {\r\n    window.removeEventListener('click',addDetectClick,false);\r\n}\r\n\r\nconst hasAccess = (roles = [], can = '') => {\r\n    let access = false;\r\n    if (includes(roles, can)) {\r\n        access = true;\r\n    }\r\n    return access;\r\n}\r\n\r\n\r\nconst getSelectOptionsListFromData = (data = [], value = 'id', label = 'title') => {\r\n    return data.map(item => ({ value: item[value], label: item[label] })) || [];\r\n}\r\n\r\n\r\nexport {\r\n    addDetectClick,\r\n    removeDetectClick,\r\n    hasAccess,\r\n    getSelectOptionsListFromData\r\n}"],"names":["setBreadcrumbs","useStore","state","get","breadcrumbs","useMemo","id","title","path","useEffect","tableHeaderData","key","keyId","KEYS","url","URLS","responseDataKey","viewUrl","createUrl","updateUrl","isHideColumn","Styled","styled","rest","getSelectOptionsListFromData","data","value","label","map","item"],"sourceRoot":""}