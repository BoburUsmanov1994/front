{"version":3,"file":"static/js/9083.5d85485d.chunk.js","mappings":"gWA4IA,EA3HwB,SAAC,GAGO,IAAD,IAFFA,WAAAA,OAEE,MAFW,KAEX,EACpBC,IADoB,aACfC,EAAAA,EAAAA,KAALD,GACDE,GAAWC,EAAAA,EAAAA,MACjB,GAAgDC,EAAAA,EAAAA,IAAe,CAC3DC,GAAIN,EACJO,IAAKC,EAAAA,EAAAA,WACLC,IAAKC,EAAAA,EAAAA,aAHEC,EAAX,EAAKC,KAAqBC,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,QAKrC,GAA2DC,EAAAA,EAAAA,IAAa,CAACC,UAAWR,EAAAA,EAAAA,aAArES,EAAf,EAAOC,OAAiCC,EAAxC,EAA6BN,UAElBO,GAAkBC,EAAAA,EAAAA,IAAe,CAACd,IAAKC,EAAAA,EAAAA,aAAmBC,IAAKC,EAAAA,EAAAA,eAArEE,KACLQ,GAAiBE,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAAIH,EAAD,YAA8B,IAAK,MAAO,QAE3F,IAAWI,GAAoBH,EAAAA,EAAAA,IAAe,CAACd,IAAKC,EAAAA,EAAAA,eAAqBC,IAAKC,EAAAA,EAAAA,iBAAzEE,KACLY,GAAmBF,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAAIC,EAAD,YAAgC,IAAK,MAAO,QAE/F,IAAWC,GAAqBJ,EAAAA,EAAAA,IAAe,CAACd,IAAKC,EAAAA,EAAAA,gBAAsBC,IAAKC,EAAAA,EAAAA,kBAA3EE,KACLa,GAAoBH,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAAIE,EAAD,YAAiC,IAAK,MAAO,QAoBjG,OAAIX,GACO,SAAC,KAAD,CAAUY,GAAI,SAGrBb,GACO,SAAC,IAAD,KAIP,UAAC,IAAD,WACKM,IAAmB,SAAC,IAAD,KACpB,SAAC,KAAD,CAAKQ,UAAW,QAASC,MAAO,SAAhC,UACI,SAAC,KAAD,CAAKC,GAAI,GAAT,UACI,SAAC,IAAD,8BAGR,SAAC,IAAD,CAAMC,YAAa,aAlCT,SAAClB,GACfK,EAAa,CACTR,IAAKC,EAAAA,EAAAA,OAAaqB,YAAW,kBACtBnB,GADqB,IAExBoB,aAAchC,EACdiC,gBAAiB,YACjBC,QAAQX,EAAAA,EAAAA,KAAIZ,EAAe,oBAC3BwB,mBAAmBZ,EAAAA,EAAAA,KAAIZ,EAAe,kCAE3C,CACCyB,UAAW,WACPjC,EAAS,oBAAD,OAAqBH,KAEjCqC,QAAS,eAsBLC,CAD2B,EAAV1B,OAGf2B,QAAQ,+BAAE,SAAC,IAAD,UAAStC,EAAE,WAH3B,UAII,SAAC,KAAD,WACI,SAAC,KAAD,CAAK4B,GAAI,GAAT,UACI,UAAC,KAAD,CAAKF,UAAW,QAAhB,WACI,SAAC,KAAD,CAAKE,GAAI,EAAT,UACI,SAAC,IAAD,CACIW,KAAM,QACNC,KAAI,eACJC,OAAQ,CAACC,UAAU,QAG3B,SAAC,KAAD,CAAKd,GAAI,EAAT,UACI,SAAC,IAAD,CACIW,KAAM,QACNC,KAAI,aACJC,OAAQ,CAACC,UAAU,QAG3B,SAAC,KAAD,CAAKd,GAAI,EAAT,UACI,SAAC,IAAD,CAAOe,MAAO3C,EAAE,eAAgB4C,QAASzB,EAAgBoB,KAAM,SACxDC,KAAM,iBAAkBC,OAAQ,CAACC,UAAU,QAItD,SAAC,KAAD,CAAKd,GAAI,EAAT,UACI,SAAC,IAAD,CAAOe,MAAO3C,EAAE,iBAAkB4C,QAASrB,EAAkBgB,KAAM,SAC5DC,KAAM,iBAAkBC,OAAQ,CAACC,UAAU,QAItD,SAAC,KAAD,CAAKd,GAAI,EAAT,UACI,SAAC,IAAD,CAAOe,MAAO3C,EAAE,kBAAmB4C,QAASpB,EAAmBe,KAAM,SAC9DC,KAAM,kBAAmBC,OAAQ,CAACC,UAAU,QAIvD,SAAC,KAAD,CAAKd,GAAI,EAAT,UACI,SAAC,IAAD,CACIW,KAAM,aACNC,KAAI,cACJK,WAAY,kBAGpB,SAAC,KAAD,CAAKjB,GAAI,EAAT,UACI,SAAC,IAAD,CACIW,KAAM,aACNC,KAAI,YACJK,WAAY,kBAGpB,SAAC,KAAD,CAAKjB,GAAI,EAAT,UACI,SAAC,IAAD,CACIW,KAAM,WACNC,KAAI,mCClHxC,EAXmB,SAAC,GAEM,oBAAC,IAChBzC,GAAc+C,EAAAA,EAAAA,MAAd/C,WACP,OACI,+BACI,SAAC,EAAD,CAAiBA,WAAYA","sources":["modules/policy/containers/CreateContainer.jsx","modules/policy/pages/CreatePage.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport Section from \"../../../components/section\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {ContentLoader, OverlayLoader} from \"../../../components/loader\";\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport {get} from \"lodash\"\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\n\r\n\r\nconst CreateContainer = ({\r\n                             product_id = null,\r\n                             ...rest\r\n                         }) => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    let {data: agreementData, isLoading, isError} = useGetOneQuery({\r\n        id: product_id,\r\n        key: KEYS.agreements,\r\n        url: URLS.agreements\r\n    })\r\n    const {mutate: createPolicy, isLoading: isLoadingPolicy} = usePostQuery({listKeyId: KEYS.agreements})\r\n\r\n    let {data: policyTypeList} = useGetAllQuery({key: KEYS.typeofpolice, url: URLS.typeofpolice})\r\n    policyTypeList = getSelectOptionsListFromData(get(policyTypeList, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: policyStatusList} = useGetAllQuery({key: KEYS.statusofpolicy, url: URLS.statusofpolicy})\r\n    policyStatusList = getSelectOptionsListFromData(get(policyStatusList, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: paymentStatusList} = useGetAllQuery({key: KEYS.statusofpayment, url: URLS.statusofpayment})\r\n    paymentStatusList = getSelectOptionsListFromData(get(paymentStatusList, `data.data`, []), '_id', 'name')\r\n\r\n    const addPolicy = (data) => {\r\n        createPolicy({\r\n            url: URLS.policy, attributes: {\r\n                ...data,\r\n                agreementsId: product_id,\r\n                copyofdocuments: 'xxxxxxxxx',\r\n                riskId: get(agreementData, 'data.data.riskId'),\r\n                objectofinsurance: get(agreementData, 'data.data.objectofinsurance'),\r\n            }\r\n        }, {\r\n            onSuccess: () => {\r\n                navigate(`/agreements/view/${product_id}`)\r\n            },\r\n            onError: () => {\r\n            }\r\n        })\r\n    }\r\n\r\n    if (isError) {\r\n        return <Navigate to={'/500'}/>\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <OverlayLoader/>;\r\n    }\r\n    \r\n    return (\r\n        <Section>\r\n            {isLoadingPolicy && <ContentLoader/>}\r\n            <Row className={'mb-15'} align={'center'}>\r\n                <Col xs={12}>\r\n                    <Title>Add policy</Title>\r\n                </Col>\r\n            </Row>\r\n            <Form formRequest={({data}) => {\r\n                addPolicy(data);\r\n            }}\r\n                  footer={<><Button>{t(\"Add\")}</Button></>}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Row className={'mt-15'}>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'input'}\r\n                                    name={`policynumber`}\r\n                                    params={{required: true}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'input'}\r\n                                    name={`formnumber`}\r\n                                    params={{required: true}}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field label={t('Policy type')} options={policyTypeList} type={'select'}\r\n                                       name={'typeofpoliceId'} params={{required: true}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col xs={4}>\r\n                                <Field label={t('Policy status')} options={policyStatusList} type={'select'}\r\n                                       name={'statusofpolicy'} params={{required: true}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col xs={4}>\r\n                                <Field label={t('Payment status')} options={paymentStatusList} type={'select'}\r\n                                       name={'statusofpayment'} params={{required: true}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'datepicker'}\r\n                                    name={`dateofissue`}\r\n                                    dateFormat={\"DD.MM.YYYY\"}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'datepicker'}\r\n                                    name={`dateofend`}\r\n                                    dateFormat={\"DD.MM.YYYY\"}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Field\r\n                                    type={'dropzone'}\r\n                                    name={`copyofdocuments`}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default CreateContainer;","import React from 'react';\r\nimport CreateContainer from \"../containers/CreateContainer\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst CreatePage = ({\r\n                        ...rest\r\n                    }) => {\r\n    const {product_id} = useParams();\r\n    return (\r\n        <>\r\n            <CreateContainer product_id={product_id} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreatePage;"],"names":["product_id","t","useTranslation","navigate","useNavigate","useGetOneQuery","id","key","KEYS","url","URLS","agreementData","data","isLoading","isError","usePostQuery","listKeyId","createPolicy","mutate","isLoadingPolicy","policyTypeList","useGetAllQuery","getSelectOptionsListFromData","get","policyStatusList","paymentStatusList","to","className","align","xs","formRequest","attributes","agreementsId","copyofdocuments","riskId","objectofinsurance","onSuccess","onError","addPolicy","footer","type","name","params","required","label","options","dateFormat","useParams"],"sourceRoot":""}