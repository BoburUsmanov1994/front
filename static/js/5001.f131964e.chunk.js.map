{"version":3,"file":"static/js/5001.f131964e.chunk.js","mappings":"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","sources":["components/section/index.jsx","components/ui/title/index.jsx","modules/branches/containers/BranchUpdateContainer.jsx","modules/branches/pages/BranchUpdatePage.jsx","utils/index.js","../node_modules/react-feather/dist/icons/minus.js","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.section`\r\n  padding: 25px 15px;\r\n  background-color: #fff;\r\n  \r\n`;\r\nconst Section = ({\r\n                     children,\r\n                     ...rest\r\n                 }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Section;","import React, {useEffect, useState,useRef} from 'react';\r\nimport styled,{css} from \"styled-components\";\r\n\r\nconst Styled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  h2{\r\n    padding-right: 25px;\r\n    font-size: 24px;\r\n    color: #000;\r\n    font-family: 'Gilroy-Bold', sans-serif;\r\n    margin-bottom: 0;\r\n  }\r\n  .line{\r\n    height: 1px;\r\n    background-color: #E5E5E5;\r\n    margin-top: 5px;\r\n    ${({w}) => w && `width: calc(100% - ${w}px - 10px);`}\r\n  }\r\n  \r\n  ${({sm}) => sm && css`\r\n    h2 {\r\n      font-size: 18px;\r\n    }\r\n  `}\r\n`;\r\nconst Title = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    const [width,setWidth] = useState(0);\r\n    useEffect(()=>{\r\n        setWidth(ref.current.clientWidth)\r\n    },[])\r\n    const ref = useRef(null)\r\n    return (\r\n        <Styled {...rest} w={width}>\r\n            <h2 ref={ref}>{children}</h2>\r\n            <div className=\"line\"></div>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Title;","import React, {useEffect, useState, useMemo} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport {get, isEqual, range} from \"lodash\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery, usePutQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\nimport {useStore} from \"../../../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport Form from \"../../../containers/form/form\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {getSelectOptionsListFromData} from \"../../../utils\";\r\n\r\nconst BranchUpdateContainer = ({...rest}) => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const {id} = useParams()\r\n\r\n    let {data: branch, isLoading, isError} = useGetOneQuery({id, key: KEYS.branches, url: URLS.branches})\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n\r\n    let {data: branchLevels} = useGetAllQuery({key: KEYS.levelofbranch, url: URLS.levelofbranch})\r\n    branchLevels = getSelectOptionsListFromData(get(branchLevels, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: regions} = useGetAllQuery({key: KEYS.regions, url: URLS.regions})\r\n    regions = getSelectOptionsListFromData(get(regions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: positions} = useGetAllQuery({key: KEYS.position, url: URLS.position})\r\n    positions = getSelectOptionsListFromData(get(positions, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: branchStatusList} = useGetAllQuery({key: KEYS.breanchstatus, url: URLS.breanchstatus})\r\n    branchStatusList = getSelectOptionsListFromData(get(branchStatusList, `data.data`, []), '_id', 'name')\r\n\r\n    const {mutate: updateRequest, isLoading: updateIsLoading} = usePutQuery({listKeyId: KEYS.branches})\r\n\r\n    const [empCount, setEmpCount] = useState(1);\r\n\r\n    const update = ({data}) => {\r\n        updateRequest({url: `${URLS.branches}/${id}`, attributes: data}, {\r\n            onSuccess: () => {\r\n                navigate('/branches')\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: t('Branches'),\r\n            path: '/branches',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: id,\r\n            path: '#',\r\n        }\r\n    ], [])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (get(branch, 'data.data.employees',[])?.length) {\r\n            setEmpCount(get(branch, 'data.data.employees').length)\r\n        }\r\n    }, [get(branch, 'data.data')])\r\n\r\n    if (isLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n    return (\r\n        <>\r\n            {updateIsLoading && <OverlayLoader/>}\r\n            <Section>\r\n                <Row className={'mb-25'}>\r\n                    <Col xs={12}>\r\n                        <Title>Branch update</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Form footer={<Button type={\"submit\"} lg>Update</Button>} formRequest={(values) => update(values)}>\r\n                    <Row className={'mb-15'}>\r\n                        <Col xs={4}>\r\n                            <Field name={'levelofbreanches'} type={'select'} label={'Branch level'}\r\n                                   options={branchLevels}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.levelofbreanches')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'codeofbreanches'} type={'input'}\r\n                                   label={'codeofbreanches'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.codeofbreanches')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'inn'} type={'input-mask'} label={'INN'}\r\n                                   property={{mask: '999999999', maskChar: '_'}}\r\n                                   params={{required: true, pattern: /^[0-9]*$/}}\r\n                                   defaultValue={get(branch, 'data.data.inn')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'regionId'} type={'select'} label={'Region'} options={regions}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.regionId._id')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'branchname'} type={'input'}\r\n                                   label={'branchname'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.branchname')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'shorttitleofbranch'} type={'input'}\r\n                                   label={'shorttitleofbranch'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.shorttitleofbranch')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'address'} type={'input'}\r\n                                   label={'address'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.address')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'telephone'} type={'input'}\r\n                                   label={'telephone'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.telephone')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'email'} type={'input'}\r\n                                   label={'email'}\r\n                                   property={{type: \"email\"}}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.email')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementnumber'} type={'input'}\r\n                                   label={'agreementnumber'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.agreementnumber')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'agreementdate'} type={'datepicker'}\r\n                                   label={'agreementdate'}\r\n                                   defaultValue={get(branch, 'data.data.agreementdate')}\r\n\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'expirationdate'} type={'datepicker'}\r\n                                   label={'expirationdate'}\r\n                                   defaultValue={get(branch, 'data.data.expirationdate')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`checkingaccount`} type={'input'}\r\n                                   label={'checkingaccount'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.checkingaccount')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`mfo`} type={'input'}\r\n                                   label={'mfo'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.mfo')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={`nameofbank`} type={'input'}\r\n                                   label={'nameofbank'}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.nameofbank')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field name={'breanchstatus'} type={'select'} label={'Branch status'}\r\n                                   options={branchStatusList}\r\n                                   params={{required: true}}\r\n                                   defaultValue={get(branch, 'data.data.breanchstatus._id')}\r\n                            />\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row className={\"mb-15\"}>\r\n                        <Col xs={12}>\r\n                            <Title sm>Add employee</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {range(0, empCount).map((count, i) => <Row align={'center'}>\r\n                        <Col xs={11}>\r\n                            <Row>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].fullname`} type={'input'}\r\n                                           label={'Fullname'}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].fullname`)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].positions`} type={'select'} label={'Positions'}\r\n                                           options={positions}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].positions._id`)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].telephonenumber`} type={'input'}\r\n                                           label={'telephonenumber'}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].telephonenumber`)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field name={`employees[${count}].emailforcontacts`} type={'input'}\r\n                                           label={'emailforcontacts'}\r\n                                           property={{type: \"email\"}}\r\n                                           params={{required: true}}\r\n                                           defaultValue={get(branch, `data.data.employees[${count}].emailforcontacts`)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={1} className={\"text-right\"}>\r\n                            {isEqual(empCount, count + 1) ?\r\n                                <Button onClick={() => setEmpCount(prev => ++prev)} sm type={\"button\"}\r\n                                        inline><Plus/></Button> :\r\n                                <Button danger onClick={() => setEmpCount(prev => --prev)} sm type={\"button\"}\r\n                                        inline><Minus/></Button>}\r\n                        </Col>\r\n                    </Row>)}\r\n                </Form>\r\n            </Section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BranchUpdateContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport BranchUpdateContainer from \"../containers/BranchUpdateContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n`;\r\nconst BranchUpdatePage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <BranchUpdateContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default BranchUpdatePage;","import {includes} from \"lodash\";\r\n\r\nconst addDetectClick =  ({setOpen,classNames = []}) => {\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (!classNames.some(className => e.target.classList.contains(className))) {\r\n            setOpen(false);\r\n        }\r\n    });\r\n}\r\nconst removeDetectClick = () => {\r\n    window.removeEventListener('click',addDetectClick,false);\r\n}\r\n\r\nconst hasAccess = (roles = [], can = '') => {\r\n    let access = false;\r\n    if (includes(roles, can)) {\r\n        access = true;\r\n    }\r\n    return access;\r\n}\r\n\r\n\r\nconst getSelectOptionsListFromData = (data = [], value = 'id', label = 'title') => {\r\n    return data.map(item => ({ value: item[value], label: item[label] })) || [];\r\n}\r\n\r\n\r\nexport {\r\n    addDetectClick,\r\n    removeDetectClick,\r\n    hasAccess,\r\n    getSelectOptionsListFromData\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Minus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nMinus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMinus.displayName = 'Minus';\nexport default Minus;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["Styled","styled","children","rest","fluid","w","sm","css","useState","width","setWidth","useEffect","ref","current","clientWidth","useRef","className","t","useTranslation","navigate","useNavigate","id","useParams","useGetOneQuery","key","KEYS","url","URLS","branch","data","isLoading","setBreadcrumbs","isError","useStore","state","get","branchLevels","useGetAllQuery","getSelectOptionsListFromData","regions","positions","branchStatusList","usePutQuery","listKeyId","updateRequest","mutate","updateIsLoading","empCount","setEmpCount","breadcrumbs","useMemo","title","path","length","xs","footer","type","lg","formRequest","values","attributes","onSuccess","onError","update","name","label","options","params","required","defaultValue","property","mask","maskChar","pattern","range","map","count","i","align","isEqual","onClick","prev","inline","danger","value","item","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Minus","forwardRef","_ref","_ref$color","color","_ref$size","size","React","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","PropTypes","displayName","Plus"],"sourceRoot":""}