{"version":3,"file":"static/js/9355.b43c48fa.chunk.js","mappings":"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","sources":["components/panel/index.jsx","components/search/index.jsx","components/section/index.jsx","components/step-nav/index.jsx","components/table/index.jsx","components/ui/title/index.jsx","modules/products/components/create/StepFive.jsx","modules/products/components/create/StepFour.jsx","modules/products/components/create/StepOne.jsx","modules/products/components/create/StepSix.jsx","modules/products/components/create/StepThree.jsx","modules/products/components/create/StepTwo.jsx","utils/index.js","../node_modules/react-feather/dist/icons/download.js","../node_modules/react-feather/dist/icons/trash-2.js","../node_modules/react-step-wizard/dist/react-step-wizard.min.js"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.div`\r\n  padding: 12px 15px;\r\n  background-color: #F7F7F7;\r\n  width: 100%;\r\n  display: block;\r\n`;\r\n\r\nconst Panel = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Panel;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Styled = styled.form`\r\n  display: flex;\r\n\r\n  .search-form-input {\r\n    padding: 15px 25px;\r\n    border: 1px solid #CDCDCD;\r\n    border-radius: 5px 0px 0px 5px;\r\n    display: block;\r\n    width: 100%;\r\n    outline: none;\r\n    transition: 0.2s ease;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Regular', sans-serif;\r\n\r\n    &:focus {\r\n      border-color: #13D6D1;\r\n    }\r\n  }\r\n\r\n  .search-form-btn {\r\n    padding: 15px 20px;\r\n    min-width: 175px;\r\n    text-align: center;\r\n    border: none;\r\n    background: #13D6D1;\r\n    border-radius: 0px 5px 5px 0px;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Medium', sans-serif;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Search = ({\r\n                    ...rest\r\n                }) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const {t} = useTranslation()\r\n    const onSubmit = (data) => {\r\n        console.log('search', data)\r\n    }\r\n    return (\r\n        <Styled onSubmit={handleSubmit(onSubmit)} {...rest}>\r\n            <input placeholder={t('Поиск')}  {...register(\"search\")} type=\"text\" className={'search-form-input'}/>\r\n            <button className={'search-form-btn'} type={'submit'}>{t(\"Найти\")}</button>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.section`\r\n  padding: 25px 15px;\r\n  background-color: #fff;\r\n  \r\n`;\r\nconst Section = ({\r\n                     children,\r\n                     ...rest\r\n                 }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ChevronRight} from \"react-feather\";\r\nimport classNames from \"classnames\";\r\nimport {includes, isEqual, range} from \"lodash\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Styled = styled.ul`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  padding: 10px 0;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n\r\n  .step {\r\n    &-item {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 25px;\r\n\r\n      &:first-child {\r\n        margin-left: 12px;\r\n      }\r\n\r\n      &.active {\r\n        .step-number {\r\n          background-color: #1D283A;\r\n        }\r\n\r\n        .step-text {\r\n          font-family: 'Gilroy-Medium', sans-serif;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-number {\r\n      display: flex;\r\n      width: 55px;\r\n      height: 55px;\r\n      -webkit-border-radius: 50%;\r\n      -moz-border-radius: 50%;\r\n      border-radius: 50%;\r\n      background-color: #E6E6E6;\r\n      font-size: 24px;\r\n      justify-content: center;\r\n      align-items: center;\r\n      font-family: 'Gilroy-Heavy', sans-serif;\r\n      color: #fff;\r\n      padding: 5px;\r\n      background-clip: content-box;\r\n      border: 1px dashed rgba(29, 40, 58, 0.6);\r\n      margin-right: 25px;\r\n      position: relative;\r\n      transition: 0.3s ease;\r\n      align-items: center;\r\n\r\n      &:after {\r\n        position: absolute;\r\n        width: 65px;\r\n        height: 65px;\r\n        content: '';\r\n        border: 1px dashed rgba(112, 112, 112, 0.4);\r\n        -webkit-border-radius: 50%;\r\n        -moz-border-radius: 50%;\r\n        border-radius: 50%;\r\n      }\r\n\r\n      &:before {\r\n        position: absolute;\r\n        width: 75px;\r\n        height: 75px;\r\n        content: '';\r\n        border: 1px dashed rgba(112, 112, 112, 0.2);\r\n        -webkit-border-radius: 50%;\r\n        -moz-border-radius: 50%;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n\r\n    &-text {\r\n      display: inline-block;\r\n      margin-right: 10px;\r\n      color: rgba(0, 0, 0, 0.6);\r\n      font-size: 16px;\r\n    }\r\n\r\n    &-icon {\r\n      display: inline-block;\r\n      margin-top: 8px;\r\n    }\r\n  }\r\n`;\r\nconst StepNav = ({\r\n                     step = 1,\r\n                     steps = ['Добавление продукта', 'Добавление параметров', 'Калькуляция', 'Франшиза', 'Проверка данных', 'Подтверждение'],\r\n                     ...rest\r\n                 }) => {\r\n    const {t} = useTranslation()\r\n    return (\r\n        <Styled {...rest}>\r\n            {\r\n                steps && steps.map((item, i) => <li\r\n                    className={classNames('step-item', {active: includes(range(0, step + 1), i + 1)})}>\r\n                    <span className={'step-number'}>{i + 1}</span>\r\n                    <span className={'step-text'}>{t(item)}</span>\r\n                    <span className={'step-icon'}>\r\n                    { i+1 < steps.length && <ChevronRight size={18} color={includes(range(0, step + 1), i + 1) ? '#000' : '#E5E5E5'}/>}\r\n                </span>\r\n                </li>)\r\n            }\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default StepNav;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Styled = styled.table`\r\n  width: 100%;\r\n  //overflow-x: scroll;\r\n\r\n  .form-group {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  tr {\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .table-head {\r\n    &.hidden {\r\n      opacity: 0;\r\n    }\r\n\r\n    th {\r\n      padding: 12px;\r\n      color: #010101;\r\n      font-family: 'Gilroy-Medium', sans-serif;\r\n      font-size: 16px;\r\n\r\n      &:first-child {\r\n        text-align: left;\r\n        padding-left: 20px;\r\n      }\r\n\r\n      text-align: center;\r\n\r\n      &:last-child {\r\n        text-align: right;\r\n        padding-right: 20px;\r\n        min-width: 125px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .table-body {\r\n    tr:nth-child(2n+1) {\r\n      background-color: #F4F4F4;\r\n    }\r\n\r\n    td {\r\n      padding: 12px;\r\n      font-family: 'Gilroy-Regular', sans-serif;\r\n      color: #000;\r\n      .w-250{\r\n        min-width: 250px !important;\r\n      }\r\n\r\n      &:first-child {\r\n        text-align: left;\r\n        padding-left: 20px;\r\n      }\r\n\r\n      text-align: center;\r\n\r\n      &:last-child {\r\n        text-align: right;\r\n        padding-right: 20px;\r\n      }\r\n    }\r\n  }\r\n \r\n`;\r\n\r\nconst Table = ({\r\n                   thead = [],\r\n                   children,\r\n                   hideThead = true,\r\n                   ...rest\r\n               }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <thead className={classNames('table-head', {hidden: hideThead})}>\r\n            <tr>\r\n                {thead && thead.map((th, i) => <th key={i + 1}>{th}</th>)}\r\n            </tr>\r\n            </thead>\r\n            <tbody className={'table-body'}>\r\n            {children}\r\n            </tbody>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Table;","import React, {useEffect, useState,useRef} from 'react';\r\nimport styled,{css} from \"styled-components\";\r\n\r\nconst Styled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  h2{\r\n    padding-right: 25px;\r\n    font-size: 24px;\r\n    color: #000;\r\n    font-family: 'Gilroy-Bold', sans-serif;\r\n    margin-bottom: 0;\r\n  }\r\n  .line{\r\n    height: 1px;\r\n    background-color: #E5E5E5;\r\n    margin-top: 5px;\r\n    ${({w}) => w && `width: calc(100% - ${w}px - 10px);`}\r\n  }\r\n  \r\n  ${({sm}) => sm && css`\r\n    h2 {\r\n      font-size: 18px;\r\n    }\r\n  `}\r\n`;\r\nconst Title = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    const [width,setWidth] = useState(0);\r\n    useEffect(()=>{\r\n        setWidth(ref.current.clientWidth)\r\n    },[])\r\n    const ref = useRef(null)\r\n    return (\r\n        <Styled {...rest} w={width}>\r\n            <h2 ref={ref}>{children}</h2>\r\n            <div className=\"line\"></div>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, includes, isEqual} from \"lodash\"\r\nimport Title from \"../../../../components/ui/title\";\r\nimport Table from \"../../../../components/table\";\r\nimport {useGetAllQuery, usePostQuery, usePutQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {OverlayLoader} from \"../../../../components/loader\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport {Download} from \"react-feather\";\r\n\r\nconst StepFive = ({id = null, ...props}) => {\r\n\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const {mutate: createProduct, isLoading} = usePostQuery({listKeyId: KEYS.products})\r\n    const {mutate: updateProduct, isLoading: updateLoading} = usePutQuery({listKeyId: KEYS.products})\r\n\r\n    let {data: groups} = useGetAllQuery({key: KEYS.groupsofproducts, url: URLS.groupsofproducts})\r\n    groups = getSelectOptionsListFromData(get(groups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: subGroups} = useGetAllQuery({key: KEYS.subgroupsofproducts, url: URLS.subgroupsofproducts})\r\n    subGroups = getSelectOptionsListFromData(get(subGroups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: insurances} = useGetAllQuery({key: KEYS.typeofinsurer, url: URLS.typeofinsurer})\r\n    insurances = getSelectOptionsListFromData(get(insurances, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: status} = useGetAllQuery({key: KEYS.statusofproduct, url: URLS.statusofproduct})\r\n    status = getSelectOptionsListFromData(get(status, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: polices} = useGetAllQuery({key: KEYS.typeofpolice, url: URLS.typeofpolice})\r\n    polices = getSelectOptionsListFromData(get(polices, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: persons} = useGetAllQuery({key: KEYS.typeofpersons, url: URLS.typeofpersons})\r\n    persons = getSelectOptionsListFromData(get(persons, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: payments} = useGetAllQuery({key: KEYS.typeofpayment, url: URLS.typeofpayment})\r\n    payments = getSelectOptionsListFromData(get(payments, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: policyformats} = useGetAllQuery({key: KEYS.policyformats, url: URLS.policyformats})\r\n    policyformats = getSelectOptionsListFromData(get(policyformats, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: applicationformdocs} = useGetAllQuery({key: KEYS.applicationformdocs, url: URLS.applicationformdocs})\r\n    applicationformdocs = getSelectOptionsListFromData(get(applicationformdocs, `data.data`, []), '_id', 'url')\r\n\r\n    let {data: contractform} = useGetAllQuery({key: KEYS.contractform, url: URLS.contractform})\r\n    contractform = getSelectOptionsListFromData(get(contractform, `data.data`, []), '_id', 'url')\r\n\r\n    let {data: additionaldocuments} = useGetAllQuery({key: KEYS.additionaldocuments, url: URLS.additionaldocuments})\r\n    additionaldocuments = getSelectOptionsListFromData(get(additionaldocuments, `data.data`, []), '_id', 'url')\r\n\r\n\r\n    const findItem = (items = [], id, multiple = false) => {\r\n        if (!multiple) {\r\n            return items.find(item => isEqual(get(item, 'value'), id)) || {}\r\n        } else {\r\n            return items.filter(item => includes(id, get(item, 'value'))).map(({label}) => label).join(\" , \") || \"-\"\r\n        }\r\n    }\r\n\r\n    const nextStep = () => {\r\n        if (id) {\r\n            updateProduct({url: `${URLS.products}/${id}`, attributes: product}, {\r\n                onSuccess: () => {\r\n                    resetRiskList();\r\n                    resetProduct();\r\n                    props.nextStep();\r\n                },\r\n                onError: () => {\r\n\r\n                }\r\n            })\r\n        } else {\r\n            createProduct({url: URLS.products, attributes: product}, {\r\n                onSuccess: () => {\r\n                    resetRiskList();\r\n                    resetProduct();\r\n                    props.nextStep();\r\n                },\r\n                onError: () => {\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetRiskList();\r\n        resetProduct();\r\n        props.firstStep();\r\n    }\r\n\r\n    return (<>\r\n            {(isLoading || updateLoading) && <OverlayLoader/>}\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <StepNav step={5}/>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <Form formRequest={nextStep}>\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Title>Проверьте данные </Title>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={'mb-25'}>\r\n                            <Col xs={6}>\r\n                                <Table thead={['1', '2']}>\r\n                                    <tr>\r\n                                        <td>Категория</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(groups, get(product, 'groupofproductsId', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Под категория</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(subGroups, get(product, 'subgroupofproductsId', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Код назначения</td>\r\n                                        <td><strong>{get(product, 'codeproduct', '-')}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Работа по версии продукта (Версия продукта)</td>\r\n                                        <td><strong>{get(product, 'versionproduct', '-')}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Тип страховщика</td>\r\n                                        <td>\r\n                                            <strong>{findItem(persons, get(product, 'typeofpersones', []), true)}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Наименование продукта</td>\r\n                                        <td><strong>{get(product, 'productname', '-')}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Статус договора</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(status, get(product, 'statusofproducts', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Требует разрешения</td>\r\n                                        <td><strong>{get(product, 'isrequirepermission', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Тип полиса</td>\r\n                                        <td>\r\n                                            <strong>{findItem(polices, get(product, 'typeofpolice', null), true)}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешить несколько агентов</td>\r\n                                        <td><strong>{get(product, 'Isagreement', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированный превентивных мероприятий</td>\r\n                                        <td>\r\n                                            <strong>{get(product, 'Isfixedpreventivemeasures', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешить иностранную валюту</td>\r\n                                        <td><strong>{get(product, 'Isforeigncurrency', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешение изменение франшизы</td>\r\n                                        <td><strong>{get(product, 'Isfranchisechange', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Table thead={['1', '2']}>\r\n                                    <tr>\r\n                                        <td>Форма анкеты</td>\r\n\r\n                                        <td><a\r\n                                            href={get(findItem(applicationformdocs, get(product, 'applicationformId', null)), 'url', '#')}\r\n                                            target={'_blank'} download><Download color={'#13D6D1'}/></a></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Договор</td>\r\n                                        <td><a\r\n                                            href={get(findItem(contractform, get(product, 'contractform', null)), 'url', '#')}\r\n                                            target={'_blank'} download><Download color={'#13D6D1'}/></a></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Приложения</td>\r\n                                        <td><a\r\n                                            href={get(findItem(additionaldocuments, get(product, 'additionaldocuments', null)), 'url', '#')}\r\n                                            target={'_blank'} download><Download color={'#13D6D1'}/></a></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Формат полиса</td>\r\n                                        <td>\r\n                                            <strong>{get(findItem(policyformats, get(product, 'policyformatId', null)), 'label', '-')}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированного страхователя</td>\r\n                                        <td><strong>{get(product, 'Isfixedpolicyholder', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет выгодоприобретеля</td>\r\n                                        <td><strong>{get(product, 'Isbeneficiary', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированного выгодоприобретеля</td>\r\n                                        <td><strong>{get(product, 'Isfixedbeneficiary', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированную страховую сумму</td>\r\n                                        <td><strong>{get(product, 'Isfixedfee', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Разрешить полис без оплаты</td>\r\n                                        <td>\r\n                                            <strong>{get(product, 'Ispolicywithoutpayment', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Тип оплаты</td>\r\n                                        <td>\r\n                                            <strong>{findItem(payments, get(product, 'typeofpayment', null), true)}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет фиксированную комиссию</td>\r\n                                        <td><strong>{get(product, 'Isfixedfee', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет диапазон ставок</td>\r\n                                        <td><strong>{get(product, 'Isbettingrange', false) ? 'Да' : 'Нет'}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Имеет франшизу</td>\r\n                                        <td><strong>{get(product, 'Isfranchisechange', false) ? 'Да' : 'Нет'}</strong>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} className={'mt-32'}>\r\n                                <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                        back>Отменить</Button>\r\n                                <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                        outlined>Назад</Button>\r\n                                <Button type={'submit'} success>Подтвердить</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StepFive;","import React, {useState, useMemo, useCallback} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {every, get, includes, isEmpty, isEqual, isNil, setWith, some} from \"lodash\"\r\nimport Title from \"../../../../components/ui/title\";\r\nimport {useGetAllQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport Table from \"../../../../components/table\";\r\nimport Flex from \"../../../../components/flex\";\r\nimport {Trash2} from \"react-feather\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst StepFour = ({id = null, ...props}) => {\r\n    const [fields, setFields] = useState({riskOptions: []})\r\n    const [tarif, setTarif] = useState({\r\n        agentlist: null,\r\n        limitofagreement: 0,\r\n        Isagreement: false,\r\n        tariffperclasses: []\r\n    })\r\n    const [tariffList, setTariffList] = useState([])\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const nextStep = ({data}) => {\r\n        let {riskOptions, agentlist, Isagreement, limitofagreement, tariffperclasses, ...rest} = data;\r\n        setProduct({...rest});\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    let {data: agents} = useGetAllQuery({key: KEYS.agents, url: URLS.agents})\r\n    agents = getSelectOptionsListFromData(get(agents, `data.data`, []), '_id', 'email')\r\n\r\n    let {data: classes} = useGetAllQuery({key: KEYS.classes, url: URLS.classes})\r\n    const classOptions = getSelectOptionsListFromData(get(classes, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: risks} = useGetAllQuery({key: KEYS.risk, url: URLS.risk})\r\n    let risksOptions = getSelectOptionsListFromData(get(risks, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: franchises} = useGetAllQuery({key: KEYS.typeoffranchise, url: URLS.typeoffranchise})\r\n    franchises = getSelectOptionsListFromData(get(franchises, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: baseFranchises} = useGetAllQuery({key: KEYS.baseoffranchise, url: URLS.baseoffranchise})\r\n    baseFranchises = getSelectOptionsListFromData(get(baseFranchises, `data.data`, []), '_id', 'name')\r\n\r\n\r\n    const setFieldValue = (value, name = \"\") => {\r\n\r\n        if (includes('riskOptions', name) || includes(name, 'franchise')) {\r\n            setFields(prev => ({...prev, [name]: value}));\r\n        }\r\n\r\n        if (includes(['agentlist', 'Isagreement', 'limitofagreement'], name)) {\r\n            setTarif(prev => ({...prev, [name]: value}))\r\n        }\r\n\r\n        if (includes(name, 'tariffperclasses')) {\r\n            setTarif(({...setWith(tarif, name, value)}))\r\n        }\r\n    }\r\n\r\n\r\n    const findItem = (list = [], id = null) => {\r\n        return list.find(l => isEqual(get(l, \"_id\"), id))\r\n    }\r\n\r\n\r\n    const addTariff = () => {\r\n        let result = [];\r\n        let {tariff, ...rest} = tarif;\r\n        if (!isNil(get(tarif, \"agentlist\"))) {\r\n            console.log('tariftarif', rest)\r\n            const res = tariffList.filter(t => !isEqual(get(t, \"agentlist\"), get(rest, \"agentlist\")));\r\n            console.log('res', res)\r\n            result = [...res, rest]\r\n            console.log('result', result)\r\n            setTariffList(result)\r\n            setTarif({\r\n                ...tarif,\r\n                tariffperclasses: get(tarif,'tariffperclasses',[]).map(({classes,min,max}) => ({classes,min:0,max:0}))\r\n            })\r\n        } else {\r\n            toast.warn(\"Select all fields\")\r\n        }\r\n\r\n    }\r\n\r\n    const removeTariffFromList = (i) => {\r\n        setTariffList(prev => prev.filter((f, j) => !isEqual(i, j)))\r\n    }\r\n\r\n    // console.log('tariff', tariff)\r\n\r\n    console.log('tarif', tarif)\r\n    console.log('tariffList', tariffList)\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <StepNav step={4}/>\r\n            </Col>\r\n            <Col xs={12}>\r\n                <Form formRequest={nextStep} getValueFromField={setFieldValue}>\r\n                    <Row className={'mb-15'}>\r\n                        <Col xs={12}>\r\n                            <Title>Тарифы</Title>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={12}>\r\n                            <Row align={'flex-end'}>\r\n                                <Col xs={3}>\r\n                                    <Field label={'Агенты'}\r\n                                           type={'select'}\r\n                                           name={'agentlist'}\r\n                                           options={agents}\r\n                                           defaultValue={get(product, 'agentlist')}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field label={'Разрешить заключение договоров'}\r\n                                           type={'switch'}\r\n                                           name={'Isagreement'}\r\n                                           defaultValue={get(product, 'Isagreement', false)}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field label={'Лимит ответственности'}\r\n                                           type={'number-format-input'}\r\n                                           name={'limitofagreement'}\r\n                                           defaultValue={get(product, 'limitofagreement', 0)}\r\n                                           property={{placeholder: 'Введите значение'}}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={3} className={'text-right'}>\r\n                                    <Button onClick={addTariff} type={'button'} className={'mb-25'}>Применить</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        {get(product, 'riskId', []).length > 0 && <Col xs={12} className={'mb-25'}>\r\n                            <hr/>\r\n                            <Table hideThead={false}\r\n                                   thead={['Класс', 'минимальную и  ставку по классу ', 'максимальную ставку по классу',]}>\r\n                                {get(product, 'riskId', []).map((item, i) => <tr key={i + 1}>\r\n                                    <td>\r\n                                        <Field\r\n                                            name={`tariffperclasses[${i}].classes`}\r\n                                            type={'select'}\r\n                                            property={{\r\n                                                hideLabel: true,\r\n                                                bgColor: get(findItem(get(classes, 'data.data'), get(item, \"_id\")), 'color')\r\n                                            }}\r\n                                            options={classOptions}\r\n                                            defaultValue={get(findItem(get(classes, 'data.data'), get(item, \"classeId\")), '_id')}\r\n                                            isDisabled={true}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Flex justify={'center'}>\r\n                                            <Field\r\n                                                name={`tariffperclasses[${i}].min`}\r\n                                                type={'number-format-input'}\r\n                                                property={{hideLabel: true, placeholder: 'Мин', suffix: ' %'}}\r\n                                                defaultValue={get(product, `tariffperclasses[${i}].min`, 0)}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Flex justify={'flex-end'}>\r\n                                            <Field\r\n                                                name={`tariffperclasses[${i}].max`}\r\n                                                type={'number-format-input'}\r\n                                                property={{hideLabel: true, placeholder: 'Макс', suffix: ' %'}}\r\n                                                defaultValue={get(product, `tariffperclasses[${i}].max`, 0)}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                </tr>)}\r\n                            </Table>\r\n                        </Col>}\r\n                        {tariffList.length > 0 && <Col xs={12} className={'horizontal-scroll'}>\r\n                            <hr/>\r\n                            <Table hideThead={false}\r\n                                   thead={['Агент', 'Class', 'Разрешить заключение договоров', 'Лимит ответственности', 'Max', 'Min', 'Delete']}>\r\n                                {tariffList.map((item, i) => <tr key={i + 1}>\r\n                                    <td>\r\n                                        <Field options={agents} type={'select'} name={`tariff[${i}].agentlist`}\r\n                                               defaultValue={get(item, 'agentlist')} property={{hideLabel: true}}\r\n                                               isDisabled={true}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            get(item, 'tariffperclasses', []).map((c, j) => <Field key={j}\r\n                                                                                                   className={'mb-15'}\r\n                                                                                                   name={`tariff[${i}].tariffperclasses[${j}].classes`}\r\n                                                                                                   type={'select'}\r\n                                                                                                   property={{\r\n                                                                                                       hideLabel: true,\r\n                                                                                                       bgColor: get(findItem(get(classes, 'data.data'), get(c, \"_id\")), 'color')\r\n                                                                                                   }}\r\n                                                                                                   options={classOptions}\r\n                                                                                                   defaultValue={get(findItem(get(classes, 'data.data'), get(c, \"classes\")), '_id')}\r\n                                                                                                   isDisabled={true}\r\n                                            />)\r\n\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        <Field property={{hideLabel: true}}\r\n                                               type={'switch'}\r\n                                               name={`tariff[${i}].Isagreement`}\r\n                                               defaultValue={get(item, 'Isagreement', false)}\r\n                                               disabled={true}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Field\r\n                                            type={'number-format-input'}\r\n                                            name={`tariff[${i}].limitofagreement`}\r\n                                            defaultValue={get(item, 'limitofagreement', 0)}\r\n                                            property={{\r\n                                                disabled: true,\r\n                                                placeholder: 'Введите значение',\r\n                                                hideLabel: true\r\n                                            }}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        {get(item, `tariffperclasses`, []).map((c, j) => <Field key={j}\r\n                                                                                                className={'mb-15'}\r\n                                                                                                type={'number-format-input'}\r\n                                                                                                name={`tariff[${i}].tariffperclasses[${j}].max`}\r\n                                                                                                defaultValue={get(c, 'max', 0)}\r\n                                                                                                property={{\r\n                                                                                                    disabled: true,\r\n                                                                                                    placeholder: 'Введите значение',\r\n                                                                                                    hideLabel: true\r\n                                                                                                }}\r\n                                        />)}\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        {get(item, `tariffperclasses`, []).map((c, j) => <Field key={j}\r\n                                                                                                className={'mb-15'}\r\n                                                                                                type={'number-format-input'}\r\n                                                                                                name={`tariff[${i}].tariffperclasses[${j}].min`}\r\n                                                                                                defaultValue={get(c, 'min', 0)}\r\n                                                                                                property={{\r\n                                                                                                    disabled: true,\r\n                                                                                                    placeholder: 'Введите значение',\r\n                                                                                                    hideLabel: true\r\n                                                                                                }}\r\n                                        />)}\r\n\r\n                                    </td>\r\n                                    <td className={'cursor-pointer'}\r\n                                        onClick={() => removeTariffFromList(i)}><Trash2\r\n                                        color={'#dc2626'}/></td>\r\n                                </tr>)}\r\n                            </Table>\r\n                        </Col>}\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={12}><Title>Франшиза</Title></Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        {get(product, 'riskId', []).length > 0 && <Col xs={12} className={'horizontal-scroll'}>\r\n                            <hr/>\r\n                            <Table hideThead={false}\r\n                                   thead={['Страховой риск', 'Имеет франшизу', 'Строго фиксирована', 'Введите фиксированное значение', 'Укажите тип франшизы', 'Укажите базу франшизы', 'Франшиза']}>\r\n                                {get(product, 'riskId', []).map((item, i) => <tr key={i + 1}>\r\n                                    <td>\r\n                                        <Field\r\n                                            className={'w-250'}\r\n                                            name={`franchise[${i}].risk`}\r\n                                            type={'select'}\r\n                                            property={{hideLabel: true}}\r\n                                            options={risksOptions}\r\n                                            defaultValue={get(findItem(get(risks, 'data.data'), get(item, 'risk')), '_id')}\r\n                                            isDisabled={true}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Flex justify={'center'}>\r\n                                            <Field\r\n                                                type={'switch'}\r\n                                                name={`franchise[${i}].Isfranchise`}\r\n                                                defaultValue={get(product, `franchise[${i}].Isfranchise`, false)}\r\n                                                property={{hideLabel: true}}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Flex justify={'center'}>\r\n                                            <Field\r\n                                                type={'switch'}\r\n                                                name={`franchise[${i}].Isfixedfranchise`}\r\n                                                defaultValue={get(product, `franchise[${i}].Isfixedfranchise`, false)}\r\n                                                property={{hideLabel: true}}\r\n                                                disabled={!!!(get(fields, `franchise[${i}].Isfranchise`))}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Flex justify={'center'}>\r\n                                            <Field\r\n                                                name={`franchise[${i}].fixedvalue`}\r\n                                                type={'number-format-input'}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: 'ввод значения',\r\n                                                    disabled: !!!(get(fields, `franchise[${i}].Isfixedfranchise`))\r\n                                                }}\r\n                                                defaultValue={get(product, `franchise[${i}].fixedvalue`, 0)}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                    <td className={'w-250'}>\r\n                                        <Flex justify={'center'}>\r\n                                            <Field\r\n                                                className={'w-250'}\r\n                                                name={`franchise[${i}].typeoffranchise`}\r\n                                                type={'select'}\r\n                                                property={{hideLabel: true}}\r\n                                                options={franchises}\r\n                                                isDisabled={!!!(get(fields, `franchise[${i}].Isfranchise`))}\r\n                                                defaultValue={get(product, `franchise[${i}].typeoffranchise`)}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                    <td className={'w-250'}>\r\n                                        <Flex justify={'center'}>\r\n                                            <Field\r\n                                                className={'w-250'}\r\n                                                name={`franchise[${i}].baseoffranchise`}\r\n                                                type={'select'}\r\n                                                property={{hideLabel: true}}\r\n                                                options={baseFranchises}\r\n                                                isDisabled={!!!(get(fields, `franchise[${i}].Isfranchise`))}\r\n                                                defaultValue={get(product, `franchise[${i}].baseoffranchise`)}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <Flex justify={'flex-end'}>\r\n                                            <Field\r\n\r\n                                                name={`franchise[${i}].franchise`}\r\n                                                type={'input'}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: 'Введите значение',\r\n                                                    disabled: !(get(fields, `franchise[${i}].Isfranchise`) && !get(fields, `franchise[${i}].Isfixedfranchise`))\r\n                                                }}\r\n                                                defaultValue={get(product, `franchise[${i}].franchise`, '')}\r\n                                            />\r\n                                        </Flex>\r\n                                    </td>\r\n                                </tr>)}\r\n                            </Table>\r\n                        </Col>}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mt-32'}>\r\n                            <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                    back>Отменить</Button>\r\n                            <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                    outlined>Назад</Button>\r\n                            <Button type={'submit'} success>Продолжить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default StepFour;","import React, {useState, memo, useEffect} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, includes, some, values, isEmpty, isEqual, head} from \"lodash\"\r\nimport {useGetAllQuery, useGetOneQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport Title from \"../../../../components/ui/title\";\r\nimport {toast} from \"react-toastify\";\r\nimport Table from \"../../../../components/table\";\r\nimport {Trash2} from \"react-feather\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst StepOne = ({id = null, ...props}) => {\r\n    const {t} = useTranslation()\r\n\r\n    const [riskItem, setRiskItem] = useState({});\r\n    const [productGroupId, setProductGroupId] = useState(null);\r\n    const [riskTypeId, setRiskTypeId] = useState(null);\r\n\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const addRiskList = useSettingsStore(state => get(state, 'addRiskList', () => {\r\n    }))\r\n    const removeRiskList = useSettingsStore(state => get(state, 'removeRiskList', () => {\r\n    }))\r\n    const riskList = useSettingsStore(state => get(state, 'riskList', []))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    useEffect(() => {\r\n        if (id && isEmpty(riskItem) && !isEmpty(get(product, 'riskId', []))) {\r\n            addRiskList(...get(product, 'riskId', []).map(({classeId, risk, riskgroup}) => ({\r\n                risk: get(risk, '_id'),\r\n                riskgroup: get(riskgroup, '_id'),\r\n                classeId: get(classeId, '_id')\r\n            })))\r\n        }\r\n    }, [product])\r\n\r\n    const nextStep = ({data}) => {\r\n        const {classeId, risk, riskgroup, ...rest} = data\r\n        setProduct(rest);\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    let {data: groups} = useGetAllQuery({key: KEYS.groupsofproducts, url: URLS.groupsofproducts})\r\n    groups = getSelectOptionsListFromData(get(groups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: subGroups} = useGetOneQuery({\r\n        id: productGroupId,\r\n        key: KEYS.subgroupsofproductsFilter,\r\n        url: URLS.subgroupsofproductsFilter,\r\n        enabled: !!productGroupId\r\n    })\r\n    subGroups = getSelectOptionsListFromData(get(subGroups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: insurances} = useGetAllQuery({key: KEYS.typeofinsurer, url: URLS.typeofinsurer})\r\n    insurances = getSelectOptionsListFromData(get(insurances, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: sectors} = useGetAllQuery({key: KEYS.typeofsector, url: URLS.typeofsector})\r\n    sectors = getSelectOptionsListFromData(get(sectors, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: persons} = useGetAllQuery({key: KEYS.typeofpersons, url: URLS.typeofpersons})\r\n    persons = getSelectOptionsListFromData(get(persons, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: status} = useGetAllQuery({key: KEYS.statusofproduct, url: URLS.statusofproduct})\r\n    status = getSelectOptionsListFromData(get(status, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: riskGroups} = useGetAllQuery({key: KEYS.typeofrisk, url: URLS.typeofrisk})\r\n    riskGroups = getSelectOptionsListFromData(get(riskGroups, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: risksList} = useGetAllQuery({key: KEYS.risk, url: URLS.risk})\r\n    risksList = getSelectOptionsListFromData(get(risksList, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: risksData} = useGetOneQuery({\r\n        id: riskTypeId,\r\n        key: KEYS.riskFilter,\r\n        url: URLS.riskFilter,\r\n        enabled: !!riskTypeId\r\n    })\r\n    let risks = getSelectOptionsListFromData(get(risksData, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: insuranceClassesList} = useGetAllQuery({key: KEYS.classes, url: URLS.classes})\r\n    let insuranceClasses = getSelectOptionsListFromData(get(insuranceClassesList, `data.data`, []), '_id', 'name')\r\n\r\n    const setRisk = (value, name) => {\r\n        if (includes(['riskgroup', 'classeId', 'risk'], name)) {\r\n            setRiskItem(prev => ({...prev, [name]: value}))\r\n        }\r\n        if (isEqual(name, 'groupofproductsId')) {\r\n            setProductGroupId(value)\r\n        }\r\n        if (isEqual(name, 'riskgroup')) {\r\n            setRiskTypeId(value)\r\n        }\r\n    }\r\n\r\n    const addRiskItem = () => {\r\n        if (some(values(riskItem), val => isEmpty(val))) {\r\n            toast.warn('You have to select all fields')\r\n        } else {\r\n            addRiskList({...riskItem, id: riskList.length + 1})\r\n        }\r\n        setRiskItem({riskgroup: '', classeId: '', risk: ''})\r\n    }\r\n\r\n\r\n    const findItem = (list = [], id = null) => {\r\n        return list.find(l => isEqual(get(l, \"_id\"), id))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <StepNav step={1}/>\r\n            </Col>\r\n            <Col xs={12}>\r\n                <Form formRequest={nextStep} getValueFromField={setRisk}>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <Field label={t('Выберите категорию')} options={groups} type={'select'}\r\n                                   name={'groupofproductsId'} params={{required: true}}\r\n                                   property={{hasRequiredLabel: true}}\r\n                                   defaultValue={get(product, 'groupofproductsId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field label={t('Выберите подкатегорию ')} options={subGroups} type={'select'}\r\n                                   name={'subgroupofproductsId'} params={{required: true}}\r\n                                   property={{hasRequiredLabel: true}}\r\n                                   defaultValue={get(product, 'subgroupofproductsId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field label={t('Наименование продукта')} type={'input'} name={'productname'}\r\n                                   params={{required: true}}\r\n                                   property={{hasRequiredLabel: true, placeholder: t('Введите значение')}}\r\n                                   defaultValue={get(product, 'productname')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field label={t('Код назначения')}\r\n                                   type={'input'}\r\n                                   name={'codeproduct'}\r\n                                   property={{placeholder: t('Введите значение')}}\r\n                                   defaultValue={get(product, 'codeproduct', '')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                label={t('Работа по версии продукта (Версия продукта)')}\r\n                                type={'input'}\r\n                                name={'versionproduct'}\r\n                                property={{placeholder: t('Введите значение')}}\r\n                                defaultValue={get(product, 'versionproduct', '')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                options={insurances}\r\n                                label={t('Форма страхования')}\r\n                                type={'select'}\r\n                                name={'typeofinsurerId'}\r\n                                defaultValue={get(product, 'typeofinsurerId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                options={sectors}\r\n                                label={t('Указать сектор')}\r\n                                type={'select'}\r\n                                name={'typeofsectorId'}\r\n                                defaultValue={get(product, 'typeofsectorId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field\r\n                                label={t('Требуется разрешение')}\r\n                                type={'switch'}\r\n                                name={'isrequirepermission'}\r\n                                defaultValue={get(product, 'isrequirepermission', false)}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={9}>\r\n                            <Field\r\n                                options={persons}\r\n                                label={t('Выбрать тип страховщика')}\r\n                                type={'checkbox'}\r\n                                name={'typeofpersones'}\r\n                                defaultValue={get(product, 'typeofpersones', [])}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Field options={status}\r\n                                   label={t('Статус продукта')}\r\n                                   type={'switch'}\r\n                                   name={'statusofproducts'} defaultValue={get(product, 'statusofproducts', false)}\r\n                                   params={{required: true}}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mb-15'}>\r\n                            <Title>{t(\"Добавить риски\")}</Title>\r\n                        </Col>\r\n                        <Col xs={12} className={'mb-15'}>\r\n                            <Row>\r\n                                <Col xs={10}>\r\n                                    <Row align={'center'}>\r\n                                        <Col xs={4}>\r\n                                            <Field\r\n                                                options={riskGroups}\r\n                                                type={'select'}\r\n                                                name={'riskgroup'}\r\n                                                defaultValue={get(riskItem, 'riskgroup')}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: t('Выберите группу  риска')\r\n                                                }}/>\r\n                                        </Col>\r\n                                        <Col xs={4}>\r\n                                            <Field\r\n                                                options={risks}\r\n                                                type={'select'}\r\n                                                name={'risk'}\r\n                                                defaultValue={get(riskItem, 'risk')}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: t('Выберите риск')\r\n                                                }}/>\r\n                                        </Col>\r\n                                        <Col xs={4}>\r\n                                            <Field\r\n                                                options={insuranceClasses.filter(classItem => includes(get(findItem(\r\n                                                    get(risksData, 'data.data', []), get(riskItem, 'risk')\r\n                                                ), 'classesId', []), get(classItem, 'value')))}\r\n                                                type={'select'}\r\n                                                name={'classeId'}\r\n                                                defaultValue={get(head(insuranceClasses.filter(classItem => includes(get(findItem(\r\n                                                    get(risksData, 'data.data', []), get(riskItem, 'risk')\r\n                                                ), 'classesId', []), get(classItem, 'value')))), 'value')}\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    placeholder: t('Класс страхования')\r\n                                                }}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xs={2} className={'text-right'}>\r\n                                    <Button onClick={addRiskItem} type={'button'}>{t(\"Добавить\")}</Button>\r\n                                </Col>\r\n                                {riskList.length > 0 && <Col xs={12}>\r\n                                    <hr/>\r\n                                    <Table hideThead={false}\r\n                                           thead={[t('Тип риска'), t('Риск'), t('Класс страхования'), t('Delete')]}>\r\n                                        {riskList.map((item, i) => <tr key={i + 1}>\r\n                                            <td>\r\n                                                <Field\r\n                                                    type={'select'}\r\n                                                    options={riskGroups} name={`riskId[${i}.riskgroup`}\r\n                                                    isDisabled={true}\r\n                                                    defaultValue={get(item, 'riskgroup')}\r\n                                                    property={{hideLabel: true}}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Field\r\n                                                    type={'select'}\r\n                                                    options={risksList}\r\n                                                    name={`riskId[${i}.risk`}\r\n                                                    isDisabled={true}\r\n                                                    defaultValue={get(item, 'risk')}\r\n                                                    property={{hideLabel: true}}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Field\r\n                                                    type={'select'}\r\n                                                    options={insuranceClasses}\r\n                                                    name={`riskId[${i}.classeId`}\r\n                                                    isDisabled={true}\r\n                                                    defaultValue={get(item, 'classeId')}\r\n                                                    property={{\r\n                                                        hideLabel: true,\r\n                                                        bgColor: get(findItem(get(insuranceClassesList, 'data.data'), get(item, 'classeId')), 'color')\r\n                                                    }}\r\n                                                />\r\n                                            </td>\r\n                                            <td className={'cursor-pointer'}\r\n                                                onClick={() => removeRiskList(get(item, 'id', null))}><Trash2\r\n                                                color={'#dc2626'}/></td>\r\n                                        </tr>)}\r\n                                    </Table>\r\n                                </Col>}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mt-32'}>\r\n                            <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                    back>{t(\"Отменить\")}</Button>\r\n                            <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                    outlined>{t(\"Назад\")}</Button>\r\n                            <Button type={'submit'} success>{t(\"Продолжить\")}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default memo(StepOne);","import React from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport styled from \"styled-components\";\r\nimport checkImg from \"../../../../assets/images/check.png\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Styled = styled.div`\r\n  .result {\r\n    padding: 30px 50px;\r\n    border: 1px solid #ADADAD;\r\n    -webkit-border-radius: 15px;\r\n    -moz-border-radius: 15px;\r\n    border-radius: 15px;\r\n    margin-top: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    p{\r\n      font-size: 32px;\r\n    }\r\n   \r\n  }\r\n  a{\r\n    margin-top: 25px;\r\n    display: inline-block;\r\n    color: #1D283A;\r\n    transition: 0.3s ease;\r\n    &:hover{\r\n      color: #13D6D1;\r\n    }\r\n  }\r\n`\r\n\r\nconst StepSix = ({...rest}) => {\r\n\r\n    return (<Styled {...rest}>\r\n        <Row justify={'center'}>\r\n            <Col xs={12}>\r\n                <StepNav step={6}/>\r\n            </Col>\r\n            <Col xs={6}>\r\n                <div className=\"result\">\r\n                    <img className={'img-fluid'} src={checkImg} alt=\"check\"/>\r\n                    <p>Продукт успешно добавлен!</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Link to={'/dashboard'}>Перейти на главную страницу</Link>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </Styled>);\r\n};\r\n\r\nexport default StepSix;","import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, head, includes} from \"lodash\"\r\nimport {useGetAllQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\n\r\nconst StepThree = ({...props}) => {\r\n    const [show, setShow] = useState({\r\n        Isfixedpolicyholder: false,\r\n        Isfixedbeneficiary: false,\r\n        Isfixedpremium: false,\r\n        Isfixedrate: false,\r\n        Isfixedsuminsured: false,\r\n        Isfixedfee: false,\r\n        Isfixedpreventivemeasures: false\r\n    })\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const nextStep = ({data}) => {\r\n        setProduct(data);\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    let {data: agents} = useGetAllQuery({key: KEYS.agents, url: URLS.agents})\r\n    agents = getSelectOptionsListFromData(get(agents, `data.data`, []), '_id', 'email')\r\n\r\n    let {data: policyformats} = useGetAllQuery({key: KEYS.policyformats, url: URLS.policyformats})\r\n    policyformats = getSelectOptionsListFromData(get(policyformats, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: refunds} = useGetAllQuery({key: KEYS.typeofrefund, url: URLS.typeofrefund})\r\n    refunds = getSelectOptionsListFromData(get(refunds, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: claimSettlements} = useGetAllQuery({key: KEYS.typeofclaimsettlement, url: URLS.typeofclaimsettlement})\r\n    claimSettlements = getSelectOptionsListFromData(get(claimSettlements, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: payments} = useGetAllQuery({key: KEYS.typeofpayment, url: URLS.typeofpayment})\r\n    payments = getSelectOptionsListFromData(get(payments, `data.data`, []), '_id', 'name')\r\n\r\n    let {data: polices} = useGetAllQuery({key: KEYS.typeofpolice, url: URLS.typeofpolice})\r\n    polices = getSelectOptionsListFromData(get(polices, `data.data`, []), '_id', 'name')\r\n\r\n\r\n    const showField = (value, name) => {\r\n        if (includes(['Isfixedpolicyholder', 'Isfixedbeneficiary', 'Isfixedpremium', 'Isfixedrate', 'Isfixedsuminsured', 'Isfixedfee', 'Isfixedpreventivemeasures'], name)) {\r\n            setShow(prev => ({...prev, [name]: value}))\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <StepNav step={3}/>\r\n            </Col>\r\n            <Col xs={12}>\r\n                <Form formRequest={nextStep} getValueFromField={showField}>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированного страхователя'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedpolicyholder'}\r\n                                   defaultValue={get(product,'Isfixedpolicyholder',false)}\r\n                                   property={{hasRequiredLabel: true}}\r\n                            />\r\n                            {get(show, 'Isfixedpolicyholder', false) &&\r\n                                <Field label={'Имеет фиксированного страхователя'}\r\n                                       type={'select'}\r\n                                       name={'fixedpolicyholder'}\r\n                                       property={{hideLabel: true}}\r\n                                       options={agents}\r\n                                       defaultValue={get(product,'fixedpolicyholder')}\r\n                                />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет  выгодоприобретеля'}\r\n                                   type={'switch'}\r\n                                   name={'Isbeneficiary'}\r\n                                   defaultValue={get(product,'Isbeneficiary',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет  фиксированного выгодоприобретеля'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedbeneficiary'}\r\n                                   defaultValue={get(product,'Isfixedbeneficiary',false)}\r\n\r\n                            />\r\n                            {get(show, 'Isfixedbeneficiary', false) &&\r\n                                <Field label={'Имеет фиксированного страхователя'}\r\n                                       type={'select'}\r\n                                       name={'fixedbeneficiary'}\r\n                                       property={{hideLabel: true}}\r\n                                       options={agents}\r\n                                       defaultValue={get(product,'fixedbeneficiary')}\r\n                                />}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную премию'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedpremium'}\r\n                                   defaultValue={get(product,'Isfixedpremium',false)}\r\n                            />\r\n                            {get(show, 'Isfixedpremium', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedpremium'}\r\n                                property={{hideLabel: true}}\r\n                                defaultValue={get(product,'fixedpremium',0)}\r\n                            />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет диапазон ставок'}\r\n                                   type={'switch'}\r\n                                   name={'Isbettingrange'}\r\n                                   defaultValue={get(product,'Isbettingrange',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную ставку'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedrate'}\r\n                                   defaultValue={get(product,'Isfixedrate',false)}\r\n                            />\r\n                            {get(show, 'Isfixedrate', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedrate'}\r\n                                property={{hideLabel: true, suffix: \" %\"}}\r\n                                defaultValue={get(product,'fixedrate',0)}\r\n                            />}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную страховую сумму'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedsuminsured'}\r\n                                   defaultValue={get(product,'Isfixedsuminsured',false)}\r\n                            />\r\n                            {get(show, 'Isfixedsuminsured', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedsuminsured'}\r\n                                property={{hideLabel: true}}\r\n                                defaultValue={get(product,'fixedsuminsured',0)}\r\n                            />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированную комиссию'}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedfee'}\r\n                                   defaultValue={get(product,'Isfixedfee',false)}\r\n                            />\r\n                            {get(show, 'Isfixedfee', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedfee'}\r\n                                property={{hideLabel: true, suffix: \" %\"}}\r\n                                defaultValue={get(product,'fixedfee',0)}\r\n                            />}\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Имеет фиксированный превентивных мероприятий '}\r\n                                   type={'switch'}\r\n                                   name={'Isfixedpreventivemeasures'}\r\n                                   defaultValue={get(product,'Isfixedpreventivemeasures',false)}\r\n                            />\r\n                            {get(show, 'Isfixedpreventivemeasures', false) && <Field\r\n                                type={'number-format-input'}\r\n                                name={'fixedpreventivemeasures'}\r\n                                property={{hideLabel: true, suffix: \" %\"}}\r\n                                defaultValue={get(product,'fixedpreventivemeasures',0)}\r\n                            />}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешить полис без оплаты'}\r\n                                   type={'switch'}\r\n                                   name={'Ispolicywithoutpayment'}\r\n                                   defaultValue={get(product,'Ispolicywithoutpayment',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешить несколько агентов'}\r\n                                   type={'switch'}\r\n                                   name={'Ismultipleagents'}\r\n                                   defaultValue={get(product,'Ismultipleagents',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешить изменение франшизы'}\r\n                                   type={'switch'}\r\n                                   name={'Isfranchisechange'}\r\n                                   defaultValue={get(product,'Isfranchisechange',false)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Разрешать иностранную валюту'}\r\n                                   type={'switch'}\r\n                                   name={'Isforeigncurrency'}\r\n                                   defaultValue={get(product,'Isforeigncurrency',false)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Форматы полисов'}\r\n                                   type={'select'}\r\n                                   name={'policyformatId'}\r\n                                   options={policyformats}\r\n                                   defaultValue={get(product,'policyformatId')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field label={'Вид урегулирования претензии'}\r\n                                   type={'select'}\r\n                                   name={'typeofclaimsettlement'}\r\n                                   options={claimSettlements}\r\n                                   defaultValue={get(product,'typeofclaimsettlement')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field label={'Тип возмещения'}\r\n                                   type={'radio-group'}\r\n                                   name={'typeofrefund'}\r\n                                   options={refunds}\r\n                                   defaultValue={get(product,'typeofrefund',get(head(refunds),'value'))}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                options={payments}\r\n                                label={'Тип оплаты'}\r\n                                type={'checkbox'}\r\n                                name={'typeofpayment'}\r\n                                defaultValue={get(product,'typeofpayment')}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                options={polices}\r\n                                label={'Тип полиса'}\r\n                                type={'checkbox'}\r\n                                name={'typeofpolice'}\r\n                                defaultValue={get(product,'typeofpolice')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={'mb-25'}>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'Укажите минимальный срок страхования в днях'}\r\n                                type={'number-format-input'}\r\n                                name={'minimumterminsurance'}\r\n                                defaultValue={get(product,'minimumterminsurance',0)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4}>\r\n                            <Field\r\n                                label={'Укажите максимальный срок страхования в днях'}\r\n                                type={'number-format-input'}\r\n                                name={'maxterminsurance'}\r\n                                defaultValue={get(product,'maxterminsurance',0)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className={'mt-32'}>\r\n                            <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                    back>Отменить</Button>\r\n                            <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                    outlined>Назад</Button>\r\n                            <Button type={'submit'} success>Продолжить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default StepThree;","import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport StepNav from \"../../../../components/step-nav\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport {useSettingsStore} from \"../../../../store\";\r\nimport {get, includes} from \"lodash\"\r\nimport Flex from \"../../../../components/flex\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {useDeleteQuery, useGetAllQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport styled from \"styled-components\";\r\nimport {Download, Trash2} from \"react-feather\";\r\n\r\nconst Styled = styled.div`\r\n  .doc-files {\r\n    background: #FFFFFF;\r\n    border: 1px solid #9A9A9A;\r\n    border-radius: 10px;\r\n    padding: 30px;\r\n    max-width: 400px;\r\n    li{\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin-bottom: 15px;\r\n      &:last-child{\r\n        margin-bottom: 0;\r\n      }\r\n      span{\r\n        font-family: 'Gilroy-Bold', sans-serif;\r\n      }\r\n      a{\r\n      margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst StepTwo = ({...props}) => {\r\n\r\n    const [show, setShow] = useState({isapplicationform: false, iscontractform: false, Isadditionaldocuments: false})\r\n\r\n    const setProduct = useSettingsStore(state => get(state, 'setProduct', () => {\r\n    }))\r\n\r\n    const resetProduct = useSettingsStore(state => get(state, 'resetProduct', () => {\r\n    }))\r\n    const resetRiskList = useSettingsStore(state => get(state, 'resetRiskList', []))\r\n\r\n    const product = useSettingsStore(state => get(state, 'product', {}))\r\n\r\n    const {data:applicationformdocs} = useGetAllQuery({key: KEYS.applicationformdocs, url: URLS.applicationformdocs})\r\n    const {data:contractform} = useGetAllQuery({key: KEYS.contractform, url: URLS.contractform})\r\n    const {data:additionaldocuments} = useGetAllQuery({key: KEYS.additionaldocuments, url: URLS.additionaldocuments})\r\n    const {mutate: deleteApplicationFormDocs} = useDeleteQuery({listKeyId: KEYS.applicationformdocs})\r\n    const {mutate: deleteContactForm} = useDeleteQuery({listKeyId: KEYS.contractform})\r\n    const {mutate: deleteAdditionalDocs} = useDeleteQuery({listKeyId: KEYS.additionaldocuments})\r\n\r\n\r\n    const nextStep = ({data}) => {\r\n        setProduct(data);\r\n        props.nextStep();\r\n    }\r\n\r\n    const prevStep = () => {\r\n        props.previousStep();\r\n    }\r\n\r\n    const reset = () => {\r\n        resetProduct();\r\n        resetRiskList();\r\n        props.firstStep();\r\n    }\r\n\r\n    const showFile = (value, name) => {\r\n        if (includes(['isapplicationform', 'iscontractform', 'Isadditionaldocuments'], name)) {\r\n            setShow(prev => ({...prev, [name]: value}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Styled>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <StepNav step={2}/>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <Form formRequest={nextStep} getValueFromField={showFile}>\r\n                        <Row className={'mb-25'}>\r\n                            <Col xs={4}>\r\n                                <Flex align={'flex-end'}>\r\n                                    <Field label={'Имеет форму анкеты заявления'} type={'switch'}\r\n                                           name={'isapplicationform'}\r\n                                            defaultValue={get(product,'isapplicationform',false)}\r\n\r\n                                    />\r\n                                    {get(show, 'isapplicationform', false) &&\r\n                                        <Field className={'ml-50'} label={'Имеет форму анкеты заявления'}\r\n                                               type={'dropzone'}\r\n                                               name={'applicationformId'}\r\n                                               property={{hideLabel: true, url: URLS.applicationformdocs,key:KEYS.applicationformdocs}}/>}\r\n                                </Flex>\r\n                                {get(show, 'isapplicationform', false) && <ul className={'doc-files'}>\r\n                                    {get(applicationformdocs,'data.data',false) && get(applicationformdocs,'data.data',[]).map(file =><li key={get(file,'_id')}>\r\n                                        <span>{get(file,'name','-')}</span> <div><a href={get(file,'url','#')} target={'_blank'} download><Download color={'#13D6D1'} /></a>\r\n                                        <Trash2 onClick={()=>deleteApplicationFormDocs({url: `${URLS.applicationformdocs}/${get(file,'_id',null)}`})} className={'cursor-pointer '} color={'#dc2626'} /></div>\r\n                                    </li>)}\r\n                                </ul>}\r\n\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Flex align={'flex-end'}>\r\n                                    <Field label={'Имеет конракт'} type={'switch'} name={'iscontractform'}\r\n                                           defaultValue={get(product,'iscontractform',false)} />\r\n                                    {get(show, 'iscontractform', false) &&\r\n                                        <Field className={'ml-50'} label={'Имеет форму анкеты заявления'}\r\n                                               type={'dropzone'}\r\n                                               name={'contractform'}\r\n                                               property={{hideLabel: true, url: URLS.contractform,key:KEYS.contractform}}/>}\r\n                                </Flex>\r\n                                {get(show, 'iscontractform', false) && <ul className={'doc-files'}>\r\n                                    {get(contractform,'data.data',false) && get(contractform,'data.data',[]).map(file =><li key={get(file,'_id')}>\r\n                                        <span>{get(file,'name','-')}</span> <div><a href={get(file,'url','#')} target={'_blank'} download><Download color={'#13D6D1'} /></a>\r\n                                        <Trash2 onClick={()=>deleteContactForm({url: `${URLS.contractform}/${get(file,'_id',null)}`})} className={'cursor-pointer '} color={'#dc2626'} /></div>\r\n                                    </li>)}\r\n                                </ul>}\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Flex align={'flex-end'}>\r\n                                    <Field label={'Имеет приложение'} type={'switch'} name={'Isadditionaldocuments'}\r\n                                           defaultValue={get(product,'Isadditionaldocuments',false)} />\r\n                                    {get(show, 'Isadditionaldocuments', false) &&\r\n                                        <Field className={'ml-50'} label={'Имеет форму анкеты заявления'}\r\n                                               type={'dropzone'}\r\n                                               name={'additionaldocuments'}\r\n                                               property={{hideLabel: true, url: URLS.additionaldocuments,key:KEYS.additionaldocuments}}/>}\r\n                                </Flex>\r\n                                {get(show, 'Isadditionaldocuments', false) && <ul className={'doc-files'}>\r\n                                    {get(additionaldocuments,'data.data',false) && get(additionaldocuments,'data.data',[]).map(file =><li key={get(file,'_id')}>\r\n                                        <span>{get(file,'name','-')}</span> <div><a href={get(file,'url','#')} target={'_blank'} download><Download color={'#13D6D1'} /></a>\r\n                                        <Trash2 onClick={()=>deleteAdditionalDocs({url: `${URLS.additionaldocuments}/${get(file,'_id',null)}`})} className={'cursor-pointer '} color={'#dc2626'} /></div>\r\n                                    </li>)}\r\n                                </ul>}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} className={'mt-32'}>\r\n                                <Button className={'mr-16'} type={'button'} onClick={reset} danger outlined\r\n                                        back>Отменить</Button>\r\n                                <Button dark className={'mr-16'} type={'button'} onClick={prevStep}\r\n                                        outlined>Назад</Button>\r\n                                <Button type={'submit'} success>Продолжить</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default StepTwo;","import {includes} from \"lodash\";\r\n\r\nconst addDetectClick =  ({setOpen,classNames = []}) => {\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (!classNames.some(className => e.target.classList.contains(className))) {\r\n            setOpen(false);\r\n        }\r\n    });\r\n}\r\nconst removeDetectClick = () => {\r\n    window.removeEventListener('click',addDetectClick,false);\r\n}\r\n\r\nconst hasAccess = (roles = [], can = '') => {\r\n    let access = false;\r\n    if (includes(roles, can)) {\r\n        access = true;\r\n    }\r\n    return access;\r\n}\r\n\r\n\r\nconst getSelectOptionsListFromData = (data = [], value = 'id', label = 'title') => {\r\n    return data.map(item => ({ value: item[value], label: item[label] })) || [];\r\n}\r\n\r\n\r\nexport {\r\n    addDetectClick,\r\n    removeDetectClick,\r\n    hasAccess,\r\n    getSelectOptionsListFromData\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Download = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"7 10 12 15 17 10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"15\",\n    x2: \"12\",\n    y2: \"3\"\n  }));\n});\nDownload.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nDownload.displayName = 'Download';\nexport default Download;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports,require(\"react\")):\"function\"==typeof define&&define.amd?define([\"exports\",\"react\"],n):n((t=t||self).ReactStepWizard={},t.React)}(this,function(t,o){\"use strict\";var i=\"default\"in o?o.default:o;function s(t){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function c(t,n){for(var e=0;e<n.length;e++){var a=n[e];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function p(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,n){return(f=Object.setPrototypeOf||function(t,n){return t.__proto__=n,t})(t,n)}function u(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function l(e){var a=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}();return function(){var t,n=r(e);return t=a?(t=r(this).constructor,Reflect.construct(n,arguments,t)):n.apply(this,arguments),n=this,!(t=t)||\"object\"!=typeof t&&\"function\"!=typeof t?u(n):t}}function n(t,n){var e,a=(n=void 0===n?{}:n).insertAt;t&&\"undefined\"!=typeof document&&(e=document.head||document.getElementsByTagName(\"head\")[0],(n=document.createElement(\"style\")).type=\"text/css\",\"top\"===a&&e.firstChild?e.insertBefore(n,e.firstChild):e.appendChild(n),n.styleSheet?n.styleSheet.cssText=t:n.appendChild(document.createTextNode(t)))}var d={animated:\"rsw_1z\",fadeInRight:\"rsw_1M\",fadeInLeft:\"rsw_19\",fadeOutRight:\"rsw_3C\",fadeOutLeft:\"rsw_1u\"};n(\"/**\\n * Snippets from animate.css\\n * Credit goes to https://github.com/daneden\\n * github.com/daneden/animate.css\\n*/\\n.rsw_1z {\\n  -webkit-animation-duration: .8192s;\\n  animation-duration: .8192s;\\n  -webkit-animation-fill-mode: backwards;\\n  animation-fill-mode: backwards;\\n}\\n\\n/** fadeInRight */\\n@-webkit-keyframes rsw_1M {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n@keyframes rsw_1M {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n.rsw_1M {\\n  -webkit-animation-name: rsw_1M;\\n  animation-name: rsw_1M;\\n}\\n\\n/** fadeInLeft */\\n@-webkit-keyframes rsw_19 {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n@keyframes rsw_19 {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    -webkit-transform: none;\\n    transform: none;\\n  }\\n}\\n\\n.rsw_19 {\\n  -webkit-animation-name: rsw_19;\\n  animation-name: rsw_19;\\n}\\n\\n/** fadeOutRight */\\n@-webkit-keyframes rsw_3C {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n}\\n\\n@keyframes rsw_3C {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(100%, 0, 0);\\n    transform: translate3d(100%, 0, 0);\\n  }\\n}\\n\\n.rsw_3C {\\n  -webkit-animation-name: rsw_3C;\\n  animation-name: rsw_3C;\\n}\\n\\n/** fadeOutLeft */\\n@-webkit-keyframes rsw_1u {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n}\\n\\n@keyframes rsw_1u {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    -webkit-transform: translate3d(-100%, 0, 0);\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n}\\n\\n.rsw_1u {\\n  -webkit-animation-name: rsw_1u;\\n  animation-name: rsw_1u;\\n}\\n\");var m=\"rsw_2Y\",a=\"rsw_2f\",h=\"rsw_3G\";n(\"/** Step Wizard */\\n.rsw_2Y {\\n    position: relative;\\n}\\n\\n.rsw_2f {\\n    opacity: 0;\\n    pointer-events: none;\\n    position: absolute;\\n    top: 0;\\n    width: 100%;\\n    z-index: 0;\\n}\\n\\n.rsw_3G {\\n    opacity: 1;\\n    pointer-events: inherit;\\n    position: relative;\\n    z-index: 1;\\n}\\n\");var e=function(){!function(t,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),n&&f(t,n)}(r,o.PureComponent);var t,n,e,a=l(r);function r(t){var o;return function(t,n){if(!(t instanceof n))throw new TypeError(\"Cannot call a class as a function\")}(this,r),p(u(o=a.call(this,t)),\"initialState\",function(){var e={activeStep:0,classes:{},hashKeys:{},namedSteps:{}},t=\"object\"===(\"undefined\"==typeof window?\"undefined\":s(window))?o.getHash():\"\",n=o.getSteps();n.forEach(function(t,n){e.hashKeys[n]=t.props&&t.props.hashKey||\"step\".concat(n+1),e.hashKeys[e.hashKeys[n]]=n,e.namedSteps[n]=t.props&&t.props.stepName||\"step\".concat(n+1),e.namedSteps[e.namedSteps[n]]=n});var a=o.props.initialStep-1;return a&&n[a]&&(e.activeStep=a),o.props.isHashEnabled&&t&&void 0!==e.hashKeys[t]&&(e.activeStep=e.hashKeys[t]),o.props.transitions&&(e.classes[e.activeStep]=o.props.transitions.intro||\"\"),e}),p(u(o),\"getHash\",function(){return decodeURI(window.location.hash).replace(/^#/,\"\")}),p(u(o),\"getTransitions\",function(){return o.props.transitions||{enterRight:\"\".concat(d.animated,\" \").concat(d.fadeInRight),enterLeft:\"\".concat(d.animated,\" \").concat(d.fadeInLeft),exitRight:\"\".concat(d.animated,\" \").concat(d.fadeOutRight),exitLeft:\"\".concat(d.animated,\" \").concat(d.fadeOutLeft)}}),p(u(o),\"onHashChange\",function(){o.setActiveStep(o.state.hashKeys[o.getHash()]||0)}),p(u(o),\"isInvalidStep\",function(t){return t<0||t>=o.totalSteps}),p(u(o),\"setActiveStep\",function(t){var n,e,a=o.state.activeStep;a!==t&&(o.isInvalidStep(t)?\"production\"!==process.env.NODE_ENV&&console.error(\"\".concat(t+1,\" is an invalid step\")):(n=o.state.classes,e=o.getTransitions(),a<t?(n[a]=e.exitLeft,n[t]=e.enterRight):(n[a]=e.exitRight,n[t]=e.enterLeft),o.setState({activeStep:t,classes:n},function(){o.onStepChange({previousStep:a+1,activeStep:t+1})})))}),p(u(o),\"onStepChange\",function(t){o.props.onStepChange(t),o.props.isHashEnabled&&o.updateHash(o.state.activeStep)}),p(u(o),\"getSteps\",function(){return i.Children.toArray(o.props.children)}),p(u(o),\"firstStep\",function(){return o.goToStep(1)}),p(u(o),\"lastStep\",function(){return o.goToStep(o.totalSteps)}),p(u(o),\"nextStep\",function(){return o.setActiveStep(o.state.activeStep+1)}),p(u(o),\"previousStep\",function(){return o.setActiveStep(o.state.activeStep-1)}),p(u(o),\"goToStep\",function(t){o.props.isHashEnabled&&\"string\"==typeof t&&void 0!==o.state.hashKeys[t]?o.setActiveStep(o.state.hashKeys[t]):o.setActiveStep(t-1)}),p(u(o),\"goToNamedStep\",function(t){\"string\"==typeof t&&void 0!==o.state.namedSteps[t]?o.setActiveStep(o.state.namedSteps[t]):console.error('Cannot find step with name \"'.concat(t,'\"'))}),p(u(o),\"updateHash\",function(t){window.location.hash=o.state.hashKeys[t]}),p(u(o),\"isReactComponent\",function(t){t=t.type;return\"function\"==typeof t||\"object\"===s(t)}),o.state=o.initialState(),o}return t=r,(n=[{key:\"componentDidMount\",value:function(){this.props.isHashEnabled&&window.addEventListener(\"hashchange\",this.onHashChange),this.props.instance(this)}},{key:\"componentWillUnmount\",value:function(){this.props.isHashEnabled&&window.removeEventListener(\"hashchange\",this.onHashChange)}},{key:\"currentStep\",get:function(){return this.state.activeStep+1}},{key:\"totalSteps\",get:function(){return this.getSteps().length}},{key:\"render\",value:function(){var e=this,a={currentStep:this.currentStep,totalSteps:this.totalSteps,nextStep:this.nextStep,previousStep:this.previousStep,goToStep:this.goToStep,goToNamedStep:this.goToNamedStep,firstStep:this.firstStep,lastStep:this.lastStep},o=this.state.classes,t=i.Children.map(this.getSteps(),function(t,n){return t?(a.isActive=n===e.state.activeStep,a.transitions=o[n],!e.props.isLazyMount||e.props.isLazyMount&&a.isActive?i.createElement(y,a,e.isReactComponent(t)?i.cloneElement(t,a):t):null):null});return i.createElement(\"div\",{className:this.props.className},this.props.nav&&i.cloneElement(this.props.nav,a),i.createElement(\"div\",{className:m},t))}}])&&c(t.prototype,n),e&&c(t,e),r}();e.defaultProps={children:[],className:null,initialStep:1,instance:function(){},isHashEnabled:!1,isLazyMount:!1,nav:null,onStepChange:function(){},transitions:void 0};var y=function(t){var n=t.children,e=t.isActive,t=t.transitions;return i.createElement(\"div\",{className:\"\".concat(a,\" \").concat(t,\" \").concat(e?h:\"\").trim()},n)};process.env.NODE_ENV,y.defaultProps={children:[],isActive:!1,transitions:\"\"},t.Step=y,t.default=e,Object.defineProperty(t,\"__esModule\",{value:!0})});\n"],"names":["Styled","styled","children","rest","fluid","useForm","register","handleSubmit","t","useTranslation","onSubmit","data","console","log","placeholder","type","className","step","steps","map","item","i","classNames","active","includes","range","length","size","color","thead","hideThead","hidden","th","w","sm","css","useState","width","setWidth","useEffect","ref","current","clientWidth","useRef","id","props","resetProduct","useSettingsStore","state","get","resetRiskList","product","usePostQuery","listKeyId","KEYS","createProduct","mutate","isLoading","usePutQuery","updateProduct","updateLoading","groups","useGetAllQuery","key","url","URLS","getSelectOptionsListFromData","subGroups","insurances","status","polices","persons","payments","policyformats","applicationformdocs","contractform","additionaldocuments","findItem","items","multiple","filter","label","join","find","isEqual","xs","formRequest","attributes","onSuccess","nextStep","onError","href","target","download","onClick","firstStep","danger","outlined","back","dark","previousStep","success","riskOptions","fields","setFields","agentlist","limitofagreement","Isagreement","tariffperclasses","tarif","setTarif","tariffList","setTariffList","setProduct","agents","classes","classOptions","risks","risksOptions","franchises","baseFranchises","list","l","getValueFromField","value","name","prev","setWith","align","options","defaultValue","property","result","tariff","isNil","toast","res","min","max","hideLabel","bgColor","isDisabled","justify","suffix","c","j","disabled","f","removeTariffFromList","StepOne","riskItem","setRiskItem","productGroupId","setProductGroupId","riskTypeId","setRiskTypeId","addRiskList","removeRiskList","riskList","isEmpty","classeId","risk","riskgroup","useGetOneQuery","enabled","sectors","riskGroups","risksList","risksData","insuranceClassesList","insuranceClasses","params","required","hasRequiredLabel","classItem","head","some","values","val","memo","src","alt","to","Isfixedpolicyholder","Isfixedbeneficiary","Isfixedpremium","Isfixedrate","Isfixedsuminsured","Isfixedfee","Isfixedpreventivemeasures","show","setShow","refunds","claimSettlements","isapplicationform","iscontractform","Isadditionaldocuments","deleteApplicationFormDocs","useDeleteQuery","deleteContactForm","deleteAdditionalDocs","file","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Download","forwardRef","_ref","_ref$color","_ref$size","React","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","propTypes","PropTypes","displayName","Trash2","o","default","s","Symbol","iterator","constructor","n","e","a","enumerable","configurable","writable","defineProperty","p","r","setPrototypeOf","getPrototypeOf","__proto__","u","ReferenceError","Reflect","construct","sham","Proxy","Boolean","valueOf","insertAt","document","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","animated","fadeInRight","fadeInLeft","fadeOutRight","fadeOutLeft","m","h","TypeError","create","PureComponent","activeStep","hashKeys","namedSteps","window","getHash","getSteps","forEach","hashKey","concat","stepName","initialStep","isHashEnabled","transitions","intro","decodeURI","location","hash","replace","enterRight","enterLeft","exitRight","exitLeft","setActiveStep","totalSteps","isInvalidStep","getTransitions","setState","onStepChange","updateHash","Children","toArray","goToStep","error","initialState","addEventListener","onHashChange","instance","removeEventListener","currentStep","goToNamedStep","lastStep","isActive","isLazyMount","y","isReactComponent","cloneElement","nav","defaultProps","trim","Step","exports","require"],"sourceRoot":""}