{"version":3,"file":"static/js/8300.6516c68c.chunk.js","mappings":"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","sources":["modules/products/containers/AgreementViewContainer.jsx","modules/products/pages/AgreementViewPage.jsx"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport {Row, Col} from \"react-grid-system\";\r\nimport Section from \"../../../components/section\";\r\nimport Title from \"../../../components/ui/title\";\r\nimport {get} from \"lodash\";\r\nimport {useDeleteQuery, useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {KEYS} from \"../../../constants/key\";\r\nimport {URLS} from \"../../../constants/url\";\r\nimport {ContentLoader, OverlayLoader} from \"../../../components/loader\";\r\nimport Table from \"../../../components/table\";\r\nimport {useStore} from \"../../../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"../../../components/ui/button\";\r\nimport {Trash2} from \"react-feather\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst AgentViewContainer = ({...rest}) => {\r\n    const {t} = useTranslation();\r\n    const {id} = useParams()\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = useState(false);\r\n    let {data, isLoading, isError} = useGetOneQuery({id, key: KEYS.agreements, url: URLS.agreements})\r\n    let {data:policyData, isLoading:policyIsLoading} = useGetAllQuery({id, key: KEYS.policyFilter, url: URLS.policyFilter,params:{\r\n            params:{\r\n                agreementsId:id\r\n            }\r\n        }})\r\n    let {data:endorsementData, isLoading:endorsementIsLoading} = useGetOneQuery({id, key: KEYS.endorsementFilter, url: URLS.endorsementFilter})\r\n    const {mutate: createPolicy, isLoadingPolicy} = usePostQuery({listKeyId: KEYS.agreements})\r\n    const {mutate: deleteRequest, isLoading: deleteLoading} = useDeleteQuery({listKeyId: KEYS.policyFilter})\r\n    const {mutate: deleteEndorsementRequest, isLoading: deleteEndorsementLoading} = useDeleteQuery({listKeyId: KEYS.endorsementFilter})\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: t('Agreements'),\r\n            path: '/agreements',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: id,\r\n            path: '#',\r\n        }\r\n    ], [data])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    const addPolicy = (data) => {\r\n        createPolicy({url: URLS.policy, attributes: {...data, agreementsId: id, copyofdocuments: 'xxxxxxxxx'}}, {\r\n            onSuccess: () => {\r\n                setOpen(false);\r\n            },\r\n            onError: () => {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const remove = (id) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            backdrop: 'rgba(0,0,0,0.9)',\r\n            background: 'none',\r\n            title: t('Are you sure?'),\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#13D6D1',\r\n            confirmButtonText: t('Delete'),\r\n            cancelButtonText:t('Cancel'),\r\n            customClass: {\r\n                title: 'title-color',\r\n            },\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteRequest({url: `${URLS.policy}/${id}`})\r\n            }\r\n        });\r\n    }\r\n\r\n    const removeEndorsement = (id) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            backdrop: 'rgba(0,0,0,0.9)',\r\n            background: 'none',\r\n            title: t('Are you sure?'),\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#13D6D1',\r\n            confirmButtonText: t('Delete'),\r\n            cancelButtonText:t('Cancel'),\r\n            customClass: {\r\n                title: 'title-color',\r\n            },\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteEndorsementRequest({url: `${URLS.endorsements}/${id}`})\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    if (isLoading || deleteLoading || policyIsLoading || endorsementIsLoading || deleteEndorsementLoading) {\r\n       return <OverlayLoader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Section>\r\n                <Row className={''} align={'center'}>\r\n                    <Col xs={12}>\r\n                        <Title>Agreement view</Title>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"groupofproductsId\")}</td>\r\n                                <td><strong>{get(data, \"data.data.groupofproductsId.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"subgroupofproductsId\")}</td>\r\n                                <td><strong>{get(data, \"data.data.subgroupofproductsId.name\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"products\")}</td>\r\n                                <td><strong>{get(data, \"data.data.products.productname\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"startofinsurance\")}</td>\r\n                                <td>\r\n                                    <strong>{dayjs(get(data, \"data.data.startofinsurance\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"endofinsurance\")}</td>\r\n                                <td><strong>{dayjs(get(data, \"data.data.endofinsurance\")).format(\"DD/MM/YYYY\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>{t(\"clinets\")}</td>\r\n                                <td><strong>{get(data, \"data.data.clinets.forindividualsdata.name\")}</strong></td>\r\n                            </tr>\r\n\r\n\r\n                        </Table>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Table thead={['1', '2']}>\r\n                            <tr>\r\n                                <td>{t(\"whoaccepted\")}</td>\r\n                                <td><strong>{get(data, \"data.data.whoaccepted\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"totalinsurancepremium\")}</td>\r\n                                <td><strong>{get(data, \"data.data.totalinsurancepremium\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"totalsuminsured\")}</td>\r\n                                <td><strong>{get(data, \"data.data.totalsuminsured\")}</strong></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{t(\"paidinsurancepremium\")}</td>\r\n                                <td><strong>{get(data, \"data.data.paidinsurancepremium\")}</strong></td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                <Row className={'mt-15'}>\r\n                    <Col xs={6}>\r\n                        <Row align={'center'}>\r\n                            <Col xs={8}><Title sm>Полис</Title></Col>\r\n                            <Col xs={4} className={'text-right'}>\r\n                                <Button green onClick={() => navigate(`/policy/create/${id}`)} className={'mr-16'} type={'button'}>Добавить\r\n                                    полис</Button>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={'mt-15'}>\r\n                            {get(policyData, \"data.data\", []).length > 0 && <Col xs={12}>\r\n                                <hr/>\r\n                                <Table hideThead={false}\r\n                                       thead={['Policy number',  'Issue date', 'Action']}>\r\n                                    {get(policyData, \"data.data\", []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>\r\n                                            {get(item, 'policy_number', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {dayjs(get(item, 'dateofissue')).format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                        <td className={'cursor-pointer'}\r\n                                            onClick={() => remove(get(item, '_id', null))}>\r\n                                            <Trash2 color={'#dc2626'}/>\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </Table>\r\n                            </Col>\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <Row align={'center'}>\r\n                            <Col xs={8}> <Title sm>Индосаменты</Title></Col>\r\n                            <Col xs={4} className={'text-right'}> <Button onClick={() => navigate(`/endorsement/create/${id}`)} green type={'button'}>Добавить\r\n                                индосаменты</Button></Col>\r\n                        </Row>\r\n                        <Row className={'mt-15'}>\r\n                            {get(endorsementData, \"data.data\", []).length > 0 && <Col xs={12}>\r\n                                <hr/>\r\n                                <Table hideThead={false}\r\n                                       thead={['Type', 'Status', 'Conclusion', 'Action']}>\r\n                                    {get(endorsementData, \"data.data\", []).map((item, i) => <tr key={i + 1}>\r\n                                        <td>\r\n                                            {get(item, 'typeofendorsements.name', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {get(item, 'statusofendorsements.name', '-')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {get(item, 'reqforconclusion', '-')}\r\n                                        </td>\r\n                                        <td className={'cursor-pointer'}\r\n                                            onClick={() => removeEndorsement(get(item, '_id', null))}>\r\n                                            <Trash2 color={'#dc2626'}/>\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </Table>\r\n                            </Col>\r\n                            }\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Section>\r\n        </>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default AgentViewContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport AgreementViewContainer from \"../containers/AgreementViewContainer\";\r\n\r\n\r\nconst Styled = styled.div`\r\n  .box__outlined{\r\n    border:1px dotted #BABABA;\r\n    padding: 15px;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\nconst AgentViewPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <AgreementViewContainer />\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default AgentViewPage;"],"names":["t","useTranslation","id","useParams","navigate","useNavigate","useState","useGetOneQuery","key","KEYS","url","URLS","data","isLoading","isError","useGetAllQuery","params","agreementsId","policyData","policyIsLoading","endorsementData","endorsementIsLoading","usePostQuery","listKeyId","mutate","isLoadingPolicy","useDeleteQuery","deleteRequest","deleteLoading","deleteEndorsementRequest","deleteEndorsementLoading","setBreadcrumbs","useStore","state","get","breadcrumbs","useMemo","title","path","useEffect","className","align","xs","thead","dayjs","format","sm","green","onClick","type","length","hideThead","map","item","i","Swal","position","icon","backdrop","background","showConfirmButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","customClass","then","result","isConfirmed","remove","color","removeEndorsement","Styled","styled","rest","AgreementViewContainer"],"sourceRoot":""}